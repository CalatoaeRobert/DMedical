{
  "contractName": "Appointments",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrationA",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "startingHour",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dateString",
          "type": "string"
        }
      ],
      "name": "AppointmentAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dateString",
              "type": "string"
            }
          ],
          "internalType": "struct Appointments.Appointment",
          "name": "appointment",
          "type": "tuple"
        }
      ],
      "name": "addAppointment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAppointmentsOfDoctor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dateString",
              "type": "string"
            }
          ],
          "internalType": "struct Appointments.Appointment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAppointmentsOfPatient",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dateString",
              "type": "string"
            }
          ],
          "internalType": "struct Appointments.Appointment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPatientsOfADoctor",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDoctorsOfAPatient",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "day",
          "type": "string"
        }
      ],
      "name": "getAppointmentsInADay",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrationA\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"startingHour\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dateString\",\"type\":\"string\"}],\"name\":\"AppointmentAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"startingHour\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateString\",\"type\":\"string\"}],\"internalType\":\"struct Appointments.Appointment\",\"name\":\"appointment\",\"type\":\"tuple\"}],\"name\":\"addAppointment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"day\",\"type\":\"string\"}],\"name\":\"getAppointmentsInADay\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAppointmentsOfDoctor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"startingHour\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateString\",\"type\":\"string\"}],\"internalType\":\"struct Appointments.Appointment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAppointmentsOfPatient\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"startingHour\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dateString\",\"type\":\"string\"}],\"internalType\":\"struct Appointments.Appointment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDoctorsOfAPatient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPatientsOfADoctor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Licenta/Licenta/src/contracts/Appointments.sol\":\"Appointments\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Licenta/Licenta/src/contracts/Appointments.sol\":{\"keccak256\":\"0xcef4d161e42444363e0f3818c9aa9792aa4192e2396b2df204c671529d662504\",\"urls\":[\"bzz-raw://39afe56c2ebe73fbf0d805c1fe8c8482a0f86235a214ba5194c063eeb9cdb4ef\",\"dweb:/ipfs/QmVnhn15GtHydVCZszMJNixibPsRk73sa1d3KHvAoYamuz\"]},\"/C/Licenta/Licenta/src/contracts/Registration.sol\":{\"keccak256\":\"0x5f8b2804d5361e134d6dadd9056f2b6baac7287cf79e18bfa496e613dad13f55\",\"urls\":[\"bzz-raw://374c169ce8bd6bda201aa3e37d3f2471dc5eb426522a5e070fef36228ddbc5c0\",\"dweb:/ipfs/QmegUwpvd9LCKvNvQfxBcw13bxD6FdvKSZSy8Nb7Cuv7bV\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda1319db846d6d6f92d8a57a9bdee8bde1dc39aa7546165791692c24dd6f30a\",\"dweb:/ipfs/Qma5oZ7DmbdAjd8mpiW7mx896PDtwsQtCQ2hj9Upf7b7JK\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002cfd38038062002cfd833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b612af1806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806372a0346311610097578063d547741f11610066578063d547741f146102bf578063e7e9ee86146102db578063eb07dcd11461030b578063f2fde38b1461033b57610100565b806372a03463146102375780638da5cb5b1461025357806391d1485414610271578063a217fddf146102a157610100565b80632f2ff15d116100d35780632f2ff15d146101c557806336568abe146101e157806358b69799146101fd578063715018a61461022d57610100565b806301ffc9a7146101055780631128dc8a14610135578063248a9ca3146101655780632dcba4e514610195575b600080fd5b61011f600480360381019061011a9190611e5e565b610357565b60405161012c9190612448565b60405180910390f35b61014f600480360381019061014a9190611d7c565b6103d1565b60405161015c9190612426565b60405180910390f35b61017f600480360381019061017a9190611df9565b610649565b60405161018c9190612463565b60405180910390f35b6101af60048036038101906101aa9190611da5565b610669565b6040516101bc9190612404565b60405180910390f35b6101df60048036038101906101da9190611e22565b61079e565b005b6101fb60048036038101906101f69190611e22565b6107c7565b005b61021760048036038101906102129190611d7c565b61084a565b6040516102249190612426565b60405180910390f35b610235610ac2565b005b610251600480360381019061024c9190611ec8565b610b4a565b005b61025b611118565b6040516102689190612366565b60405180910390f35b61028b60048036038101906102869190611e22565b611141565b6040516102989190612448565b60405180910390f35b6102a96111ac565b6040516102b69190612463565b60405180910390f35b6102d960048036038101906102d49190611e22565b6111b3565b005b6102f560048036038101906102f09190611d7c565b6111dc565b60405161030291906123e2565b60405180910390f35b61032560048036038101906103209190611d7c565b6112a9565b60405161033291906123e2565b60405180910390f35b61035560048036038101906103509190611d7c565b611376565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ca57506103c98261146e565b5b9050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561063e57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461051b906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610547906127f3565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b505050505081526020016004820180546105ad906127f3565b80601f01602080910402602001604051908101604052809291908181526020018280546105d9906127f3565b80156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b50505050508152505081526020019060010190610432565b505050509050919050565b600060016000838152602001908152602001600020600101549050919050565b6060600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040516106b89190612300565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610792578382906000526020600020018054610705906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610731906127f3565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050815260200190600101906106e6565b50505050905092915050565b6107a782610649565b6107b8816107b36114d8565b6114e0565b6107c2838361157d565b505050565b6107cf6114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390612500565b60405180910390fd5b610846828261165d565b5050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab757838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610994906127f3565b80601f01602080910402602001604051908101604052809291908181526020018280546109c0906127f3565b8015610a0d5780601f106109e257610100808354040283529160200191610a0d565b820191906000526020600020905b8154815290600101906020018083116109f057829003601f168201915b50505050508152602001600482018054610a26906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a52906127f3565b8015610a9f5780601f10610a7457610100808354040283529160200191610a9f565b820191906000526020600020905b815481529060010190602001808311610a8257829003601f168201915b505050505081525050815260200190600101906108ab565b505050509050919050565b610aca6114d8565b73ffffffffffffffffffffffffffffffffffffffff16610ae8611118565b73ffffffffffffffffffffffffffffffffffffffff1614610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b35906124e0565b60405180910390fd5b610b48600061173f565b565b604051602001610b5990612351565b60405160208183030381529060405280519060200120600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b8152600401610bca9190612366565b60006040518083038186803b158015610be257600080fd5b505afa158015610bf6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c1f9190611e87565b604051602001610c2f9190612300565b6040516020818303038152906040528051906020012014610c4f57600080fd5b60026000826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610d70929190611afd565b506080820151816004019080519060200190610d8d929190611afd565b50505060046000826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081602001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610f59929190611afd565b506080820151816004019080519060200190610f76929190611afd565b50505060056000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060066000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081608001516040516110769190612300565b908152602001604051809103902081606001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906110c1929190611afd565b507fe06ebeea65a938b27463490d13f9032c40c142734e2c772f7938dfaf0fa219828160000151826020015183604001518460600151856080015160405161110d959493929190612381565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6111bc82610649565b6111cd816111c86114d8565b6114e0565b6111d7838361165d565b505050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561129d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611253575b50505050509050919050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561136a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611320575b50505050509050919050565b61137e6114d8565b73ffffffffffffffffffffffffffffffffffffffff1661139c611118565b73ffffffffffffffffffffffffffffffffffffffff16146113f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e9906124e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611462576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611459906124c0565b60405180910390fd5b61146b8161173f565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6114ea8282611141565b6115795761150f8173ffffffffffffffffffffffffffffffffffffffff166014611803565b61151d8360001c6020611803565b60405160200161152e929190612317565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611570919061247e565b60405180910390fd5b5050565b6115878282611141565b61165957600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115fe6114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6116678282611141565b1561173b5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116e06114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606000600283600261181691906126af565b6118209190612659565b67ffffffffffffffff81111561185f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118915781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106118ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611979577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026119b991906126af565b6119c39190612659565b90505b6001811115611aaf577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611a2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110611a68577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611aa8906127c9565b90506119c6565b5060008414611af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aea906124a0565b60405180910390fd5b8091505092915050565b828054611b09906127f3565b90600052602060002090601f016020900481019282611b2b5760008555611b72565b82601f10611b4457805160ff1916838001178555611b72565b82800160010185558215611b72579182015b82811115611b71578251825591602001919060010190611b56565b5b509050611b7f9190611b83565b5090565b5b80821115611b9c576000816000905550600101611b84565b5090565b6000611bb3611bae84612545565b612520565b905082815260208101848484011115611bcb57600080fd5b611bd6848285612787565b509392505050565b6000611bf1611bec84612545565b612520565b905082815260208101848484011115611c0957600080fd5b611c14848285612796565b509392505050565b600081359050611c2b81612a5f565b92915050565b600081359050611c4081612a76565b92915050565b600081359050611c5581612a8d565b92915050565b600082601f830112611c6c57600080fd5b8135611c7c848260208601611ba0565b91505092915050565b600082601f830112611c9657600080fd5b8151611ca6848260208601611bde565b91505092915050565b600060a08284031215611cc157600080fd5b611ccb60a0612520565b90506000611cdb84828501611c1c565b6000830152506020611cef84828501611c1c565b6020830152506040611d0384828501611d67565b604083015250606082013567ffffffffffffffff811115611d2357600080fd5b611d2f84828501611c5b565b606083015250608082013567ffffffffffffffff811115611d4f57600080fd5b611d5b84828501611c5b565b60808301525092915050565b600081359050611d7681612aa4565b92915050565b600060208284031215611d8e57600080fd5b6000611d9c84828501611c1c565b91505092915050565b60008060408385031215611db857600080fd5b6000611dc685828601611c1c565b925050602083013567ffffffffffffffff811115611de357600080fd5b611def85828601611c5b565b9150509250929050565b600060208284031215611e0b57600080fd5b6000611e1984828501611c31565b91505092915050565b60008060408385031215611e3557600080fd5b6000611e4385828601611c31565b9250506020611e5485828601611c1c565b9150509250929050565b600060208284031215611e7057600080fd5b6000611e7e84828501611c46565b91505092915050565b600060208284031215611e9957600080fd5b600082015167ffffffffffffffff811115611eb357600080fd5b611ebf84828501611c85565b91505092915050565b600060208284031215611eda57600080fd5b600082013567ffffffffffffffff811115611ef457600080fd5b611f0084828501611caf565b91505092915050565b6000611f158383611f49565b60208301905092915050565b6000611f2d83836120cd565b905092915050565b6000611f418383612265565b905092915050565b611f5281612709565b82525050565b611f6181612709565b82525050565b6000611f72826125a6565b611f7c81856125f9565b9350611f8783612576565b8060005b83811015611fb8578151611f9f8882611f09565b9750611faa836125d2565b925050600181019050611f8b565b5085935050505092915050565b6000611fd0826125b1565b611fda818561260a565b935083602082028501611fec85612586565b8060005b8581101561202857848403895281516120098582611f21565b9450612014836125df565b925060208a01995050600181019050611ff0565b50829750879550505050505092915050565b6000612045826125bc565b61204f818561261b565b93508360208202850161206185612596565b8060005b8581101561209d578484038952815161207e8582611f35565b9450612089836125ec565b925060208a01995050600181019050612065565b50829750879550505050505092915050565b6120b88161271b565b82525050565b6120c781612727565b82525050565b60006120d8826125c7565b6120e2818561262c565b93506120f2818560208601612796565b6120fb816128e3565b840191505092915050565b6000612111826125c7565b61211b818561263d565b935061212b818560208601612796565b612134816128e3565b840191505092915050565b600061214a826125c7565b612154818561264e565b9350612164818560208601612796565b80840191505092915050565b600061217d60208361263d565b9150612188826128f4565b602082019050919050565b60006121a060268361263d565b91506121ab8261291d565b604082019050919050565b60006121c360208361263d565b91506121ce8261296c565b602082019050919050565b60006121e660178361264e565b91506121f182612995565b601782019050919050565b600061220960078361264e565b9150612214826129be565b600782019050919050565b600061222c60118361264e565b9150612237826129e7565b601182019050919050565b600061224f602f8361263d565b915061225a82612a10565b604082019050919050565b600060a08301600083015161227d6000860182611f49565b5060208301516122906020860182611f49565b5060408301516122a360408601826122e2565b50606083015184820360608601526122bb82826120cd565b915050608083015184820360808601526122d582826120cd565b9150508091505092915050565b6122eb8161277d565b82525050565b6122fa8161277d565b82525050565b600061230c828461213f565b915081905092915050565b6000612322826121d9565b915061232e828561213f565b91506123398261221f565b9150612345828461213f565b91508190509392505050565b600061235c826121fc565b9150819050919050565b600060208201905061237b6000830184611f58565b92915050565b600060a0820190506123966000830188611f58565b6123a36020830187611f58565b6123b060408301866122f1565b81810360608301526123c28185612106565b905081810360808301526123d68184612106565b90509695505050505050565b600060208201905081810360008301526123fc8184611f67565b905092915050565b6000602082019050818103600083015261241e8184611fc5565b905092915050565b60006020820190508181036000830152612440818461203a565b905092915050565b600060208201905061245d60008301846120af565b92915050565b600060208201905061247860008301846120be565b92915050565b600060208201905081810360008301526124988184612106565b905092915050565b600060208201905081810360008301526124b981612170565b9050919050565b600060208201905081810360008301526124d981612193565b9050919050565b600060208201905081810360008301526124f9816121b6565b9050919050565b6000602082019050818103600083015261251981612242565b9050919050565b600061252a61253b565b90506125368282612825565b919050565b6000604051905090565b600067ffffffffffffffff8211156125605761255f6128b4565b5b612569826128e3565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006126648261277d565b915061266f8361277d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126a4576126a3612856565b5b828201905092915050565b60006126ba8261277d565b91506126c58361277d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126fe576126fd612856565b5b828202905092915050565b60006127148261275d565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156127b4578082015181840152602081019050612799565b838111156127c3576000848401525b50505050565b60006127d48261277d565b915060008214156127e8576127e7612856565b5b600182039050919050565b6000600282049050600182168061280b57607f821691505b6020821081141561281f5761281e612885565b5b50919050565b61282e826128e3565b810181811067ffffffffffffffff8211171561284d5761284c6128b4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f50415449454e5400000000000000000000000000000000000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b612a6881612709565b8114612a7357600080fd5b50565b612a7f81612727565b8114612a8a57600080fd5b50565b612a9681612731565b8114612aa157600080fd5b50565b612aad8161277d565b8114612ab857600080fd5b5056fea26469706673582212209dfeae815a629ead42b28243f629bf253da0e62d8c7529e0403ed7a7f17d385164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806372a0346311610097578063d547741f11610066578063d547741f146102bf578063e7e9ee86146102db578063eb07dcd11461030b578063f2fde38b1461033b57610100565b806372a03463146102375780638da5cb5b1461025357806391d1485414610271578063a217fddf146102a157610100565b80632f2ff15d116100d35780632f2ff15d146101c557806336568abe146101e157806358b69799146101fd578063715018a61461022d57610100565b806301ffc9a7146101055780631128dc8a14610135578063248a9ca3146101655780632dcba4e514610195575b600080fd5b61011f600480360381019061011a9190611e5e565b610357565b60405161012c9190612448565b60405180910390f35b61014f600480360381019061014a9190611d7c565b6103d1565b60405161015c9190612426565b60405180910390f35b61017f600480360381019061017a9190611df9565b610649565b60405161018c9190612463565b60405180910390f35b6101af60048036038101906101aa9190611da5565b610669565b6040516101bc9190612404565b60405180910390f35b6101df60048036038101906101da9190611e22565b61079e565b005b6101fb60048036038101906101f69190611e22565b6107c7565b005b61021760048036038101906102129190611d7c565b61084a565b6040516102249190612426565b60405180910390f35b610235610ac2565b005b610251600480360381019061024c9190611ec8565b610b4a565b005b61025b611118565b6040516102689190612366565b60405180910390f35b61028b60048036038101906102869190611e22565b611141565b6040516102989190612448565b60405180910390f35b6102a96111ac565b6040516102b69190612463565b60405180910390f35b6102d960048036038101906102d49190611e22565b6111b3565b005b6102f560048036038101906102f09190611d7c565b6111dc565b60405161030291906123e2565b60405180910390f35b61032560048036038101906103209190611d7c565b6112a9565b60405161033291906123e2565b60405180910390f35b61035560048036038101906103509190611d7c565b611376565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ca57506103c98261146e565b5b9050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561063e57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461051b906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610547906127f3565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b505050505081526020016004820180546105ad906127f3565b80601f01602080910402602001604051908101604052809291908181526020018280546105d9906127f3565b80156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b50505050508152505081526020019060010190610432565b505050509050919050565b600060016000838152602001908152602001600020600101549050919050565b6060600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040516106b89190612300565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610792578382906000526020600020018054610705906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610731906127f3565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050815260200190600101906106e6565b50505050905092915050565b6107a782610649565b6107b8816107b36114d8565b6114e0565b6107c2838361157d565b505050565b6107cf6114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390612500565b60405180910390fd5b610846828261165d565b5050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab757838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610994906127f3565b80601f01602080910402602001604051908101604052809291908181526020018280546109c0906127f3565b8015610a0d5780601f106109e257610100808354040283529160200191610a0d565b820191906000526020600020905b8154815290600101906020018083116109f057829003601f168201915b50505050508152602001600482018054610a26906127f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a52906127f3565b8015610a9f5780601f10610a7457610100808354040283529160200191610a9f565b820191906000526020600020905b815481529060010190602001808311610a8257829003601f168201915b505050505081525050815260200190600101906108ab565b505050509050919050565b610aca6114d8565b73ffffffffffffffffffffffffffffffffffffffff16610ae8611118565b73ffffffffffffffffffffffffffffffffffffffff1614610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b35906124e0565b60405180910390fd5b610b48600061173f565b565b604051602001610b5990612351565b60405160208183030381529060405280519060200120600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b8152600401610bca9190612366565b60006040518083038186803b158015610be257600080fd5b505afa158015610bf6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c1f9190611e87565b604051602001610c2f9190612300565b6040516020818303038152906040528051906020012014610c4f57600080fd5b60026000826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610d70929190611afd565b506080820151816004019080519060200190610d8d929190611afd565b50505060046000826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081602001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610f59929190611afd565b506080820151816004019080519060200190610f76929190611afd565b50505060056000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060066000826020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081608001516040516110769190612300565b908152602001604051809103902081606001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906110c1929190611afd565b507fe06ebeea65a938b27463490d13f9032c40c142734e2c772f7938dfaf0fa219828160000151826020015183604001518460600151856080015160405161110d959493929190612381565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6111bc82610649565b6111cd816111c86114d8565b6114e0565b6111d7838361165d565b505050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561129d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611253575b50505050509050919050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561136a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611320575b50505050509050919050565b61137e6114d8565b73ffffffffffffffffffffffffffffffffffffffff1661139c611118565b73ffffffffffffffffffffffffffffffffffffffff16146113f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e9906124e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611462576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611459906124c0565b60405180910390fd5b61146b8161173f565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6114ea8282611141565b6115795761150f8173ffffffffffffffffffffffffffffffffffffffff166014611803565b61151d8360001c6020611803565b60405160200161152e929190612317565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611570919061247e565b60405180910390fd5b5050565b6115878282611141565b61165957600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115fe6114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6116678282611141565b1561173b5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506116e06114d8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606000600283600261181691906126af565b6118209190612659565b67ffffffffffffffff81111561185f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118915781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106118ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611979577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026119b991906126af565b6119c39190612659565b90505b6001811115611aaf577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611a2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110611a68577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611aa8906127c9565b90506119c6565b5060008414611af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aea906124a0565b60405180910390fd5b8091505092915050565b828054611b09906127f3565b90600052602060002090601f016020900481019282611b2b5760008555611b72565b82601f10611b4457805160ff1916838001178555611b72565b82800160010185558215611b72579182015b82811115611b71578251825591602001919060010190611b56565b5b509050611b7f9190611b83565b5090565b5b80821115611b9c576000816000905550600101611b84565b5090565b6000611bb3611bae84612545565b612520565b905082815260208101848484011115611bcb57600080fd5b611bd6848285612787565b509392505050565b6000611bf1611bec84612545565b612520565b905082815260208101848484011115611c0957600080fd5b611c14848285612796565b509392505050565b600081359050611c2b81612a5f565b92915050565b600081359050611c4081612a76565b92915050565b600081359050611c5581612a8d565b92915050565b600082601f830112611c6c57600080fd5b8135611c7c848260208601611ba0565b91505092915050565b600082601f830112611c9657600080fd5b8151611ca6848260208601611bde565b91505092915050565b600060a08284031215611cc157600080fd5b611ccb60a0612520565b90506000611cdb84828501611c1c565b6000830152506020611cef84828501611c1c565b6020830152506040611d0384828501611d67565b604083015250606082013567ffffffffffffffff811115611d2357600080fd5b611d2f84828501611c5b565b606083015250608082013567ffffffffffffffff811115611d4f57600080fd5b611d5b84828501611c5b565b60808301525092915050565b600081359050611d7681612aa4565b92915050565b600060208284031215611d8e57600080fd5b6000611d9c84828501611c1c565b91505092915050565b60008060408385031215611db857600080fd5b6000611dc685828601611c1c565b925050602083013567ffffffffffffffff811115611de357600080fd5b611def85828601611c5b565b9150509250929050565b600060208284031215611e0b57600080fd5b6000611e1984828501611c31565b91505092915050565b60008060408385031215611e3557600080fd5b6000611e4385828601611c31565b9250506020611e5485828601611c1c565b9150509250929050565b600060208284031215611e7057600080fd5b6000611e7e84828501611c46565b91505092915050565b600060208284031215611e9957600080fd5b600082015167ffffffffffffffff811115611eb357600080fd5b611ebf84828501611c85565b91505092915050565b600060208284031215611eda57600080fd5b600082013567ffffffffffffffff811115611ef457600080fd5b611f0084828501611caf565b91505092915050565b6000611f158383611f49565b60208301905092915050565b6000611f2d83836120cd565b905092915050565b6000611f418383612265565b905092915050565b611f5281612709565b82525050565b611f6181612709565b82525050565b6000611f72826125a6565b611f7c81856125f9565b9350611f8783612576565b8060005b83811015611fb8578151611f9f8882611f09565b9750611faa836125d2565b925050600181019050611f8b565b5085935050505092915050565b6000611fd0826125b1565b611fda818561260a565b935083602082028501611fec85612586565b8060005b8581101561202857848403895281516120098582611f21565b9450612014836125df565b925060208a01995050600181019050611ff0565b50829750879550505050505092915050565b6000612045826125bc565b61204f818561261b565b93508360208202850161206185612596565b8060005b8581101561209d578484038952815161207e8582611f35565b9450612089836125ec565b925060208a01995050600181019050612065565b50829750879550505050505092915050565b6120b88161271b565b82525050565b6120c781612727565b82525050565b60006120d8826125c7565b6120e2818561262c565b93506120f2818560208601612796565b6120fb816128e3565b840191505092915050565b6000612111826125c7565b61211b818561263d565b935061212b818560208601612796565b612134816128e3565b840191505092915050565b600061214a826125c7565b612154818561264e565b9350612164818560208601612796565b80840191505092915050565b600061217d60208361263d565b9150612188826128f4565b602082019050919050565b60006121a060268361263d565b91506121ab8261291d565b604082019050919050565b60006121c360208361263d565b91506121ce8261296c565b602082019050919050565b60006121e660178361264e565b91506121f182612995565b601782019050919050565b600061220960078361264e565b9150612214826129be565b600782019050919050565b600061222c60118361264e565b9150612237826129e7565b601182019050919050565b600061224f602f8361263d565b915061225a82612a10565b604082019050919050565b600060a08301600083015161227d6000860182611f49565b5060208301516122906020860182611f49565b5060408301516122a360408601826122e2565b50606083015184820360608601526122bb82826120cd565b915050608083015184820360808601526122d582826120cd565b9150508091505092915050565b6122eb8161277d565b82525050565b6122fa8161277d565b82525050565b600061230c828461213f565b915081905092915050565b6000612322826121d9565b915061232e828561213f565b91506123398261221f565b9150612345828461213f565b91508190509392505050565b600061235c826121fc565b9150819050919050565b600060208201905061237b6000830184611f58565b92915050565b600060a0820190506123966000830188611f58565b6123a36020830187611f58565b6123b060408301866122f1565b81810360608301526123c28185612106565b905081810360808301526123d68184612106565b90509695505050505050565b600060208201905081810360008301526123fc8184611f67565b905092915050565b6000602082019050818103600083015261241e8184611fc5565b905092915050565b60006020820190508181036000830152612440818461203a565b905092915050565b600060208201905061245d60008301846120af565b92915050565b600060208201905061247860008301846120be565b92915050565b600060208201905081810360008301526124988184612106565b905092915050565b600060208201905081810360008301526124b981612170565b9050919050565b600060208201905081810360008301526124d981612193565b9050919050565b600060208201905081810360008301526124f9816121b6565b9050919050565b6000602082019050818103600083015261251981612242565b9050919050565b600061252a61253b565b90506125368282612825565b919050565b6000604051905090565b600067ffffffffffffffff8211156125605761255f6128b4565b5b612569826128e3565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006126648261277d565b915061266f8361277d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126a4576126a3612856565b5b828201905092915050565b60006126ba8261277d565b91506126c58361277d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126fe576126fd612856565b5b828202905092915050565b60006127148261275d565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156127b4578082015181840152602081019050612799565b838111156127c3576000848401525b50505050565b60006127d48261277d565b915060008214156127e8576127e7612856565b5b600182039050919050565b6000600282049050600182168061280b57607f821691505b6020821081141561281f5761281e612885565b5b50919050565b61282e826128e3565b810181811067ffffffffffffffff8211171561284d5761284c6128b4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f50415449454e5400000000000000000000000000000000000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b612a6881612709565b8114612a7357600080fd5b50565b612a7f81612727565b8114612a8a57600080fd5b50565b612a9681612731565b8114612aa157600080fd5b50565b612aad8161277d565b8114612ab857600080fd5b5056fea26469706673582212209dfeae815a629ead42b28243f629bf253da0e62d8c7529e0403ed7a7f17d385164736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "173:2935:0:-:0;;;905:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:12;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;987:13:0;958;;:43;;;;;;;;;;;;;;;;;;905:104;173:2935;;640:96:15;693:7;719:10;712:17;;640:96;:::o;2270:187:12:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:143:20:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;173:2935:0:-;;;;;;;",
  "deployedSourceMap": "173:2935:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:202:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2504:146:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4008:129:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2938:167:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4387:145:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5404:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2353:143:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:12;;;:::i;:::-;;1718:627:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2909:145:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4766:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2658:132:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2798;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2620:202:8;2705:4;2743:32;2728:47;;;:11;:47;;;;:87;;;;2779:36;2803:11;2779:23;:36::i;:::-;2728:87;2721:94;;2620:202;;;:::o;2504:146:0:-;2571:20;2610:22;:32;2633:8;2610:32;;;;;;;;;;;;;;;2603:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:146;;;:::o;4008:129:8:-;4082:7;4108:6;:12;4115:4;4108:12;;;;;;;;;;;:22;;;4101:29;;4008:129;;;:::o;2938:167:0:-;3021:15;3055:27;:37;3083:8;3055:37;;;;;;;;;;;;;;;3093:3;3055:42;;;;;;:::i;:::-;;;;;;;;;;;;;3048:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2938:167;;;;:::o;4387:145:8:-;4470:18;4483:4;4470:12;:18::i;:::-;2505:30;2516:4;2522:12;:10;:12::i;:::-;2505:10;:30::i;:::-;4500:25:::1;4511:4;4517:7;4500:10;:25::i;:::-;4387:145:::0;;;:::o;5404:214::-;5510:12;:10;:12::i;:::-;5499:23;;:7;:23;;;5491:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5585:26;5597:4;5603:7;5585:11;:26::i;:::-;5404:214;;:::o;2353:143:0:-;2419:20;2458;:30;2479:8;2458:30;;;;;;;;;;;;;;;2451:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2353:143;;;:::o;1668:101:12:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1718:627:0:-;1300:29;;;;;;;:::i;:::-;;;;;;;;;;;;;1290:40;;;;;;1251:13;;;;;;;;;;;:21;;;1273:9;1251:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;1223:63;;;;;;:107;1215:116;;;;;;1803:22:::1;:43;1826:11;:19;;;1803:43;;;;;;;;;;;;;;;1852:11;1803:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1875:16;:37;1892:11;:19;;;1875:37;;;;;;;;;;;;;;;1918:11;:18;;;1875:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:20;:40;1971:11;:18;;;1950:40;;;;;;;;;;;;;;;1996:11;1950:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2019:16;:36;2036:11;:18;;;2019:36;;;;;;;;;;;;;;;2061:11;:19;;;2019:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:27;:47;2122:11;:18;;;2094:47;;;;;;;;;;;;;;;2142:11;:22;;;2094:71;;;;;;:::i;:::-;;;;;;;;;;;;;2171:11;:24;;;2094:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2214:123;2229:11;:19;;;2250:11;:18;;;2270:11;:16;;;2288:11;:24;;;2314:11;:22;;;2214:123;;;;;;;;;;:::i;:::-;;;;;;;;1718:627:::0;:::o;1036:85:12:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2909:145:8:-;2995:4;3018:6;:12;3025:4;3018:12;;;;;;;;;;;:20;;:29;3039:7;3018:29;;;;;;;;;;;;;;;;;;;;;;;;;3011:36;;2909:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;4766:147::-;4850:18;4863:4;4850:12;:18::i;:::-;2505:30;2516:4;2522:12;:10;:12::i;:::-;2505:10;:30::i;:::-;4880:26:::1;4892:4;4898:7;4880:11;:26::i;:::-;4766:147:::0;;;:::o;2658:132:0:-;2721:16;2756;:26;2773:8;2756:26;;;;;;;;;;;;;;;2749:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2658:132;;;:::o;2798:::-;2861:16;2896;:26;2913:8;2896:26;;;;;;;;;;;;;;;2889:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2798:132;;;:::o;1918:198:12:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;3335:492:8:-;3423:22;3431:4;3437:7;3423;:22::i;:::-;3418:403;;3606:41;3634:7;3606:41;;3644:2;3606:19;:41::i;:::-;3718:38;3746:4;3738:13;;3753:2;3718:19;:38::i;:::-;3513:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3461:349;;;;;;;;;;;:::i;:::-;;;;;;;;3418:403;3335:492;;:::o;6861:233::-;6944:22;6952:4;6958:7;6944;:22::i;:::-;6939:149;;7014:4;6982:6;:12;6989:4;6982:12;;;;;;;;;;;:20;;:29;7003:7;6982:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7064:12;:10;:12::i;:::-;7037:40;;7055:7;7037:40;;7049:4;7037:40;;;;;;;;;;6939:149;6861:233;;:::o;7219:234::-;7302:22;7310:4;7316:7;7302;:22::i;:::-;7298:149;;;7372:5;7340:6;:12;7347:4;7340:12;;;;;;;;;;;:20;;:29;7361:7;7340:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7423:12;:10;:12::i;:::-;7396:40;;7414:7;7396:40;;7408:4;7396:40;;;;;;;;;;7298:149;7219:234;;:::o;2270:187:12:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;1588:441:16:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:20:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:354::-;447:5;472:66;488:49;530:6;488:49;:::i;:::-;472:66;:::i;:::-;463:75;;561:6;554:5;547:21;599:4;592:5;588:16;637:3;628:6;623:3;619:16;616:25;613:2;;;654:1;651;644:12;613:2;667:39;699:6;694:3;689;667:39;:::i;:::-;453:259;;;;;;:::o;718:139::-;764:5;802:6;789:20;780:29;;818:33;845:5;818:33;:::i;:::-;770:87;;;;:::o;863:139::-;909:5;947:6;934:20;925:29;;963:33;990:5;963:33;:::i;:::-;915:87;;;;:::o;1008:137::-;1053:5;1091:6;1078:20;1069:29;;1107:32;1133:5;1107:32;:::i;:::-;1059:86;;;;:::o;1165:273::-;1221:5;1270:3;1263:4;1255:6;1251:17;1247:27;1237:2;;1288:1;1285;1278:12;1237:2;1328:6;1315:20;1353:79;1428:3;1420:6;1413:4;1405:6;1401:17;1353:79;:::i;:::-;1344:88;;1227:211;;;;;:::o;1458:288::-;1525:5;1574:3;1567:4;1559:6;1555:17;1551:27;1541:2;;1592:1;1589;1582:12;1541:2;1625:6;1619:13;1650:90;1736:3;1728:6;1721:4;1713:6;1709:17;1650:90;:::i;:::-;1641:99;;1531:215;;;;;:::o;1791:1218::-;1867:5;1911:4;1899:9;1894:3;1890:19;1886:30;1883:2;;;1929:1;1926;1919:12;1883:2;1951:21;1967:4;1951:21;:::i;:::-;1942:30;;2034:1;2074:49;2119:3;2110:6;2099:9;2095:22;2074:49;:::i;:::-;2067:4;2060:5;2056:16;2049:75;1982:153;2196:2;2237:49;2282:3;2273:6;2262:9;2258:22;2237:49;:::i;:::-;2230:4;2223:5;2219:16;2212:75;2145:153;2357:2;2398:49;2443:3;2434:6;2423:9;2419:22;2398:49;:::i;:::-;2391:4;2384:5;2380:16;2373:75;2308:151;2554:2;2543:9;2539:18;2526:32;2585:18;2577:6;2574:30;2571:2;;;2617:1;2614;2607:12;2571:2;2660:59;2715:3;2706:6;2695:9;2691:22;2660:59;:::i;:::-;2653:4;2646:5;2642:16;2635:85;2469:262;2824:3;2813:9;2809:19;2796:33;2856:18;2848:6;2845:30;2842:2;;;2888:1;2885;2878:12;2842:2;2931:59;2986:3;2977:6;2966:9;2962:22;2931:59;:::i;:::-;2924:4;2917:5;2913:16;2906:85;2741:261;1873:1136;;;;:::o;3015:139::-;3061:5;3099:6;3086:20;3077:29;;3115:33;3142:5;3115:33;:::i;:::-;3067:87;;;;:::o;3160:262::-;3219:6;3268:2;3256:9;3247:7;3243:23;3239:32;3236:2;;;3284:1;3281;3274:12;3236:2;3327:1;3352:53;3397:7;3388:6;3377:9;3373:22;3352:53;:::i;:::-;3342:63;;3298:117;3226:196;;;;:::o;3428:520::-;3506:6;3514;3563:2;3551:9;3542:7;3538:23;3534:32;3531:2;;;3579:1;3576;3569:12;3531:2;3622:1;3647:53;3692:7;3683:6;3672:9;3668:22;3647:53;:::i;:::-;3637:63;;3593:117;3777:2;3766:9;3762:18;3749:32;3808:18;3800:6;3797:30;3794:2;;;3840:1;3837;3830:12;3794:2;3868:63;3923:7;3914:6;3903:9;3899:22;3868:63;:::i;:::-;3858:73;;3720:221;3521:427;;;;;:::o;3954:262::-;4013:6;4062:2;4050:9;4041:7;4037:23;4033:32;4030:2;;;4078:1;4075;4068:12;4030:2;4121:1;4146:53;4191:7;4182:6;4171:9;4167:22;4146:53;:::i;:::-;4136:63;;4092:117;4020:196;;;;:::o;4222:407::-;4290:6;4298;4347:2;4335:9;4326:7;4322:23;4318:32;4315:2;;;4363:1;4360;4353:12;4315:2;4406:1;4431:53;4476:7;4467:6;4456:9;4452:22;4431:53;:::i;:::-;4421:63;;4377:117;4533:2;4559:53;4604:7;4595:6;4584:9;4580:22;4559:53;:::i;:::-;4549:63;;4504:118;4305:324;;;;;:::o;4635:260::-;4693:6;4742:2;4730:9;4721:7;4717:23;4713:32;4710:2;;;4758:1;4755;4748:12;4710:2;4801:1;4826:52;4870:7;4861:6;4850:9;4846:22;4826:52;:::i;:::-;4816:62;;4772:116;4700:195;;;;:::o;4901:390::-;4981:6;5030:2;5018:9;5009:7;5005:23;5001:32;4998:2;;;5046:1;5043;5036:12;4998:2;5110:1;5099:9;5095:17;5089:24;5140:18;5132:6;5129:30;5126:2;;;5172:1;5169;5162:12;5126:2;5200:74;5266:7;5257:6;5246:9;5242:22;5200:74;:::i;:::-;5190:84;;5060:224;4988:303;;;;:::o;5297:409::-;5383:6;5432:2;5420:9;5411:7;5407:23;5403:32;5400:2;;;5448:1;5445;5438:12;5400:2;5519:1;5508:9;5504:17;5491:31;5549:18;5541:6;5538:30;5535:2;;;5581:1;5578;5571:12;5535:2;5609:80;5681:7;5672:6;5661:9;5657:22;5609:80;:::i;:::-;5599:90;;5462:237;5390:316;;;;:::o;5712:179::-;5781:10;5802:46;5844:3;5836:6;5802:46;:::i;:::-;5880:4;5875:3;5871:14;5857:28;;5792:99;;;;:::o;5897:196::-;5986:10;6021:66;6083:3;6075:6;6021:66;:::i;:::-;6007:80;;5997:96;;;;:::o;6099:264::-;6222:10;6257:100;6353:3;6345:6;6257:100;:::i;:::-;6243:114;;6233:130;;;;:::o;6369:108::-;6446:24;6464:5;6446:24;:::i;:::-;6441:3;6434:37;6424:53;;:::o;6483:118::-;6570:24;6588:5;6570:24;:::i;:::-;6565:3;6558:37;6548:53;;:::o;6637:732::-;6756:3;6785:54;6833:5;6785:54;:::i;:::-;6855:86;6934:6;6929:3;6855:86;:::i;:::-;6848:93;;6965:56;7015:5;6965:56;:::i;:::-;7044:7;7075:1;7060:284;7085:6;7082:1;7079:13;7060:284;;;7161:6;7155:13;7188:63;7247:3;7232:13;7188:63;:::i;:::-;7181:70;;7274:60;7327:6;7274:60;:::i;:::-;7264:70;;7120:224;7107:1;7104;7100:9;7095:14;;7060:284;;;7064:14;7360:3;7353:10;;6761:608;;;;;;;:::o;7403:991::-;7542:3;7571:64;7629:5;7571:64;:::i;:::-;7651:96;7740:6;7735:3;7651:96;:::i;:::-;7644:103;;7773:3;7818:4;7810:6;7806:17;7801:3;7797:27;7848:66;7908:5;7848:66;:::i;:::-;7937:7;7968:1;7953:396;7978:6;7975:1;7972:13;7953:396;;;8049:9;8043:4;8039:20;8034:3;8027:33;8100:6;8094:13;8128:84;8207:4;8192:13;8128:84;:::i;:::-;8120:92;;8235:70;8298:6;8235:70;:::i;:::-;8225:80;;8334:4;8329:3;8325:14;8318:21;;8013:336;8000:1;7997;7993:9;7988:14;;7953:396;;;7957:14;8365:4;8358:11;;8385:3;8378:10;;7547:847;;;;;;;;;:::o;8478:1127::-;8651:3;8680:81;8755:5;8680:81;:::i;:::-;8777:113;8883:6;8878:3;8777:113;:::i;:::-;8770:120;;8916:3;8961:4;8953:6;8949:17;8944:3;8940:27;8991:83;9068:5;8991:83;:::i;:::-;9097:7;9128:1;9113:447;9138:6;9135:1;9132:13;9113:447;;;9209:9;9203:4;9199:20;9194:3;9187:33;9260:6;9254:13;9288:118;9401:4;9386:13;9288:118;:::i;:::-;9280:126;;9429:87;9509:6;9429:87;:::i;:::-;9419:97;;9545:4;9540:3;9536:14;9529:21;;9173:387;9160:1;9157;9153:9;9148:14;;9113:447;;;9117:14;9576:4;9569:11;;9596:3;9589:10;;8656:949;;;;;;;;;:::o;9611:109::-;9692:21;9707:5;9692:21;:::i;:::-;9687:3;9680:34;9670:50;;:::o;9726:118::-;9813:24;9831:5;9813:24;:::i;:::-;9808:3;9801:37;9791:53;;:::o;9850:344::-;9928:3;9956:39;9989:5;9956:39;:::i;:::-;10011:61;10065:6;10060:3;10011:61;:::i;:::-;10004:68;;10081:52;10126:6;10121:3;10114:4;10107:5;10103:16;10081:52;:::i;:::-;10158:29;10180:6;10158:29;:::i;:::-;10153:3;10149:39;10142:46;;9932:262;;;;;:::o;10200:364::-;10288:3;10316:39;10349:5;10316:39;:::i;:::-;10371:71;10435:6;10430:3;10371:71;:::i;:::-;10364:78;;10451:52;10496:6;10491:3;10484:4;10477:5;10473:16;10451:52;:::i;:::-;10528:29;10550:6;10528:29;:::i;:::-;10523:3;10519:39;10512:46;;10292:272;;;;;:::o;10570:377::-;10676:3;10704:39;10737:5;10704:39;:::i;:::-;10759:89;10841:6;10836:3;10759:89;:::i;:::-;10752:96;;10857:52;10902:6;10897:3;10890:4;10883:5;10879:16;10857:52;:::i;:::-;10934:6;10929:3;10925:16;10918:23;;10680:267;;;;;:::o;10953:366::-;11095:3;11116:67;11180:2;11175:3;11116:67;:::i;:::-;11109:74;;11192:93;11281:3;11192:93;:::i;:::-;11310:2;11305:3;11301:12;11294:19;;11099:220;;;:::o;11325:366::-;11467:3;11488:67;11552:2;11547:3;11488:67;:::i;:::-;11481:74;;11564:93;11653:3;11564:93;:::i;:::-;11682:2;11677:3;11673:12;11666:19;;11471:220;;;:::o;11697:366::-;11839:3;11860:67;11924:2;11919:3;11860:67;:::i;:::-;11853:74;;11936:93;12025:3;11936:93;:::i;:::-;12054:2;12049:3;12045:12;12038:19;;11843:220;;;:::o;12069:402::-;12229:3;12250:85;12332:2;12327:3;12250:85;:::i;:::-;12243:92;;12344:93;12433:3;12344:93;:::i;:::-;12462:2;12457:3;12453:12;12446:19;;12233:238;;;:::o;12477:400::-;12637:3;12658:84;12740:1;12735:3;12658:84;:::i;:::-;12651:91;;12751:93;12840:3;12751:93;:::i;:::-;12869:1;12864:3;12860:11;12853:18;;12641:236;;;:::o;12883:402::-;13043:3;13064:85;13146:2;13141:3;13064:85;:::i;:::-;13057:92;;13158:93;13247:3;13158:93;:::i;:::-;13276:2;13271:3;13267:12;13260:19;;13047:238;;;:::o;13291:366::-;13433:3;13454:67;13518:2;13513:3;13454:67;:::i;:::-;13447:74;;13530:93;13619:3;13530:93;:::i;:::-;13648:2;13643:3;13639:12;13632:19;;13437:220;;;:::o;13737:1212::-;13850:3;13886:4;13881:3;13877:14;13976:4;13969:5;13965:16;13959:23;13995:63;14052:4;14047:3;14043:14;14029:12;13995:63;:::i;:::-;13901:167;14152:4;14145:5;14141:16;14135:23;14171:63;14228:4;14223:3;14219:14;14205:12;14171:63;:::i;:::-;14078:166;14326:4;14319:5;14315:16;14309:23;14345:63;14402:4;14397:3;14393:14;14379:12;14345:63;:::i;:::-;14254:164;14508:4;14501:5;14497:16;14491:23;14561:3;14555:4;14551:14;14544:4;14539:3;14535:14;14528:38;14587:73;14655:4;14641:12;14587:73;:::i;:::-;14579:81;;14428:243;14759:4;14752:5;14748:16;14742:23;14812:3;14806:4;14802:14;14795:4;14790:3;14786:14;14779:38;14838:73;14906:4;14892:12;14838:73;:::i;:::-;14830:81;;14681:241;14939:4;14932:11;;13855:1094;;;;;:::o;14955:108::-;15032:24;15050:5;15032:24;:::i;:::-;15027:3;15020:37;15010:53;;:::o;15069:118::-;15156:24;15174:5;15156:24;:::i;:::-;15151:3;15144:37;15134:53;;:::o;15193:275::-;15325:3;15347:95;15438:3;15429:6;15347:95;:::i;:::-;15340:102;;15459:3;15452:10;;15329:139;;;;:::o;15474:967::-;15856:3;15878:148;16022:3;15878:148;:::i;:::-;15871:155;;16043:95;16134:3;16125:6;16043:95;:::i;:::-;16036:102;;16155:148;16299:3;16155:148;:::i;:::-;16148:155;;16320:95;16411:3;16402:6;16320:95;:::i;:::-;16313:102;;16432:3;16425:10;;15860:581;;;;;:::o;16447:381::-;16632:3;16654:148;16798:3;16654:148;:::i;:::-;16647:155;;16819:3;16812:10;;16636:192;;;:::o;16834:222::-;16927:4;16965:2;16954:9;16950:18;16942:26;;16978:71;17046:1;17035:9;17031:17;17022:6;16978:71;:::i;:::-;16932:124;;;;:::o;17062:846::-;17307:4;17345:3;17334:9;17330:19;17322:27;;17359:71;17427:1;17416:9;17412:17;17403:6;17359:71;:::i;:::-;17440:72;17508:2;17497:9;17493:18;17484:6;17440:72;:::i;:::-;17522;17590:2;17579:9;17575:18;17566:6;17522:72;:::i;:::-;17641:9;17635:4;17631:20;17626:2;17615:9;17611:18;17604:48;17669:78;17742:4;17733:6;17669:78;:::i;:::-;17661:86;;17795:9;17789:4;17785:20;17779:3;17768:9;17764:19;17757:49;17823:78;17896:4;17887:6;17823:78;:::i;:::-;17815:86;;17312:596;;;;;;;;:::o;17914:373::-;18057:4;18095:2;18084:9;18080:18;18072:26;;18144:9;18138:4;18134:20;18130:1;18119:9;18115:17;18108:47;18172:108;18275:4;18266:6;18172:108;:::i;:::-;18164:116;;18062:225;;;;:::o;18293:413::-;18456:4;18494:2;18483:9;18479:18;18471:26;;18543:9;18537:4;18533:20;18529:1;18518:9;18514:17;18507:47;18571:128;18694:4;18685:6;18571:128;:::i;:::-;18563:136;;18461:245;;;;:::o;18712:481::-;18909:4;18947:2;18936:9;18932:18;18924:26;;18996:9;18990:4;18986:20;18982:1;18971:9;18967:17;18960:47;19024:162;19181:4;19172:6;19024:162;:::i;:::-;19016:170;;18914:279;;;;:::o;19199:210::-;19286:4;19324:2;19313:9;19309:18;19301:26;;19337:65;19399:1;19388:9;19384:17;19375:6;19337:65;:::i;:::-;19291:118;;;;:::o;19415:222::-;19508:4;19546:2;19535:9;19531:18;19523:26;;19559:71;19627:1;19616:9;19612:17;19603:6;19559:71;:::i;:::-;19513:124;;;;:::o;19643:313::-;19756:4;19794:2;19783:9;19779:18;19771:26;;19843:9;19837:4;19833:20;19829:1;19818:9;19814:17;19807:47;19871:78;19944:4;19935:6;19871:78;:::i;:::-;19863:86;;19761:195;;;;:::o;19962:419::-;20128:4;20166:2;20155:9;20151:18;20143:26;;20215:9;20209:4;20205:20;20201:1;20190:9;20186:17;20179:47;20243:131;20369:4;20243:131;:::i;:::-;20235:139;;20133:248;;;:::o;20387:419::-;20553:4;20591:2;20580:9;20576:18;20568:26;;20640:9;20634:4;20630:20;20626:1;20615:9;20611:17;20604:47;20668:131;20794:4;20668:131;:::i;:::-;20660:139;;20558:248;;;:::o;20812:419::-;20978:4;21016:2;21005:9;21001:18;20993:26;;21065:9;21059:4;21055:20;21051:1;21040:9;21036:17;21029:47;21093:131;21219:4;21093:131;:::i;:::-;21085:139;;20983:248;;;:::o;21237:419::-;21403:4;21441:2;21430:9;21426:18;21418:26;;21490:9;21484:4;21480:20;21476:1;21465:9;21461:17;21454:47;21518:131;21644:4;21518:131;:::i;:::-;21510:139;;21408:248;;;:::o;21662:129::-;21696:6;21723:20;;:::i;:::-;21713:30;;21752:33;21780:4;21772:6;21752:33;:::i;:::-;21703:88;;;:::o;21797:75::-;21830:6;21863:2;21857:9;21847:19;;21837:35;:::o;21878:308::-;21940:4;22030:18;22022:6;22019:30;22016:2;;;22052:18;;:::i;:::-;22016:2;22090:29;22112:6;22090:29;:::i;:::-;22082:37;;22174:4;22168;22164:15;22156:23;;21945:241;;;:::o;22192:132::-;22259:4;22282:3;22274:11;;22312:4;22307:3;22303:14;22295:22;;22264:60;;;:::o;22330:142::-;22407:4;22430:3;22422:11;;22460:4;22455:3;22451:14;22443:22;;22412:60;;;:::o;22478:159::-;22572:4;22595:3;22587:11;;22625:4;22620:3;22616:14;22608:22;;22577:60;;;:::o;22643:114::-;22710:6;22744:5;22738:12;22728:22;;22717:40;;;:::o;22763:124::-;22840:6;22874:5;22868:12;22858:22;;22847:40;;;:::o;22893:141::-;22987:6;23021:5;23015:12;23005:22;;22994:40;;;:::o;23040:99::-;23092:6;23126:5;23120:12;23110:22;;23099:40;;;:::o;23145:113::-;23215:4;23247;23242:3;23238:14;23230:22;;23220:38;;;:::o;23264:123::-;23344:4;23376;23371:3;23367:14;23359:22;;23349:38;;;:::o;23393:140::-;23490:4;23522;23517:3;23513:14;23505:22;;23495:38;;;:::o;23539:184::-;23638:11;23672:6;23667:3;23660:19;23712:4;23707:3;23703:14;23688:29;;23650:73;;;;:::o;23729:194::-;23838:11;23872:6;23867:3;23860:19;23912:4;23907:3;23903:14;23888:29;;23850:73;;;;:::o;23929:211::-;24055:11;24089:6;24084:3;24077:19;24129:4;24124:3;24120:14;24105:29;;24067:73;;;;:::o;24146:159::-;24220:11;24254:6;24249:3;24242:19;24294:4;24289:3;24285:14;24270:29;;24232:73;;;;:::o;24311:169::-;24395:11;24429:6;24424:3;24417:19;24469:4;24464:3;24460:14;24445:29;;24407:73;;;;:::o;24486:148::-;24588:11;24625:3;24610:18;;24600:34;;;;:::o;24640:305::-;24680:3;24699:20;24717:1;24699:20;:::i;:::-;24694:25;;24733:20;24751:1;24733:20;:::i;:::-;24728:25;;24887:1;24819:66;24815:74;24812:1;24809:81;24806:2;;;24893:18;;:::i;:::-;24806:2;24937:1;24934;24930:9;24923:16;;24684:261;;;;:::o;24951:348::-;24991:7;25014:20;25032:1;25014:20;:::i;:::-;25009:25;;25048:20;25066:1;25048:20;:::i;:::-;25043:25;;25236:1;25168:66;25164:74;25161:1;25158:81;25153:1;25146:9;25139:17;25135:105;25132:2;;;25243:18;;:::i;:::-;25132:2;25291:1;25288;25284:9;25273:20;;24999:300;;;;:::o;25305:96::-;25342:7;25371:24;25389:5;25371:24;:::i;:::-;25360:35;;25350:51;;;:::o;25407:90::-;25441:7;25484:5;25477:13;25470:21;25459:32;;25449:48;;;:::o;25503:77::-;25540:7;25569:5;25558:16;;25548:32;;;:::o;25586:149::-;25622:7;25662:66;25655:5;25651:78;25640:89;;25630:105;;;:::o;25741:126::-;25778:7;25818:42;25811:5;25807:54;25796:65;;25786:81;;;:::o;25873:77::-;25910:7;25939:5;25928:16;;25918:32;;;:::o;25956:154::-;26040:6;26035:3;26030;26017:30;26102:1;26093:6;26088:3;26084:16;26077:27;26007:103;;;:::o;26116:307::-;26184:1;26194:113;26208:6;26205:1;26202:13;26194:113;;;26293:1;26288:3;26284:11;26278:18;26274:1;26269:3;26265:11;26258:39;26230:2;26227:1;26223:10;26218:15;;26194:113;;;26325:6;26322:1;26319:13;26316:2;;;26405:1;26396:6;26391:3;26387:16;26380:27;26316:2;26165:258;;;;:::o;26429:171::-;26468:3;26491:24;26509:5;26491:24;:::i;:::-;26482:33;;26537:4;26530:5;26527:15;26524:2;;;26545:18;;:::i;:::-;26524:2;26592:1;26585:5;26581:13;26574:20;;26472:128;;;:::o;26606:320::-;26650:6;26687:1;26681:4;26677:12;26667:22;;26734:1;26728:4;26724:12;26755:18;26745:2;;26811:4;26803:6;26799:17;26789:27;;26745:2;26873;26865:6;26862:14;26842:18;26839:38;26836:2;;;26892:18;;:::i;:::-;26836:2;26657:269;;;;:::o;26932:281::-;27015:27;27037:4;27015:27;:::i;:::-;27007:6;27003:40;27145:6;27133:10;27130:22;27109:18;27097:10;27094:34;27091:62;27088:2;;;27156:18;;:::i;:::-;27088:2;27196:10;27192:2;27185:22;26975:238;;;:::o;27219:180::-;27267:77;27264:1;27257:88;27364:4;27361:1;27354:15;27388:4;27385:1;27378:15;27405:180;27453:77;27450:1;27443:88;27550:4;27547:1;27540:15;27574:4;27571:1;27564:15;27591:180;27639:77;27636:1;27629:88;27736:4;27733:1;27726:15;27760:4;27757:1;27750:15;27777:102;27818:6;27869:2;27865:7;27860:2;27853:5;27849:14;27845:28;27835:38;;27825:54;;;:::o;27885:182::-;28025:34;28021:1;28013:6;28009:14;28002:58;27991:76;:::o;28073:225::-;28213:34;28209:1;28201:6;28197:14;28190:58;28282:8;28277:2;28269:6;28265:15;28258:33;28179:119;:::o;28304:182::-;28444:34;28440:1;28432:6;28428:14;28421:58;28410:76;:::o;28492:173::-;28632:25;28628:1;28620:6;28616:14;28609:49;28598:67;:::o;28671:157::-;28811:9;28807:1;28799:6;28795:14;28788:33;28777:51;:::o;28834:167::-;28974:19;28970:1;28962:6;28958:14;28951:43;28940:61;:::o;29007:234::-;29147:34;29143:1;29135:6;29131:14;29124:58;29216:17;29211:2;29203:6;29199:15;29192:42;29113:128;:::o;29247:122::-;29320:24;29338:5;29320:24;:::i;:::-;29313:5;29310:35;29300:2;;29359:1;29356;29349:12;29300:2;29290:79;:::o;29375:122::-;29448:24;29466:5;29448:24;:::i;:::-;29441:5;29438:35;29428:2;;29487:1;29484;29477:12;29428:2;29418:79;:::o;29503:120::-;29575:23;29592:5;29575:23;:::i;:::-;29568:5;29565:34;29555:2;;29613:1;29610;29603:12;29555:2;29545:78;:::o;29629:122::-;29702:24;29720:5;29702:24;:::i;:::-;29695:5;29692:35;29682:2;;29741:1;29738;29731:12;29682:2;29672:79;:::o",
  "source": "pragma solidity  0.8.4;\r\n\r\nimport \"./Registration.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract Appointments is Ownable, AccessControl{\r\n    struct Appointment {\r\n        address patient;\r\n        address doctor;\r\n        uint date;\r\n        string startingHour;\r\n        string dateString;\r\n    }\r\n\r\n    event AppointmentAdd(\r\n        address patient,\r\n        address doctor,\r\n        uint date,\r\n        string startingHour,\r\n        string dateString\r\n    );\r\n\r\n    mapping(address => Appointment[]) appointmentsOfPatients;\r\n    mapping(address => Appointment[]) appointmentsOfDoctor;\r\n    mapping(address => address[]) doctorsOfPatient;\r\n    mapping(address => address[]) patientsOfDoctor;\r\n    mapping(address => mapping(string => string[])) appointmentsOfADoctorInADay;\r\n\r\n    Registration _registration;\r\n\r\n    constructor(address registrationA) public {\r\n        _registration = Registration(registrationA);\r\n    }\r\n\r\n    modifier onlyAdmin {\r\n      require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"ADMIN\"))));\r\n      _;\r\n    }\r\n    modifier onlyPatient {\r\n        require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"PATIENT\"))));\r\n        _;\r\n    }\r\n    modifier onlyMedicalResearcher {\r\n        require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"RESEARCHER\"))));\r\n        _;\r\n    }\r\n    modifier onlyDoctor {\r\n        require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"DOCTOR\"))));\r\n        _;\r\n    }\r\n\r\n    function addAppointment(Appointment memory appointment) public onlyPatient{\r\n        appointmentsOfPatients[appointment.patient].push(appointment);\r\n        doctorsOfPatient[appointment.patient].push(appointment.doctor);\r\n\r\n        appointmentsOfDoctor[appointment.doctor].push(appointment);\r\n        patientsOfDoctor[appointment.doctor].push(appointment.patient);\r\n\r\n        appointmentsOfADoctorInADay[appointment.doctor][appointment.dateString].push(appointment.startingHour);\r\n\r\n        emit AppointmentAdd(appointment.patient, appointment.doctor, appointment.date, appointment.startingHour, appointment.dateString);\r\n    }\r\n\r\n    function getAppointmentsOfDoctor(address _address) public returns(Appointment[] memory){\r\n        return appointmentsOfDoctor[_address];\r\n    }\r\n\r\n    function getAppointmentsOfPatient(address _address) public returns(Appointment[] memory){\r\n        return appointmentsOfPatients[_address];\r\n    }\r\n\r\n    function getPatientsOfADoctor(address _address) public returns(address[] memory){\r\n        return patientsOfDoctor[_address];\r\n    }\r\n\r\n    function getDoctorsOfAPatient(address _address) public returns(address[] memory){\r\n        return doctorsOfPatient[_address];\r\n    }\r\n\r\n    function getAppointmentsInADay(address _address, string memory day) public returns(string[] memory){\r\n        return appointmentsOfADoctorInADay[_address][day];\r\n    }\r\n}",
  "sourcePath": "C:/Licenta/Licenta/src/contracts/Appointments.sol",
  "ast": {
    "absolutePath": "/C/Licenta/Licenta/src/contracts/Appointments.sol",
    "exportedSymbols": {
      "AccessControl": [
        2292
      ],
      "AccessControlEnumerable": [
        2417
      ],
      "Appointments": [
        319
      ],
      "Context": [
        2798
      ],
      "ERC165": [
        3025
      ],
      "EnumerableSet": [
        3636
      ],
      "IAccessControl": [
        2490
      ],
      "IAccessControlEnumerable": [
        2515
      ],
      "IERC165": [
        3037
      ],
      "Ownable": [
        2620
      ],
      "Registration": [
        1983
      ],
      "Strings": [
        3001
      ]
    },
    "id": 320,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Licenta/Licenta/src/contracts/Registration.sol",
        "file": "./Registration.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 1984,
        "src": "27:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 2621,
        "src": "57:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 2293,
        "src": "111:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2620,
              "src": "198:7:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "198:7:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2292,
              "src": "207:13:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "207:13:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319,
          2292,
          3025,
          3037,
          2490,
          2620,
          2798
        ],
        "name": "Appointments",
        "nameLocation": "182:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Appointments.Appointment",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "patient",
                "nameLocation": "265:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "257:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "doctor",
                "nameLocation": "291:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "283:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "283:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "313:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "308:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "308:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "startingHour",
                "nameLocation": "335:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "328:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 15,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "dateString",
                "nameLocation": "365:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "358:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Appointment",
            "nameLocation": "234:11:0",
            "nodeType": "StructDefinition",
            "scope": 319,
            "src": "227:156:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 31,
            "name": "AppointmentAdd",
            "nameLocation": "397:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "patient",
                  "nameLocation": "430:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "422:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "doctor",
                  "nameLocation": "456:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "448:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "478:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "473:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startingHour",
                  "nameLocation": "500:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "493:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dateString",
                  "nameLocation": "530:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "523:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:136:0"
            },
            "src": "391:157:0"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "appointmentsOfPatients",
            "nameLocation": "590:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "556:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Appointments.Appointment[])"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "556:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Appointments.Appointment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 34,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33,
                    "name": "Appointment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19,
                    "src": "575:11:0"
                  },
                  "referencedDeclaration": 19,
                  "src": "575:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                    "typeString": "struct Appointments.Appointment"
                  }
                },
                "id": 35,
                "nodeType": "ArrayTypeName",
                "src": "575:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                  "typeString": "struct Appointments.Appointment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "appointmentsOfDoctor",
            "nameLocation": "653:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "619:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Appointments.Appointment[])"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Appointments.Appointment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 40,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 39,
                    "name": "Appointment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19,
                    "src": "638:11:0"
                  },
                  "referencedDeclaration": 19,
                  "src": "638:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                    "typeString": "struct Appointments.Appointment"
                  }
                },
                "id": 41,
                "nodeType": "ArrayTypeName",
                "src": "638:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                  "typeString": "struct Appointments.Appointment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "doctorsOfPatient",
            "nameLocation": "710:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "680:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "688:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "680:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 45,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "699:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 46,
                "nodeType": "ArrayTypeName",
                "src": "699:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "patientsOfDoctor",
            "nameLocation": "763:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "733:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "733:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 51,
                "nodeType": "ArrayTypeName",
                "src": "752:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "appointmentsOfADoctorInADay",
            "nameLocation": "834:27:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "786:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(string => string[]))"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "786:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(string => string[]))"
              },
              "valueType": {
                "id": 58,
                "keyType": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "813:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "805:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                  "typeString": "mapping(string => string[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 57,
                  "nodeType": "ArrayTypeName",
                  "src": "823:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "_registration",
            "nameLocation": "883:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "870:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registration_$1983",
              "typeString": "contract Registration"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "Registration",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1983,
                "src": "870:12:0"
              },
              "referencedDeclaration": 1983,
              "src": "870:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registration_$1983",
                "typeString": "contract Registration"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "947:62:0",
              "statements": [
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "_registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "958:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1983",
                        "typeString": "contract Registration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 70,
                          "name": "registrationA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "987:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 69,
                        "name": "Registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "974:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registration_$1983_$",
                          "typeString": "type(contract Registration)"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "974:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1983",
                        "typeString": "contract Registration"
                      }
                    },
                    "src": "958:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registration_$1983",
                      "typeString": "contract Registration"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "958:43:0"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "registrationA",
                  "nameLocation": "925:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "917:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:23:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:0"
            },
            "scope": 319,
            "src": "905:104:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1036:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 83,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1103:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 84,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1103:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 81,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1081:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1081:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 85,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1081:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 86,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1080:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 79,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1063:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1063:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1063:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 78,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1053:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1053:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "41444d494e",
                                      "id": 92,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1148:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                        "typeString": "literal_string \"ADMIN\""
                                      },
                                      "value": "ADMIN"
                                    }
                                  ],
                                  "id": 93,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1147:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                ],
                                "expression": {
                                  "id": 90,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1130:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1130:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1130:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 89,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1120:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1120:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1053:105:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:114:0"
                },
                {
                  "id": 99,
                  "nodeType": "PlaceholderStatement",
                  "src": "1168:1:0"
                }
              ]
            },
            "id": 101,
            "name": "onlyAdmin",
            "nameLocation": "1026:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1036:0:0"
            },
            "src": "1017:160:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1204:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 109,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1273:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 110,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1273:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 107,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1251:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1251:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1251:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 112,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1250:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 105,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1233:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1233:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1233:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 104,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1223:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "50415449454e54",
                                      "id": 118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1318:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                        "typeString": "literal_string \"PATIENT\""
                                      },
                                      "value": "PATIENT"
                                    }
                                  ],
                                  "id": 119,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1317:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                    "typeString": "literal_string \"PATIENT\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                    "typeString": "literal_string \"PATIENT\""
                                  }
                                ],
                                "expression": {
                                  "id": 116,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1300:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1300:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1300:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 115,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1290:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1290:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1223:107:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1215:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:116:0"
                },
                {
                  "id": 125,
                  "nodeType": "PlaceholderStatement",
                  "src": "1342:1:0"
                }
              ]
            },
            "id": 127,
            "name": "onlyPatient",
            "nameLocation": "1192:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:0"
            },
            "src": "1183:168:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1388:150:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 135,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1457:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 136,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1457:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 133,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1435:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1435:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 137,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1435:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 138,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1434:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 131,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1417:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1417:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1417:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 130,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1407:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1407:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "52455345415243484552",
                                      "id": 144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1502:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                        "typeString": "literal_string \"RESEARCHER\""
                                      },
                                      "value": "RESEARCHER"
                                    }
                                  ],
                                  "id": 145,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1501:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                    "typeString": "literal_string \"RESEARCHER\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                    "typeString": "literal_string \"RESEARCHER\""
                                  }
                                ],
                                "expression": {
                                  "id": 142,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1484:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1484:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1484:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 141,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1474:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1407:110:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1399:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:119:0"
                },
                {
                  "id": 151,
                  "nodeType": "PlaceholderStatement",
                  "src": "1529:1:0"
                }
              ]
            },
            "id": 153,
            "name": "onlyMedicalResearcher",
            "nameLocation": "1366:21:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:0:0"
            },
            "src": "1357:181:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1564:146:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 161,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1633:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 162,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1633:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 159,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1611:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1611:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1611:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 164,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1610:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 157,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1593:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1593:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1593:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 156,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1583:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "444f43544f52",
                                      "id": 170,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1678:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                        "typeString": "literal_string \"DOCTOR\""
                                      },
                                      "value": "DOCTOR"
                                    }
                                  ],
                                  "id": 171,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1677:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                ],
                                "expression": {
                                  "id": 168,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1660:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1660:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 167,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1650:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1650:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1583:106:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1575:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:115:0"
                },
                {
                  "id": 177,
                  "nodeType": "PlaceholderStatement",
                  "src": "1701:1:0"
                }
              ]
            },
            "id": 179,
            "name": "onlyDoctor",
            "nameLocation": "1553:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:0"
            },
            "src": "1544:166:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "1792:553:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 192,
                        "name": "appointment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1852:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 187,
                          "name": "appointmentsOfPatients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1803:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "expression": {
                            "id": 188,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1826:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "patient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1826:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1803:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                          "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1803:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$_t_struct$_Appointment_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Appointments.Appointment storage ref[] storage pointer,struct Appointments.Appointment storage ref)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 200,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "1918:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1918:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 195,
                          "name": "doctorsOfPatient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1875:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "expression": {
                            "id": 196,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1892:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "patient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1892:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1875:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1875:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "appointment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1996:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 204,
                          "name": "appointmentsOfDoctor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1950:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "expression": {
                            "id": 205,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1971:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "doctor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "1971:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1950:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                          "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1950:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$_t_struct$_Appointment_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Appointments.Appointment storage ref[] storage pointer,struct Appointments.Appointment storage ref)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 217,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2061:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "patient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2061:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 212,
                          "name": "patientsOfDoctor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2019:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 215,
                        "indexExpression": {
                          "expression": {
                            "id": 213,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2036:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "doctor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "2036:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2019:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2019:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 229,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2171:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startingHour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2171:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 221,
                            "name": "appointmentsOfADoctorInADay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2094:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => string storage ref[] storage ref))"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "expression": {
                              "id": 222,
                              "name": "appointment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "2122:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                                "typeString": "struct Appointments.Appointment memory"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "doctor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2122:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2094:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(string memory => string storage ref[] storage ref)"
                          }
                        },
                        "id": 227,
                        "indexExpression": {
                          "expression": {
                            "id": 224,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2142:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "2142:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2094:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2094:76:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:102:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 234,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2229:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "patient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2229:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 236,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2250:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2250:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 238,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2270:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2270:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 240,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2288:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startingHour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2288:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 242,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2314:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dateString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "2314:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 233,
                      "name": "AppointmentAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2214:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "2209:128:0"
                }
              ]
            },
            "functionSelector": "72a03463",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "onlyPatient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 127,
                  "src": "1781:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:11:0"
              }
            ],
            "name": "addAppointment",
            "nameLocation": "1727:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "appointment",
                  "nameLocation": "1761:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "1742:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                    "typeString": "struct Appointments.Appointment"
                  },
                  "typeName": {
                    "id": 181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 180,
                      "name": "Appointment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19,
                      "src": "1742:11:0"
                    },
                    "referencedDeclaration": 19,
                    "src": "1742:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                      "typeString": "struct Appointments.Appointment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:32:0"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:0:0"
            },
            "scope": 319,
            "src": "1718:627:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2440:56:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 256,
                      "name": "appointmentsOfDoctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "2458:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                      }
                    },
                    "id": 258,
                    "indexExpression": {
                      "id": 257,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "2479:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2458:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                      "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 255,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "2451:37:0"
                }
              ]
            },
            "functionSelector": "58b69799",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsOfDoctor",
            "nameLocation": "2362:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2394:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2386:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:18:0"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2419:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Appointment_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Appointments.Appointment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 252,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 251,
                        "name": "Appointment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2419:11:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2419:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                        "typeString": "struct Appointments.Appointment"
                      }
                    },
                    "id": 253,
                    "nodeType": "ArrayTypeName",
                    "src": "2419:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Appointments.Appointment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:22:0"
            },
            "scope": 319,
            "src": "2353:143:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "2592:58:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 270,
                      "name": "appointmentsOfPatients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2610:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                      }
                    },
                    "id": 272,
                    "indexExpression": {
                      "id": 271,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "2633:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2610:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                      "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "2603:39:0"
                }
              ]
            },
            "functionSelector": "1128dc8a",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsOfPatient",
            "nameLocation": "2513:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2546:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2538:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:18:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2571:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Appointment_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Appointments.Appointment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 266,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 265,
                        "name": "Appointment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2571:11:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2571:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                        "typeString": "struct Appointments.Appointment"
                      }
                    },
                    "id": 267,
                    "nodeType": "ArrayTypeName",
                    "src": "2571:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Appointments.Appointment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2570:22:0"
            },
            "scope": 319,
            "src": "2504:146:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2738:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 283,
                      "name": "patientsOfDoctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2756:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 285,
                    "indexExpression": {
                      "id": 284,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2773:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2756:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 282,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "2749:33:0"
                }
              ]
            },
            "functionSelector": "e7e9ee86",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPatientsOfADoctor",
            "nameLocation": "2667:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2696:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2688:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:18:0"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2721:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2721:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "2721:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:18:0"
            },
            "scope": 319,
            "src": "2658:132:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "2878:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 296,
                      "name": "doctorsOfPatient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2896:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 298,
                    "indexExpression": {
                      "id": 297,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2913:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2896:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 295,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "2889:33:0"
                }
              ]
            },
            "functionSelector": "eb07dcd1",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctorsOfAPatient",
            "nameLocation": "2807:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2836:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2828:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:18:0"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2861:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2861:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 293,
                    "nodeType": "ArrayTypeName",
                    "src": "2861:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2860:18:0"
            },
            "scope": 319,
            "src": "2798:132:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3037:68:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 311,
                        "name": "appointmentsOfADoctorInADay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3055:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                          "typeString": "mapping(address => mapping(string memory => string storage ref[] storage ref))"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "id": 312,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3083:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3055:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(string memory => string storage ref[] storage ref)"
                      }
                    },
                    "id": 315,
                    "indexExpression": {
                      "id": 314,
                      "name": "day",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3093:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3055:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 310,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3048:49:0"
                }
              ]
            },
            "functionSelector": "2dcba4e5",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsInADay",
            "nameLocation": "2947:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2977:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2969:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "day",
                  "nameLocation": "3001:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2987:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:37:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3021:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 307,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3021:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 308,
                    "nodeType": "ArrayTypeName",
                    "src": "3021:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:17:0"
            },
            "scope": 319,
            "src": "2938:167:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "173:2935:0",
        "usedErrors": []
      }
    ],
    "src": "0:3108:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Licenta/Licenta/src/contracts/Appointments.sol",
    "exportedSymbols": {
      "AccessControl": [
        2292
      ],
      "AccessControlEnumerable": [
        2417
      ],
      "Appointments": [
        319
      ],
      "Context": [
        2798
      ],
      "ERC165": [
        3025
      ],
      "EnumerableSet": [
        3636
      ],
      "IAccessControl": [
        2490
      ],
      "IAccessControlEnumerable": [
        2515
      ],
      "IERC165": [
        3037
      ],
      "Ownable": [
        2620
      ],
      "Registration": [
        1983
      ],
      "Strings": [
        3001
      ]
    },
    "id": 320,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Licenta/Licenta/src/contracts/Registration.sol",
        "file": "./Registration.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 1984,
        "src": "27:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 2621,
        "src": "57:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 2293,
        "src": "111:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2620,
              "src": "198:7:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "198:7:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2292,
              "src": "207:13:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "207:13:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319,
          2292,
          3025,
          3037,
          2490,
          2620,
          2798
        ],
        "name": "Appointments",
        "nameLocation": "182:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Appointments.Appointment",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "patient",
                "nameLocation": "265:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "257:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "doctor",
                "nameLocation": "291:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "283:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "283:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "313:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "308:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "308:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "startingHour",
                "nameLocation": "335:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "328:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 15,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "dateString",
                "nameLocation": "365:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "358:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Appointment",
            "nameLocation": "234:11:0",
            "nodeType": "StructDefinition",
            "scope": 319,
            "src": "227:156:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 31,
            "name": "AppointmentAdd",
            "nameLocation": "397:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "patient",
                  "nameLocation": "430:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "422:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "doctor",
                  "nameLocation": "456:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "448:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "478:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "473:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startingHour",
                  "nameLocation": "500:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "493:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dateString",
                  "nameLocation": "530:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "523:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:136:0"
            },
            "src": "391:157:0"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "appointmentsOfPatients",
            "nameLocation": "590:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "556:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Appointments.Appointment[])"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "564:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "556:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Appointments.Appointment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 34,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33,
                    "name": "Appointment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19,
                    "src": "575:11:0"
                  },
                  "referencedDeclaration": 19,
                  "src": "575:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                    "typeString": "struct Appointments.Appointment"
                  }
                },
                "id": 35,
                "nodeType": "ArrayTypeName",
                "src": "575:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                  "typeString": "struct Appointments.Appointment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "appointmentsOfDoctor",
            "nameLocation": "653:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "619:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Appointments.Appointment[])"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Appointments.Appointment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 40,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 39,
                    "name": "Appointment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 19,
                    "src": "638:11:0"
                  },
                  "referencedDeclaration": 19,
                  "src": "638:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                    "typeString": "struct Appointments.Appointment"
                  }
                },
                "id": 41,
                "nodeType": "ArrayTypeName",
                "src": "638:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                  "typeString": "struct Appointments.Appointment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "doctorsOfPatient",
            "nameLocation": "710:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "680:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "688:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "680:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 45,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "699:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 46,
                "nodeType": "ArrayTypeName",
                "src": "699:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "patientsOfDoctor",
            "nameLocation": "763:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "733:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "733:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 51,
                "nodeType": "ArrayTypeName",
                "src": "752:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "appointmentsOfADoctorInADay",
            "nameLocation": "834:27:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "786:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(string => string[]))"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "786:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(string => string[]))"
              },
              "valueType": {
                "id": 58,
                "keyType": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "813:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "805:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                  "typeString": "mapping(string => string[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 57,
                  "nodeType": "ArrayTypeName",
                  "src": "823:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "_registration",
            "nameLocation": "883:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "870:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registration_$1983",
              "typeString": "contract Registration"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "Registration",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1983,
                "src": "870:12:0"
              },
              "referencedDeclaration": 1983,
              "src": "870:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registration_$1983",
                "typeString": "contract Registration"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "947:62:0",
              "statements": [
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "_registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "958:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1983",
                        "typeString": "contract Registration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 70,
                          "name": "registrationA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "987:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 69,
                        "name": "Registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "974:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registration_$1983_$",
                          "typeString": "type(contract Registration)"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "974:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1983",
                        "typeString": "contract Registration"
                      }
                    },
                    "src": "958:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registration_$1983",
                      "typeString": "contract Registration"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "958:43:0"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "registrationA",
                  "nameLocation": "925:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "917:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:23:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:0"
            },
            "scope": 319,
            "src": "905:104:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1036:141:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 83,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1103:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 84,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1103:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 81,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1081:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1081:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 85,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1081:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 86,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1080:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 79,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1063:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1063:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1063:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 78,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1053:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1053:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "41444d494e",
                                      "id": 92,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1148:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                        "typeString": "literal_string \"ADMIN\""
                                      },
                                      "value": "ADMIN"
                                    }
                                  ],
                                  "id": 93,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1147:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                ],
                                "expression": {
                                  "id": 90,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1130:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1130:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1130:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 89,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1120:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1120:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1053:105:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:114:0"
                },
                {
                  "id": 99,
                  "nodeType": "PlaceholderStatement",
                  "src": "1168:1:0"
                }
              ]
            },
            "id": 101,
            "name": "onlyAdmin",
            "nameLocation": "1026:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1036:0:0"
            },
            "src": "1017:160:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1204:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 109,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1273:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 110,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1273:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 107,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1251:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1251:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1251:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 112,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1250:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 105,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1233:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1233:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1233:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 104,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1223:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "50415449454e54",
                                      "id": 118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1318:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                        "typeString": "literal_string \"PATIENT\""
                                      },
                                      "value": "PATIENT"
                                    }
                                  ],
                                  "id": 119,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1317:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                    "typeString": "literal_string \"PATIENT\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e5786ee6f50ab1a5567cb3f3f6840a2f4ddbafdf4a35cb2c52d5b732b1e84a32",
                                    "typeString": "literal_string \"PATIENT\""
                                  }
                                ],
                                "expression": {
                                  "id": 116,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1300:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1300:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1300:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 115,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1290:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1290:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1223:107:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1215:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:116:0"
                },
                {
                  "id": 125,
                  "nodeType": "PlaceholderStatement",
                  "src": "1342:1:0"
                }
              ]
            },
            "id": 127,
            "name": "onlyPatient",
            "nameLocation": "1192:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:0"
            },
            "src": "1183:168:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1388:150:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 135,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1457:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 136,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1457:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 133,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1435:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1435:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 137,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1435:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 138,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1434:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 131,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1417:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1417:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1417:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 130,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1407:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1407:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "52455345415243484552",
                                      "id": 144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1502:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                        "typeString": "literal_string \"RESEARCHER\""
                                      },
                                      "value": "RESEARCHER"
                                    }
                                  ],
                                  "id": 145,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1501:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                    "typeString": "literal_string \"RESEARCHER\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3760dd8fcbb657f4b540775c98e6991534214c1a9382d68b77c9f5585415ea09",
                                    "typeString": "literal_string \"RESEARCHER\""
                                  }
                                ],
                                "expression": {
                                  "id": 142,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1484:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1484:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1484:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 141,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1474:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1407:110:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1399:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:119:0"
                },
                {
                  "id": 151,
                  "nodeType": "PlaceholderStatement",
                  "src": "1529:1:0"
                }
              ]
            },
            "id": 153,
            "name": "onlyMedicalResearcher",
            "nameLocation": "1366:21:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:0:0"
            },
            "src": "1357:181:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1564:146:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 161,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1633:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 162,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1633:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 159,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 63,
                                          "src": "1611:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1983",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "1611:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1611:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 164,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1610:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 157,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1593:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1593:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1593:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 156,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1583:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1583:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "444f43544f52",
                                      "id": 170,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1678:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                        "typeString": "literal_string \"DOCTOR\""
                                      },
                                      "value": "DOCTOR"
                                    }
                                  ],
                                  "id": 171,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1677:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                ],
                                "expression": {
                                  "id": 168,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1660:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1660:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 167,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1650:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1650:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1583:106:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1575:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:115:0"
                },
                {
                  "id": 177,
                  "nodeType": "PlaceholderStatement",
                  "src": "1701:1:0"
                }
              ]
            },
            "id": 179,
            "name": "onlyDoctor",
            "nameLocation": "1553:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:0"
            },
            "src": "1544:166:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "1792:553:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 192,
                        "name": "appointment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1852:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 187,
                          "name": "appointmentsOfPatients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1803:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "expression": {
                            "id": 188,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1826:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "patient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1826:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1803:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                          "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1803:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$_t_struct$_Appointment_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Appointments.Appointment storage ref[] storage pointer,struct Appointments.Appointment storage ref)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 200,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "1918:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1918:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 195,
                          "name": "doctorsOfPatient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1875:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "expression": {
                            "id": 196,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1892:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "patient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1892:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1875:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1875:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "appointment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1996:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                          "typeString": "struct Appointments.Appointment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 204,
                          "name": "appointmentsOfDoctor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1950:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "expression": {
                            "id": 205,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "1971:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "doctor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "1971:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1950:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                          "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1950:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$_t_struct$_Appointment_$19_storage_$returns$__$bound_to$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Appointments.Appointment storage ref[] storage pointer,struct Appointments.Appointment storage ref)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 217,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2061:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "patient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2061:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 212,
                          "name": "patientsOfDoctor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2019:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 215,
                        "indexExpression": {
                          "expression": {
                            "id": 213,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2036:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "doctor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "2036:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2019:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2019:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 229,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2171:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startingHour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2171:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 221,
                            "name": "appointmentsOfADoctorInADay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "2094:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => string storage ref[] storage ref))"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "expression": {
                              "id": 222,
                              "name": "appointment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "2122:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                                "typeString": "struct Appointments.Appointment memory"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "doctor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "2122:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2094:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(string memory => string storage ref[] storage ref)"
                          }
                        },
                        "id": 227,
                        "indexExpression": {
                          "expression": {
                            "id": 224,
                            "name": "appointment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 182,
                            "src": "2142:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                              "typeString": "struct Appointments.Appointment memory"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dateString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "2142:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2094:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2094:76:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:102:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 234,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2229:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "patient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2229:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 236,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2250:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2250:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 238,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2270:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2270:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 240,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2288:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startingHour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2288:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 242,
                          "name": "appointment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2314:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                            "typeString": "struct Appointments.Appointment memory"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dateString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "2314:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 233,
                      "name": "AppointmentAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2214:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "2209:128:0"
                }
              ]
            },
            "functionSelector": "72a03463",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "onlyPatient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 127,
                  "src": "1781:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:11:0"
              }
            ],
            "name": "addAppointment",
            "nameLocation": "1727:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "appointment",
                  "nameLocation": "1761:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "1742:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Appointment_$19_memory_ptr",
                    "typeString": "struct Appointments.Appointment"
                  },
                  "typeName": {
                    "id": 181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 180,
                      "name": "Appointment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19,
                      "src": "1742:11:0"
                    },
                    "referencedDeclaration": 19,
                    "src": "1742:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                      "typeString": "struct Appointments.Appointment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:32:0"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:0:0"
            },
            "scope": 319,
            "src": "1718:627:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2440:56:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 256,
                      "name": "appointmentsOfDoctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "2458:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                      }
                    },
                    "id": 258,
                    "indexExpression": {
                      "id": 257,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "2479:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2458:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                      "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 255,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "2451:37:0"
                }
              ]
            },
            "functionSelector": "58b69799",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsOfDoctor",
            "nameLocation": "2362:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2394:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2386:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:18:0"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2419:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Appointment_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Appointments.Appointment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 252,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 251,
                        "name": "Appointment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2419:11:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2419:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                        "typeString": "struct Appointments.Appointment"
                      }
                    },
                    "id": 253,
                    "nodeType": "ArrayTypeName",
                    "src": "2419:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Appointments.Appointment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:22:0"
            },
            "scope": 319,
            "src": "2353:143:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "2592:58:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 270,
                      "name": "appointmentsOfPatients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2610:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Appointments.Appointment storage ref[] storage ref)"
                      }
                    },
                    "id": 272,
                    "indexExpression": {
                      "id": 271,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "2633:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2610:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage",
                      "typeString": "struct Appointments.Appointment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "2603:39:0"
                }
              ]
            },
            "functionSelector": "1128dc8a",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsOfPatient",
            "nameLocation": "2513:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2546:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2538:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:18:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2571:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Appointment_$19_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Appointments.Appointment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 266,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 265,
                        "name": "Appointment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 19,
                        "src": "2571:11:0"
                      },
                      "referencedDeclaration": 19,
                      "src": "2571:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$19_storage_ptr",
                        "typeString": "struct Appointments.Appointment"
                      }
                    },
                    "id": 267,
                    "nodeType": "ArrayTypeName",
                    "src": "2571:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Appointment_$19_storage_$dyn_storage_ptr",
                      "typeString": "struct Appointments.Appointment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2570:22:0"
            },
            "scope": 319,
            "src": "2504:146:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2738:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 283,
                      "name": "patientsOfDoctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2756:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 285,
                    "indexExpression": {
                      "id": 284,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2773:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2756:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 282,
                  "id": 286,
                  "nodeType": "Return",
                  "src": "2749:33:0"
                }
              ]
            },
            "functionSelector": "e7e9ee86",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPatientsOfADoctor",
            "nameLocation": "2667:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2696:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2688:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:18:0"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2721:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2721:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "2721:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:18:0"
            },
            "scope": 319,
            "src": "2658:132:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "2878:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 296,
                      "name": "doctorsOfPatient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2896:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 298,
                    "indexExpression": {
                      "id": 297,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2913:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2896:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 295,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "2889:33:0"
                }
              ]
            },
            "functionSelector": "eb07dcd1",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctorsOfAPatient",
            "nameLocation": "2807:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2836:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2828:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:18:0"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2861:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2861:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 293,
                    "nodeType": "ArrayTypeName",
                    "src": "2861:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2860:18:0"
            },
            "scope": 319,
            "src": "2798:132:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3037:68:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 311,
                        "name": "appointmentsOfADoctorInADay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3055:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$_$",
                          "typeString": "mapping(address => mapping(string memory => string storage ref[] storage ref))"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "id": 312,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3083:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3055:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(string memory => string storage ref[] storage ref)"
                      }
                    },
                    "id": 315,
                    "indexExpression": {
                      "id": 314,
                      "name": "day",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3093:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3055:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 310,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3048:49:0"
                }
              ]
            },
            "functionSelector": "2dcba4e5",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAppointmentsInADay",
            "nameLocation": "2947:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2977:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2969:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "day",
                  "nameLocation": "3001:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2987:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:37:0"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3021:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 307,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3021:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 308,
                    "nodeType": "ArrayTypeName",
                    "src": "3021:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:17:0"
            },
            "scope": 319,
            "src": "2938:167:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "173:2935:0",
        "usedErrors": []
      }
    ],
    "src": "0:3108:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xe06ebeea65a938b27463490d13f9032c40c142734e2c772f7938dfaf0fa21982": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "dateString",
              "type": "string"
            }
          ],
          "name": "AppointmentAdd",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCe7B35776F82a5b41894B843b06bF92cd3192725",
      "transactionHash": "0x8ce2ca8c92c797d6a0bf06c68f08a5918481e9138ef29b97fb7d8e93ee3229f7"
    },
    "5777": {
      "events": {
        "0x83471bc2981524136f091bdfdac1ba8e2428c50844cbf303a2e5c648e608dba4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            }
          ],
          "name": "AppointmentAdd",
          "type": "event"
        },
        "0xe06ebeea65a938b27463490d13f9032c40c142734e2c772f7938dfaf0fa21982": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "startingHour",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "dateString",
              "type": "string"
            }
          ],
          "name": "AppointmentAdd",
          "type": "event"
        },
        "0xeaf5ea1e95678b1be41f17e32e21f6f2820f06e7bb870717f720ba58c80ddaa3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "RequestAdd",
          "type": "event"
        },
        "0xfe3833d10ea2624036e9009fa30162c7514262e56688d210546a48503743e512": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hash",
              "type": "string"
            }
          ],
          "name": "FilesAdd",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x08f73ec4cbA0232dEF2696f981e702821f5862bf",
      "transactionHash": "0x1b6afd15a933a0c0f740fb7fa04e29de4d34468832a69344cd4b4bc4f938389d"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-06-26T20:15:36.276Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}