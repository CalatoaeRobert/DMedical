{
  "contractName": "Hospitals",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrationA",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "firstName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "lastName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "birthDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "hospital",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "specialization",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "skills",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cnp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_profileHash",
          "type": "string"
        }
      ],
      "name": "DoctorAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "doctorsAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_profileHash",
              "type": "string"
            }
          ],
          "internalType": "struct Hospitals.Doctor",
          "name": "doc",
          "type": "tuple"
        }
      ],
      "name": "addDoctorToSystem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDoctors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hospital",
          "type": "string"
        }
      ],
      "name": "getDoctorsInAHospital",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_profileHash",
              "type": "string"
            }
          ],
          "internalType": "struct Hospitals.Doctor[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDoctor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_profileHash",
              "type": "string"
            }
          ],
          "internalType": "struct Hospitals.Doctor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "encryptionPublicKey",
          "type": "string"
        }
      ],
      "name": "addEncryptionKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getEncryptionPublicKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrationA\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"birthDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"skills\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cnp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_profileHash\",\"type\":\"string\"}],\"name\":\"DoctorAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"birthDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"skills\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cnp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_profileHash\",\"type\":\"string\"}],\"internalType\":\"struct Hospitals.Doctor\",\"name\":\"doc\",\"type\":\"tuple\"}],\"name\":\"addDoctorToSystem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"encryptionPublicKey\",\"type\":\"string\"}],\"name\":\"addEncryptionKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctorsAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDoctor\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"birthDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"skills\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cnp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_profileHash\",\"type\":\"string\"}],\"internalType\":\"struct Hospitals.Doctor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDoctors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"}],\"name\":\"getDoctorsInAHospital\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"birthDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"skills\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cnp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_profileHash\",\"type\":\"string\"}],\"internalType\":\"struct Hospitals.Doctor[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getEncryptionPublicKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Licenta/Licenta/src/contracts/Hospitals.sol\":\"Hospitals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Licenta/Licenta/src/contracts/Hospitals.sol\":{\"keccak256\":\"0xfed342534cef86fa8c6f7c421a358e35db67d057356cda11f442f26c1b4efaab\",\"urls\":[\"bzz-raw://c5e507992753e45c1e8ba4719b1a215ce043f91c33c36b4c26db3e7d917b92e6\",\"dweb:/ipfs/QmW2985ynNfqNNiQTZEg9iXoEiM8oRyZA7Wu9n5WEBEPHX\"]},\"/C/Licenta/Licenta/src/contracts/Registration.sol\":{\"keccak256\":\"0xe85bf37adc9b67661fcacbe52d7557698e0f764c2b8a7aebb59e987bb5a3447b\",\"urls\":[\"bzz-raw://45dc02008e4f047d42a4e318407b09d59480a5f0a6e29e9339e00043756379e0\",\"dweb:/ipfs/QmcunTyueTkHQgdPXT8qDSKRwJdiYMhmZCfmaFL39qWMCz\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003d2d38038062003d2d833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b613b21806200020c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806391d148541161007157806391d14854146102c8578063a217fddf146102f8578063b13d5d9414610316578063d547741f14610334578063f2fde38b146103505761010b565b8063715018a6146102405780637d9f7b191461024a57806386ba5fcd1461027a5780638da5cb5b146102aa5761010b565b80632f2ff15d116100de5780632f2ff15d146101bc57806333fff834146101d857806336568abe146102085780634d69fd3b146102245761010b565b806301ffc9a7146101105780630f8d66c414610140578063248a9ca31461015c5780632f04e0641461018c575b600080fd5b61012a60048036038101906101259190612a7e565b61036c565b60405161013791906132f7565b60405180910390f35b61015a60048036038101906101559190612aa7565b6103e6565b005b61017660048036038101906101719190612a19565b610542565b6040516101839190613312565b60405180910390f35b6101a660048036038101906101a191906129f0565b610562565b6040516101b391906134c8565b60405180910390f35b6101d660048036038101906101d19190612a42565b610b8f565b005b6101f260048036038101906101ed9190612b6a565b610bb0565b6040516101ff9190613298565b60405180910390f35b610222600480360381019061021d9190612a42565b610bef565b005b61023e60048036038101906102399190612b29565b610c72565b005b6102486112c4565b005b610264600480360381019061025f91906129f0565b61134c565b604051610271919061332d565b60405180910390f35b610294600480360381019061028f9190612aa7565b61141d565b6040516102a191906132d5565b60405180910390f35b6102b2611a6e565b6040516102bf9190613298565b60405180910390f35b6102e260048036038101906102dd9190612a42565b611a97565b6040516102ef91906132f7565b60405180910390f35b610300611b02565b60405161030d9190613312565b60405180910390f35b61031e611b09565b60405161032b91906132b3565b60405180910390f35b61034e60048036038101906103499190612a42565b611b97565b005b61036a600480360381019061036591906129f0565b611bb8565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103df57506103de82611cb0565b5b9050919050565b6040516020016103f590613234565b60405160208183030381529060405280519060200120600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b81526004016104669190613298565b60006040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104bb9190612ae8565b6040516020016104cb919061321d565b60405160208183030381529060405280519060200120146104eb57600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061053e929190612353565b5050565b600060016000838152602001908152602001600020600101549050919050565b61056a6123d9565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101800160405290816000820180546105c5906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546105f1906137fa565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b50505050508152602001600182018054610657906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610683906137fa565b80156106d05780601f106106a5576101008083540402835291602001916106d0565b820191906000526020600020905b8154815290600101906020018083116106b357829003601f168201915b50505050508152602001600282015481526020016003820180546106f3906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461071f906137fa565b801561076c5780601f106107415761010080835404028352916020019161076c565b820191906000526020600020905b81548152906001019060200180831161074f57829003601f168201915b50505050508152602001600482018054610785906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546107b1906137fa565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b50505050508152602001600582018054610817906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610843906137fa565b80156108905780601f1061086557610100808354040283529160200191610890565b820191906000526020600020905b81548152906001019060200180831161087357829003601f168201915b505050505081526020016006820180546108a9906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546108d5906137fa565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b5050505050815260200160078201805461093b906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610967906137fa565b80156109b45780601f10610989576101008083540402835291602001916109b4565b820191906000526020600020905b81548152906001019060200180831161099757829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b82821015610a8e578382906000526020600020018054610a01906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d906137fa565b8015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b5050505050815260200190600101906109e2565b5050505081526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600a8201548152602001600b82018054610b06906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b32906137fa565b8015610b7f5780601f10610b5457610100808354040283529160200191610b7f565b820191906000526020600020905b815481529060010190602001808311610b6257829003601f168201915b5050505050815250509050919050565b610b9882610542565b610ba181611d1a565b610bab8383611d2e565b505050565b60058181548110610bc057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bf7611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5b906134a8565b60405180910390fd5b610c6e8282611e16565b5050565b604051602001610c8190613283565b60405160208183030381529060405280519060200120600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b8152600401610cf29190613298565b60006040518083038186803b158015610d0a57600080fd5b505afa158015610d1e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d479190612ae8565b604051602001610d57919061321d565b6040516020818303038152906040528051906020012014610d7757600080fd5b806004600083610120015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610dd8929190612353565b506020820151816001019080519060200190610df5929190612353565b50604082015181600201556060820151816003019080519060200190610e1c929190612353565b506080820151816004019080519060200190610e39929190612353565b5060a0820151816005019080519060200190610e56929190612353565b5060c0820151816006019080519060200190610e73929190612353565b5060e0820151816007019080519060200190610e90929190612353565b50610100820151816008019080519060200190610eae929190612450565b506101208201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600a015561016082015181600b019080519060200190610f1f929190612353565b5090505060058161012001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634780468f8261012001516040518263ffffffff1660e01b8152600401610feb9190613298565b600060405180830381600087803b15801561100557600080fd5b505af1158015611019573d6000803e3d6000fd5b5050505060038160c00151604051611031919061321d565b90815260200160405180910390206004600083610120015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090806001815401808255809150506001900390600052602060002090600c020160009091909190915060008201816000019080546110c0906137fa565b6110cb9291906124b0565b5060018201816001019080546110e0906137fa565b6110eb9291906124b0565b5060028201548160020155600382018160030190805461110a906137fa565b6111159291906124b0565b50600482018160040190805461112a906137fa565b6111359291906124b0565b50600582018160050190805461114a906137fa565b6111559291906124b0565b50600682018160060190805461116a906137fa565b6111759291906124b0565b50600782018160070190805461118a906137fa565b6111959291906124b0565b5060088201816008019080546111ac92919061253d565b506009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a82015481600a0155600b820181600b01908054611232906137fa565b61123d9291906124b0565b5050507f6de443a130019ea936f85998b3cd988234c2406f4615105f328e80fab539f206816000015182602001518360400151846060015185608001518660a001518760c001518860e001518961010001518a61012001518b61014001518c61016001516040516112b99c9b9a9998979695949392919061334f565b60405180910390a150565b6112cc611e0e565b73ffffffffffffffffffffffffffffffffffffffff166112ea611a6e565b73ffffffffffffffffffffffffffffffffffffffff1614611340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133790613488565b60405180910390fd5b61134a6000611ef8565b565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611398906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546113c4906137fa565b80156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b50505050509050919050565b606060038260405161142f919061321d565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015611a6357838290600052602060002090600c020160405180610180016040529081600082018054611491906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546114bd906137fa565b801561150a5780601f106114df5761010080835404028352916020019161150a565b820191906000526020600020905b8154815290600101906020018083116114ed57829003601f168201915b50505050508152602001600182018054611523906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461154f906137fa565b801561159c5780601f106115715761010080835404028352916020019161159c565b820191906000526020600020905b81548152906001019060200180831161157f57829003601f168201915b50505050508152602001600282015481526020016003820180546115bf906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546115eb906137fa565b80156116385780601f1061160d57610100808354040283529160200191611638565b820191906000526020600020905b81548152906001019060200180831161161b57829003601f168201915b50505050508152602001600482018054611651906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461167d906137fa565b80156116ca5780601f1061169f576101008083540402835291602001916116ca565b820191906000526020600020905b8154815290600101906020018083116116ad57829003601f168201915b505050505081526020016005820180546116e3906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461170f906137fa565b801561175c5780601f106117315761010080835404028352916020019161175c565b820191906000526020600020905b81548152906001019060200180831161173f57829003601f168201915b50505050508152602001600682018054611775906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546117a1906137fa565b80156117ee5780601f106117c3576101008083540402835291602001916117ee565b820191906000526020600020905b8154815290600101906020018083116117d157829003601f168201915b50505050508152602001600782018054611807906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054611833906137fa565b80156118805780601f1061185557610100808354040283529160200191611880565b820191906000526020600020905b81548152906001019060200180831161186357829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b8282101561195a5783829060005260206000200180546118cd906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546118f9906137fa565b80156119465780601f1061191b57610100808354040283529160200191611946565b820191906000526020600020905b81548152906001019060200180831161192957829003601f168201915b5050505050815260200190600101906118ae565b5050505081526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600a8201548152602001600b820180546119d2906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546119fe906137fa565b8015611a4b5780601f10611a2057610100808354040283529160200191611a4b565b820191906000526020600020905b815481529060010190602001808311611a2e57829003601f168201915b5050505050815250508152602001906001019061145d565b505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b60606005805480602002602001604051908101604052809291908181526020018280548015611b8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611b43575b5050505050905090565b611ba082610542565b611ba981611d1a565b611bb38383611e16565b505050565b611bc0611e0e565b73ffffffffffffffffffffffffffffffffffffffff16611bde611a6e565b73ffffffffffffffffffffffffffffffffffffffff1614611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90613488565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9b90613468565b60405180910390fd5b611cad81611ef8565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611d2b81611d26611e0e565b611fbc565b50565b611d388282611a97565b611e0a57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611daf611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b611e208282611a97565b15611ef45760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611e99611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fc68282611a97565b61205557611feb8173ffffffffffffffffffffffffffffffffffffffff166014612059565b611ff98360001c6020612059565b60405160200161200a929190613249565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204c919061332d565b60405180910390fd5b5050565b60606000600283600261206c91906136b6565b6120769190613660565b67ffffffffffffffff8111156120b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156120e75781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612145577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106121cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261220f91906136b6565b6122199190613660565b90505b6001811115612305577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612281577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8282815181106122be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806122fe906137d0565b905061221c565b5060008414612349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234090613448565b60405180910390fd5b8091505092915050565b82805461235f906137fa565b90600052602060002090601f01602090048101928261238157600085556123c8565b82601f1061239a57805160ff19168380011785556123c8565b828001600101855582156123c8579182015b828111156123c75782518255916020019190600101906123ac565b5b5090506123d591906125a5565b5090565b604051806101800160405280606081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b82805482825590600052602060002090810192821561249f579160200282015b8281111561249e57825182908051906020019061248e929190612353565b5091602001919060010190612470565b5b5090506124ac91906125c2565b5090565b8280546124bc906137fa565b90600052602060002090601f0160209004810192826124de576000855561252c565b82601f106124ef578054855561252c565b8280016001018555821561252c57600052602060002091601f016020900482015b8281111561252b578254825591600101919060010190612510565b5b50905061253991906125a5565b5090565b8280548282559060005260206000209081019282156125945760005260206000209182015b82811115612593578282908054612578906137fa565b6125839291906124b0565b5091600101919060010190612562565b5b5090506125a191906125c2565b5090565b5b808211156125be5760008160009055506001016125a6565b5090565b5b808211156125e257600081816125d991906125e6565b506001016125c3565b5090565b5080546125f2906137fa565b6000825580601f106126045750612623565b601f01602090049060005260206000209081019061262291906125a5565b5b50565b60006126396126348461350f565b6134ea565b9050808382526020820190508285602086028201111561265857600080fd5b60005b858110156126a257813567ffffffffffffffff81111561267a57600080fd5b8086016126878982612791565b8552602085019450602084019350505060018101905061265b565b5050509392505050565b60006126bf6126ba8461353b565b6134ea565b9050828152602081018484840111156126d757600080fd5b6126e284828561378e565b509392505050565b60006126fd6126f88461353b565b6134ea565b90508281526020810184848401111561271557600080fd5b61272084828561379d565b509392505050565b60008135905061273781613a8f565b92915050565b600082601f83011261274e57600080fd5b813561275e848260208601612626565b91505092915050565b60008135905061277681613aa6565b92915050565b60008135905061278b81613abd565b92915050565b600082601f8301126127a257600080fd5b81356127b28482602086016126ac565b91505092915050565b600082601f8301126127cc57600080fd5b81516127dc8482602086016126ea565b91505092915050565b600061018082840312156127f857600080fd5b6128036101806134ea565b9050600082013567ffffffffffffffff81111561281f57600080fd5b61282b84828501612791565b600083015250602082013567ffffffffffffffff81111561284b57600080fd5b61285784828501612791565b602083015250604061286b848285016129db565b604083015250606082013567ffffffffffffffff81111561288b57600080fd5b61289784828501612791565b606083015250608082013567ffffffffffffffff8111156128b757600080fd5b6128c384828501612791565b60808301525060a082013567ffffffffffffffff8111156128e357600080fd5b6128ef84828501612791565b60a08301525060c082013567ffffffffffffffff81111561290f57600080fd5b61291b84828501612791565b60c08301525060e082013567ffffffffffffffff81111561293b57600080fd5b61294784828501612791565b60e08301525061010082013567ffffffffffffffff81111561296857600080fd5b6129748482850161273d565b6101008301525061012061298a84828501612728565b610120830152506101406129a0848285016129db565b6101408301525061016082013567ffffffffffffffff8111156129c257600080fd5b6129ce84828501612791565b6101608301525092915050565b6000813590506129ea81613ad4565b92915050565b600060208284031215612a0257600080fd5b6000612a1084828501612728565b91505092915050565b600060208284031215612a2b57600080fd5b6000612a3984828501612767565b91505092915050565b60008060408385031215612a5557600080fd5b6000612a6385828601612767565b9250506020612a7485828601612728565b9150509250929050565b600060208284031215612a9057600080fd5b6000612a9e8482850161277c565b91505092915050565b600060208284031215612ab957600080fd5b600082013567ffffffffffffffff811115612ad357600080fd5b612adf84828501612791565b91505092915050565b600060208284031215612afa57600080fd5b600082015167ffffffffffffffff811115612b1457600080fd5b612b20848285016127bb565b91505092915050565b600060208284031215612b3b57600080fd5b600082013567ffffffffffffffff811115612b5557600080fd5b612b61848285016127e5565b91505092915050565b600060208284031215612b7c57600080fd5b6000612b8a848285016129db565b91505092915050565b6000612b9f8383612bd3565b60208301905092915050565b6000612bb78383612dcc565b905092915050565b6000612bcb8383612f87565b905092915050565b612bdc81613710565b82525050565b612beb81613710565b82525050565b6000612bfc8261359c565b612c0681856135ef565b9350612c118361356c565b8060005b83811015612c42578151612c298882612b93565b9750612c34836135c8565b925050600181019050612c15565b5085935050505092915050565b6000612c5a826135a7565b612c648185613600565b935083602082028501612c768561357c565b8060005b85811015612cb25784840389528151612c938582612bab565b9450612c9e836135d5565b925060208a01995050600181019050612c7a565b50829750879550505050505092915050565b6000612ccf826135a7565b612cd98185613611565b935083602082028501612ceb8561357c565b8060005b85811015612d275784840389528151612d088582612bab565b9450612d13836135d5565b925060208a01995050600181019050612cef565b50829750879550505050505092915050565b6000612d44826135b2565b612d4e8185613622565b935083602082028501612d608561358c565b8060005b85811015612d9c5784840389528151612d7d8582612bbf565b9450612d88836135e2565b925060208a01995050600181019050612d64565b50829750879550505050505092915050565b612db781613722565b82525050565b612dc68161372e565b82525050565b6000612dd7826135bd565b612de18185613633565b9350612df181856020860161379d565b612dfa816138ea565b840191505092915050565b6000612e10826135bd565b612e1a8185613644565b9350612e2a81856020860161379d565b612e33816138ea565b840191505092915050565b6000612e49826135bd565b612e538185613655565b9350612e6381856020860161379d565b80840191505092915050565b6000612e7c602083613644565b9150612e87826138fb565b602082019050919050565b6000612e9f602683613644565b9150612eaa82613924565b604082019050919050565b6000612ec2602083613644565b9150612ecd82613973565b602082019050919050565b6000612ee5600683613655565b9150612ef08261399c565b600682019050919050565b6000612f08601783613655565b9150612f13826139c5565b601782019050919050565b6000612f2b600583613655565b9150612f36826139ee565b600582019050919050565b6000612f4e601183613655565b9150612f5982613a17565b601182019050919050565b6000612f71602f83613644565b9150612f7c82613a40565b604082019050919050565b6000610180830160008301518482036000860152612fa58282612dcc565b91505060208301518482036020860152612fbf8282612dcc565b9150506040830151612fd460408601826131ff565b5060608301518482036060860152612fec8282612dcc565b915050608083015184820360808601526130068282612dcc565b91505060a083015184820360a08601526130208282612dcc565b91505060c083015184820360c086015261303a8282612dcc565b91505060e083015184820360e08601526130548282612dcc565b9150506101008301518482036101008601526130708282612c4f565b915050610120830151613087610120860182612bd3565b5061014083015161309c6101408601826131ff565b506101608301518482036101608601526130b68282612dcc565b9150508091505092915050565b60006101808301600083015184820360008601526130e18282612dcc565b915050602083015184820360208601526130fb8282612dcc565b915050604083015161311060408601826131ff565b50606083015184820360608601526131288282612dcc565b915050608083015184820360808601526131428282612dcc565b91505060a083015184820360a086015261315c8282612dcc565b91505060c083015184820360c08601526131768282612dcc565b91505060e083015184820360e08601526131908282612dcc565b9150506101008301518482036101008601526131ac8282612c4f565b9150506101208301516131c3610120860182612bd3565b506101408301516131d86101408601826131ff565b506101608301518482036101608601526131f28282612dcc565b9150508091505092915050565b61320881613784565b82525050565b61321781613784565b82525050565b60006132298284612e3e565b915081905092915050565b600061323f82612ed8565b9150819050919050565b600061325482612efb565b91506132608285612e3e565b915061326b82612f41565b91506132778284612e3e565b91508190509392505050565b600061328e82612f1e565b9150819050919050565b60006020820190506132ad6000830184612be2565b92915050565b600060208201905081810360008301526132cd8184612bf1565b905092915050565b600060208201905081810360008301526132ef8184612d39565b905092915050565b600060208201905061330c6000830184612dae565b92915050565b60006020820190506133276000830184612dbd565b92915050565b600060208201905081810360008301526133478184612e05565b905092915050565b600061018082019050818103600083015261336a818f612e05565b9050818103602083015261337e818e612e05565b905061338d604083018d61320e565b818103606083015261339f818c612e05565b905081810360808301526133b3818b612e05565b905081810360a08301526133c7818a612e05565b905081810360c08301526133db8189612e05565b905081810360e08301526133ef8188612e05565b90508181036101008301526134048187612cc4565b9050613414610120830186612be2565b61342261014083018561320e565b8181036101608301526134358184612e05565b90509d9c50505050505050505050505050565b6000602082019050818103600083015261346181612e6f565b9050919050565b6000602082019050818103600083015261348181612e92565b9050919050565b600060208201905081810360008301526134a181612eb5565b9050919050565b600060208201905081810360008301526134c181612f64565b9050919050565b600060208201905081810360008301526134e281846130c3565b905092915050565b60006134f4613505565b9050613500828261382c565b919050565b6000604051905090565b600067ffffffffffffffff82111561352a576135296138bb565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613556576135556138bb565b5b61355f826138ea565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061366b82613784565b915061367683613784565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156136ab576136aa61385d565b5b828201905092915050565b60006136c182613784565b91506136cc83613784565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137055761370461385d565b5b828202905092915050565b600061371b82613764565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156137bb5780820151818401526020810190506137a0565b838111156137ca576000848401525b50505050565b60006137db82613784565b915060008214156137ef576137ee61385d565b5b600182039050919050565b6000600282049050600182168061381257607f821691505b602082108114156138265761382561388c565b5b50919050565b613835826138ea565b810181811067ffffffffffffffff82111715613854576138536138bb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f444f43544f520000000000000000000000000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f41444d494e000000000000000000000000000000000000000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b613a9881613710565b8114613aa357600080fd5b50565b613aaf8161372e565b8114613aba57600080fd5b50565b613ac681613738565b8114613ad157600080fd5b50565b613add81613784565b8114613ae857600080fd5b5056fea26469706673582212200a852a45c7a38b7e70f75c63f5cae9dd59fc2e4dacb276e3e7af53e31e67997364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806391d148541161007157806391d14854146102c8578063a217fddf146102f8578063b13d5d9414610316578063d547741f14610334578063f2fde38b146103505761010b565b8063715018a6146102405780637d9f7b191461024a57806386ba5fcd1461027a5780638da5cb5b146102aa5761010b565b80632f2ff15d116100de5780632f2ff15d146101bc57806333fff834146101d857806336568abe146102085780634d69fd3b146102245761010b565b806301ffc9a7146101105780630f8d66c414610140578063248a9ca31461015c5780632f04e0641461018c575b600080fd5b61012a60048036038101906101259190612a7e565b61036c565b60405161013791906132f7565b60405180910390f35b61015a60048036038101906101559190612aa7565b6103e6565b005b61017660048036038101906101719190612a19565b610542565b6040516101839190613312565b60405180910390f35b6101a660048036038101906101a191906129f0565b610562565b6040516101b391906134c8565b60405180910390f35b6101d660048036038101906101d19190612a42565b610b8f565b005b6101f260048036038101906101ed9190612b6a565b610bb0565b6040516101ff9190613298565b60405180910390f35b610222600480360381019061021d9190612a42565b610bef565b005b61023e60048036038101906102399190612b29565b610c72565b005b6102486112c4565b005b610264600480360381019061025f91906129f0565b61134c565b604051610271919061332d565b60405180910390f35b610294600480360381019061028f9190612aa7565b61141d565b6040516102a191906132d5565b60405180910390f35b6102b2611a6e565b6040516102bf9190613298565b60405180910390f35b6102e260048036038101906102dd9190612a42565b611a97565b6040516102ef91906132f7565b60405180910390f35b610300611b02565b60405161030d9190613312565b60405180910390f35b61031e611b09565b60405161032b91906132b3565b60405180910390f35b61034e60048036038101906103499190612a42565b611b97565b005b61036a600480360381019061036591906129f0565b611bb8565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103df57506103de82611cb0565b5b9050919050565b6040516020016103f590613234565b60405160208183030381529060405280519060200120600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b81526004016104669190613298565b60006040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104bb9190612ae8565b6040516020016104cb919061321d565b60405160208183030381529060405280519060200120146104eb57600080fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061053e929190612353565b5050565b600060016000838152602001908152602001600020600101549050919050565b61056a6123d9565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101800160405290816000820180546105c5906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546105f1906137fa565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b50505050508152602001600182018054610657906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610683906137fa565b80156106d05780601f106106a5576101008083540402835291602001916106d0565b820191906000526020600020905b8154815290600101906020018083116106b357829003601f168201915b50505050508152602001600282015481526020016003820180546106f3906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461071f906137fa565b801561076c5780601f106107415761010080835404028352916020019161076c565b820191906000526020600020905b81548152906001019060200180831161074f57829003601f168201915b50505050508152602001600482018054610785906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546107b1906137fa565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b50505050508152602001600582018054610817906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610843906137fa565b80156108905780601f1061086557610100808354040283529160200191610890565b820191906000526020600020905b81548152906001019060200180831161087357829003601f168201915b505050505081526020016006820180546108a9906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546108d5906137fa565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b5050505050815260200160078201805461093b906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610967906137fa565b80156109b45780601f10610989576101008083540402835291602001916109b4565b820191906000526020600020905b81548152906001019060200180831161099757829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b82821015610a8e578382906000526020600020018054610a01906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d906137fa565b8015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b5050505050815260200190600101906109e2565b5050505081526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600a8201548152602001600b82018054610b06906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b32906137fa565b8015610b7f5780601f10610b5457610100808354040283529160200191610b7f565b820191906000526020600020905b815481529060010190602001808311610b6257829003601f168201915b5050505050815250509050919050565b610b9882610542565b610ba181611d1a565b610bab8383611d2e565b505050565b60058181548110610bc057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bf7611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5b906134a8565b60405180910390fd5b610c6e8282611e16565b5050565b604051602001610c8190613283565b60405160208183030381529060405280519060200120600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344276733326040518263ffffffff1660e01b8152600401610cf29190613298565b60006040518083038186803b158015610d0a57600080fd5b505afa158015610d1e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d479190612ae8565b604051602001610d57919061321d565b6040516020818303038152906040528051906020012014610d7757600080fd5b806004600083610120015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610dd8929190612353565b506020820151816001019080519060200190610df5929190612353565b50604082015181600201556060820151816003019080519060200190610e1c929190612353565b506080820151816004019080519060200190610e39929190612353565b5060a0820151816005019080519060200190610e56929190612353565b5060c0820151816006019080519060200190610e73929190612353565b5060e0820151816007019080519060200190610e90929190612353565b50610100820151816008019080519060200190610eae929190612450565b506101208201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600a015561016082015181600b019080519060200190610f1f929190612353565b5090505060058161012001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634780468f8261012001516040518263ffffffff1660e01b8152600401610feb9190613298565b600060405180830381600087803b15801561100557600080fd5b505af1158015611019573d6000803e3d6000fd5b5050505060038160c00151604051611031919061321d565b90815260200160405180910390206004600083610120015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090806001815401808255809150506001900390600052602060002090600c020160009091909190915060008201816000019080546110c0906137fa565b6110cb9291906124b0565b5060018201816001019080546110e0906137fa565b6110eb9291906124b0565b5060028201548160020155600382018160030190805461110a906137fa565b6111159291906124b0565b50600482018160040190805461112a906137fa565b6111359291906124b0565b50600582018160050190805461114a906137fa565b6111559291906124b0565b50600682018160060190805461116a906137fa565b6111759291906124b0565b50600782018160070190805461118a906137fa565b6111959291906124b0565b5060088201816008019080546111ac92919061253d565b506009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a82015481600a0155600b820181600b01908054611232906137fa565b61123d9291906124b0565b5050507f6de443a130019ea936f85998b3cd988234c2406f4615105f328e80fab539f206816000015182602001518360400151846060015185608001518660a001518760c001518860e001518961010001518a61012001518b61014001518c61016001516040516112b99c9b9a9998979695949392919061334f565b60405180910390a150565b6112cc611e0e565b73ffffffffffffffffffffffffffffffffffffffff166112ea611a6e565b73ffffffffffffffffffffffffffffffffffffffff1614611340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133790613488565b60405180910390fd5b61134a6000611ef8565b565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054611398906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546113c4906137fa565b80156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b50505050509050919050565b606060038260405161142f919061321d565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015611a6357838290600052602060002090600c020160405180610180016040529081600082018054611491906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546114bd906137fa565b801561150a5780601f106114df5761010080835404028352916020019161150a565b820191906000526020600020905b8154815290600101906020018083116114ed57829003601f168201915b50505050508152602001600182018054611523906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461154f906137fa565b801561159c5780601f106115715761010080835404028352916020019161159c565b820191906000526020600020905b81548152906001019060200180831161157f57829003601f168201915b50505050508152602001600282015481526020016003820180546115bf906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546115eb906137fa565b80156116385780601f1061160d57610100808354040283529160200191611638565b820191906000526020600020905b81548152906001019060200180831161161b57829003601f168201915b50505050508152602001600482018054611651906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461167d906137fa565b80156116ca5780601f1061169f576101008083540402835291602001916116ca565b820191906000526020600020905b8154815290600101906020018083116116ad57829003601f168201915b505050505081526020016005820180546116e3906137fa565b80601f016020809104026020016040519081016040528092919081815260200182805461170f906137fa565b801561175c5780601f106117315761010080835404028352916020019161175c565b820191906000526020600020905b81548152906001019060200180831161173f57829003601f168201915b50505050508152602001600682018054611775906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546117a1906137fa565b80156117ee5780601f106117c3576101008083540402835291602001916117ee565b820191906000526020600020905b8154815290600101906020018083116117d157829003601f168201915b50505050508152602001600782018054611807906137fa565b80601f0160208091040260200160405190810160405280929190818152602001828054611833906137fa565b80156118805780601f1061185557610100808354040283529160200191611880565b820191906000526020600020905b81548152906001019060200180831161186357829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020016000905b8282101561195a5783829060005260206000200180546118cd906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546118f9906137fa565b80156119465780601f1061191b57610100808354040283529160200191611946565b820191906000526020600020905b81548152906001019060200180831161192957829003601f168201915b5050505050815260200190600101906118ae565b5050505081526020016009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600a8201548152602001600b820180546119d2906137fa565b80601f01602080910402602001604051908101604052809291908181526020018280546119fe906137fa565b8015611a4b5780601f10611a2057610100808354040283529160200191611a4b565b820191906000526020600020905b815481529060010190602001808311611a2e57829003601f168201915b5050505050815250508152602001906001019061145d565b505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b60606005805480602002602001604051908101604052809291908181526020018280548015611b8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611b43575b5050505050905090565b611ba082610542565b611ba981611d1a565b611bb38383611e16565b505050565b611bc0611e0e565b73ffffffffffffffffffffffffffffffffffffffff16611bde611a6e565b73ffffffffffffffffffffffffffffffffffffffff1614611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90613488565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9b90613468565b60405180910390fd5b611cad81611ef8565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611d2b81611d26611e0e565b611fbc565b50565b611d388282611a97565b611e0a57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611daf611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b611e208282611a97565b15611ef45760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611e99611e0e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fc68282611a97565b61205557611feb8173ffffffffffffffffffffffffffffffffffffffff166014612059565b611ff98360001c6020612059565b60405160200161200a929190613249565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204c919061332d565b60405180910390fd5b5050565b60606000600283600261206c91906136b6565b6120769190613660565b67ffffffffffffffff8111156120b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156120e75781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612145577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106121cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261220f91906136b6565b6122199190613660565b90505b6001811115612305577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612281577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8282815181106122be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806122fe906137d0565b905061221c565b5060008414612349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234090613448565b60405180910390fd5b8091505092915050565b82805461235f906137fa565b90600052602060002090601f01602090048101928261238157600085556123c8565b82601f1061239a57805160ff19168380011785556123c8565b828001600101855582156123c8579182015b828111156123c75782518255916020019190600101906123ac565b5b5090506123d591906125a5565b5090565b604051806101800160405280606081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b82805482825590600052602060002090810192821561249f579160200282015b8281111561249e57825182908051906020019061248e929190612353565b5091602001919060010190612470565b5b5090506124ac91906125c2565b5090565b8280546124bc906137fa565b90600052602060002090601f0160209004810192826124de576000855561252c565b82601f106124ef578054855561252c565b8280016001018555821561252c57600052602060002091601f016020900482015b8281111561252b578254825591600101919060010190612510565b5b50905061253991906125a5565b5090565b8280548282559060005260206000209081019282156125945760005260206000209182015b82811115612593578282908054612578906137fa565b6125839291906124b0565b5091600101919060010190612562565b5b5090506125a191906125c2565b5090565b5b808211156125be5760008160009055506001016125a6565b5090565b5b808211156125e257600081816125d991906125e6565b506001016125c3565b5090565b5080546125f2906137fa565b6000825580601f106126045750612623565b601f01602090049060005260206000209081019061262291906125a5565b5b50565b60006126396126348461350f565b6134ea565b9050808382526020820190508285602086028201111561265857600080fd5b60005b858110156126a257813567ffffffffffffffff81111561267a57600080fd5b8086016126878982612791565b8552602085019450602084019350505060018101905061265b565b5050509392505050565b60006126bf6126ba8461353b565b6134ea565b9050828152602081018484840111156126d757600080fd5b6126e284828561378e565b509392505050565b60006126fd6126f88461353b565b6134ea565b90508281526020810184848401111561271557600080fd5b61272084828561379d565b509392505050565b60008135905061273781613a8f565b92915050565b600082601f83011261274e57600080fd5b813561275e848260208601612626565b91505092915050565b60008135905061277681613aa6565b92915050565b60008135905061278b81613abd565b92915050565b600082601f8301126127a257600080fd5b81356127b28482602086016126ac565b91505092915050565b600082601f8301126127cc57600080fd5b81516127dc8482602086016126ea565b91505092915050565b600061018082840312156127f857600080fd5b6128036101806134ea565b9050600082013567ffffffffffffffff81111561281f57600080fd5b61282b84828501612791565b600083015250602082013567ffffffffffffffff81111561284b57600080fd5b61285784828501612791565b602083015250604061286b848285016129db565b604083015250606082013567ffffffffffffffff81111561288b57600080fd5b61289784828501612791565b606083015250608082013567ffffffffffffffff8111156128b757600080fd5b6128c384828501612791565b60808301525060a082013567ffffffffffffffff8111156128e357600080fd5b6128ef84828501612791565b60a08301525060c082013567ffffffffffffffff81111561290f57600080fd5b61291b84828501612791565b60c08301525060e082013567ffffffffffffffff81111561293b57600080fd5b61294784828501612791565b60e08301525061010082013567ffffffffffffffff81111561296857600080fd5b6129748482850161273d565b6101008301525061012061298a84828501612728565b610120830152506101406129a0848285016129db565b6101408301525061016082013567ffffffffffffffff8111156129c257600080fd5b6129ce84828501612791565b6101608301525092915050565b6000813590506129ea81613ad4565b92915050565b600060208284031215612a0257600080fd5b6000612a1084828501612728565b91505092915050565b600060208284031215612a2b57600080fd5b6000612a3984828501612767565b91505092915050565b60008060408385031215612a5557600080fd5b6000612a6385828601612767565b9250506020612a7485828601612728565b9150509250929050565b600060208284031215612a9057600080fd5b6000612a9e8482850161277c565b91505092915050565b600060208284031215612ab957600080fd5b600082013567ffffffffffffffff811115612ad357600080fd5b612adf84828501612791565b91505092915050565b600060208284031215612afa57600080fd5b600082015167ffffffffffffffff811115612b1457600080fd5b612b20848285016127bb565b91505092915050565b600060208284031215612b3b57600080fd5b600082013567ffffffffffffffff811115612b5557600080fd5b612b61848285016127e5565b91505092915050565b600060208284031215612b7c57600080fd5b6000612b8a848285016129db565b91505092915050565b6000612b9f8383612bd3565b60208301905092915050565b6000612bb78383612dcc565b905092915050565b6000612bcb8383612f87565b905092915050565b612bdc81613710565b82525050565b612beb81613710565b82525050565b6000612bfc8261359c565b612c0681856135ef565b9350612c118361356c565b8060005b83811015612c42578151612c298882612b93565b9750612c34836135c8565b925050600181019050612c15565b5085935050505092915050565b6000612c5a826135a7565b612c648185613600565b935083602082028501612c768561357c565b8060005b85811015612cb25784840389528151612c938582612bab565b9450612c9e836135d5565b925060208a01995050600181019050612c7a565b50829750879550505050505092915050565b6000612ccf826135a7565b612cd98185613611565b935083602082028501612ceb8561357c565b8060005b85811015612d275784840389528151612d088582612bab565b9450612d13836135d5565b925060208a01995050600181019050612cef565b50829750879550505050505092915050565b6000612d44826135b2565b612d4e8185613622565b935083602082028501612d608561358c565b8060005b85811015612d9c5784840389528151612d7d8582612bbf565b9450612d88836135e2565b925060208a01995050600181019050612d64565b50829750879550505050505092915050565b612db781613722565b82525050565b612dc68161372e565b82525050565b6000612dd7826135bd565b612de18185613633565b9350612df181856020860161379d565b612dfa816138ea565b840191505092915050565b6000612e10826135bd565b612e1a8185613644565b9350612e2a81856020860161379d565b612e33816138ea565b840191505092915050565b6000612e49826135bd565b612e538185613655565b9350612e6381856020860161379d565b80840191505092915050565b6000612e7c602083613644565b9150612e87826138fb565b602082019050919050565b6000612e9f602683613644565b9150612eaa82613924565b604082019050919050565b6000612ec2602083613644565b9150612ecd82613973565b602082019050919050565b6000612ee5600683613655565b9150612ef08261399c565b600682019050919050565b6000612f08601783613655565b9150612f13826139c5565b601782019050919050565b6000612f2b600583613655565b9150612f36826139ee565b600582019050919050565b6000612f4e601183613655565b9150612f5982613a17565b601182019050919050565b6000612f71602f83613644565b9150612f7c82613a40565b604082019050919050565b6000610180830160008301518482036000860152612fa58282612dcc565b91505060208301518482036020860152612fbf8282612dcc565b9150506040830151612fd460408601826131ff565b5060608301518482036060860152612fec8282612dcc565b915050608083015184820360808601526130068282612dcc565b91505060a083015184820360a08601526130208282612dcc565b91505060c083015184820360c086015261303a8282612dcc565b91505060e083015184820360e08601526130548282612dcc565b9150506101008301518482036101008601526130708282612c4f565b915050610120830151613087610120860182612bd3565b5061014083015161309c6101408601826131ff565b506101608301518482036101608601526130b68282612dcc565b9150508091505092915050565b60006101808301600083015184820360008601526130e18282612dcc565b915050602083015184820360208601526130fb8282612dcc565b915050604083015161311060408601826131ff565b50606083015184820360608601526131288282612dcc565b915050608083015184820360808601526131428282612dcc565b91505060a083015184820360a086015261315c8282612dcc565b91505060c083015184820360c08601526131768282612dcc565b91505060e083015184820360e08601526131908282612dcc565b9150506101008301518482036101008601526131ac8282612c4f565b9150506101208301516131c3610120860182612bd3565b506101408301516131d86101408601826131ff565b506101608301518482036101608601526131f28282612dcc565b9150508091505092915050565b61320881613784565b82525050565b61321781613784565b82525050565b60006132298284612e3e565b915081905092915050565b600061323f82612ed8565b9150819050919050565b600061325482612efb565b91506132608285612e3e565b915061326b82612f41565b91506132778284612e3e565b91508190509392505050565b600061328e82612f1e565b9150819050919050565b60006020820190506132ad6000830184612be2565b92915050565b600060208201905081810360008301526132cd8184612bf1565b905092915050565b600060208201905081810360008301526132ef8184612d39565b905092915050565b600060208201905061330c6000830184612dae565b92915050565b60006020820190506133276000830184612dbd565b92915050565b600060208201905081810360008301526133478184612e05565b905092915050565b600061018082019050818103600083015261336a818f612e05565b9050818103602083015261337e818e612e05565b905061338d604083018d61320e565b818103606083015261339f818c612e05565b905081810360808301526133b3818b612e05565b905081810360a08301526133c7818a612e05565b905081810360c08301526133db8189612e05565b905081810360e08301526133ef8188612e05565b90508181036101008301526134048187612cc4565b9050613414610120830186612be2565b61342261014083018561320e565b8181036101608301526134358184612e05565b90509d9c50505050505050505050505050565b6000602082019050818103600083015261346181612e6f565b9050919050565b6000602082019050818103600083015261348181612e92565b9050919050565b600060208201905081810360008301526134a181612eb5565b9050919050565b600060208201905081810360008301526134c181612f64565b9050919050565b600060208201905081810360008301526134e281846130c3565b905092915050565b60006134f4613505565b9050613500828261382c565b919050565b6000604051905090565b600067ffffffffffffffff82111561352a576135296138bb565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613556576135556138bb565b5b61355f826138ea565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061366b82613784565b915061367683613784565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156136ab576136aa61385d565b5b828201905092915050565b60006136c182613784565b91506136cc83613784565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137055761370461385d565b5b828202905092915050565b600061371b82613764565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156137bb5780820151818401526020810190506137a0565b838111156137ca576000848401525b50505050565b60006137db82613784565b915060008214156137ef576137ee61385d565b5b600182039050919050565b6000600282049050600182168061381257607f821691505b602082108114156138265761382561388c565b5b50919050565b613835826138ea565b810181811067ffffffffffffffff82111715613854576138536138bb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f444f43544f520000000000000000000000000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f41444d494e000000000000000000000000000000000000000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b613a9881613710565b8114613aa357600080fd5b50565b613aaf8161372e565b8114613aba57600080fd5b50565b613ac681613738565b8114613ad157600080fd5b50565b613add81613784565b8114613ae857600080fd5b5056fea26469706673582212200a852a45c7a38b7e70f75c63f5cae9dd59fc2e4dacb276e3e7af53e31e67997364736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "173:2603:2:-:0;;;1138:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:11;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1220:13:2;1191;;:43;;;;;;;;;;;;;;;;;;1138:104;173:2603;;640:96:14;693:7;719:10;712:17;;640:96;:::o;2270:187:11:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:143:19:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;173:2603:2:-;;;;;;;",
  "deployedSourceMap": "173:2603:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2479:151:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4391:129:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2356:115:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:145:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1043:32:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5787:214:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1590:498:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:11;;;:::i;:::-;;2638:135:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2204:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2096:100:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5149:147:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202:7;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;2479:151:2:-;1532:28;;;;;;;:::i;:::-;;;;;;;;;;;;;1522:39;;;;;;1483:13;;;;;;;;;;;:21;;;1505:9;1483:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1465:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;1455:63;;;;;;:106;1447:115;;;;;;2603:19:::1;2568:20;:32;2589:10;2568:32;;;;;;;;;;;;;;;:54;;;;;;;;;;;;:::i;:::-;;2479:151:::0;:::o;4391:129:7:-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;2356:115:2:-;2414:13;;:::i;:::-;2446:7;:17;2454:8;2446:17;;;;;;;;;;;;;;;2439:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:115;;;:::o;4770:145:7:-;4853:18;4866:4;4853:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;1043:32:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5787:214:7:-;5893:12;:10;:12::i;:::-;5882:23;;:7;:23;;;5874:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;1590:498:2:-;1363:27;;;;;;;:::i;:::-;;;;;;;;;;;;;1353:38;;;;;;1314:13;;;;;;;;;;;:21;;;1336:9;1314:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1296:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;1286:63;;;;;;:105;1278:114;;;;;;1692:3:::1;1663:7;:26;1671:3;:17;;;1663:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1706:15;1727:3;:17;;;1706:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:13;;;;;;;;;;;:23;;;1780:3;:17;;;1756:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1809:17;1827:3;:12;;;1809:31;;;;;;:::i;:::-;;;;;;;;;;;;;1846:7;:26;1854:3;:17;;;1846:26;;;;;;;;;;;;;;;1809:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1891:189;1901:3;:13;;;1916:3;:12;;;1930:3;:13;;;1945:3;:10;;;1957:3;:11;;;1970:3;:8;;;1980:3;:12;;;2003:3;:18;;;2023:3;:10;;;2035:3;:17;;;2054:3;:7;;;2063:3;:16;;;1891:189;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1590:498:::0;:::o;1668:101:11:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2638:135:2:-;2703:13;2735:20;:30;2756:8;2735:30;;;;;;;;;;;;;;;2728:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2638:135;;;:::o;2204:144::-;2279:15;2313:17;2331:8;2313:27;;;;;;:::i;:::-;;;;;;;;;;;;;2306:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:144;;;:::o;1036:85:11:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2895:145:7:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;2096:100:2:-;2138:16;2173:15;2166:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2096:100;:::o;5149:147:7:-;5233:18;5246:4;5233:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;:::-;5149:147:::0;;;:::o;1918:198:11:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:7:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7397:4;7365:6;:12;7372:4;7365:12;;;;;;;;;;;:20;;:29;7386:7;7365:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7447:12;:10;:12::i;:::-;7420:40;;7438:7;7420:40;;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;640:96:14:-;693:7;719:10;712:17;;640:96;:::o;7602:234:7:-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:6;:12;7730:4;7723:12;;;;;;;;;;;:20;;:29;7744:7;7723:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7806:12;:10;:12::i;:::-;7779:40;;7797:7;7779:40;;7791:4;7779:40;;;;;;;;;;7681:149;7602:234;;:::o;2270:187:11:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;3718:492:7:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;1588:441:15:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;23:823:19:-;129:5;154:91;170:74;237:6;170:74;:::i;:::-;154:91;:::i;:::-;145:100;;265:5;294:6;287:5;280:21;328:4;321:5;317:16;310:23;;354:6;404:3;396:4;388:6;384:17;379:3;375:27;372:36;369:2;;;433:1;430;423:12;369:2;469:1;454:386;479:6;476:1;473:13;454:386;;;561:3;548:17;597:18;584:11;581:35;578:2;;;629:1;626;619:12;578:2;676:11;668:6;664:24;714:47;757:3;745:10;714:47;:::i;:::-;709:3;702:60;791:4;786:3;782:14;775:21;;825:4;820:3;816:14;809:21;;514:326;;501:1;498;494:9;489:14;;454:386;;;458:14;135:711;;;;;;;:::o;852:345::-;930:5;955:66;971:49;1013:6;971:49;:::i;:::-;955:66;:::i;:::-;946:75;;1044:6;1037:5;1030:21;1082:4;1075:5;1071:16;1120:3;1111:6;1106:3;1102:16;1099:25;1096:2;;;1137:1;1134;1127:12;1096:2;1150:41;1184:6;1179:3;1174;1150:41;:::i;:::-;936:261;;;;;;:::o;1203:354::-;1292:5;1317:66;1333:49;1375:6;1333:49;:::i;:::-;1317:66;:::i;:::-;1308:75;;1406:6;1399:5;1392:21;1444:4;1437:5;1433:16;1482:3;1473:6;1468:3;1464:16;1461:25;1458:2;;;1499:1;1496;1489:12;1458:2;1512:39;1544:6;1539:3;1534;1512:39;:::i;:::-;1298:259;;;;;;:::o;1563:139::-;1609:5;1647:6;1634:20;1625:29;;1663:33;1690:5;1663:33;:::i;:::-;1615:87;;;;:::o;1724:323::-;1805:5;1854:3;1847:4;1839:6;1835:17;1831:27;1821:2;;1872:1;1869;1862:12;1821:2;1912:6;1899:20;1937:104;2037:3;2029:6;2022:4;2014:6;2010:17;1937:104;:::i;:::-;1928:113;;1811:236;;;;;:::o;2053:139::-;2099:5;2137:6;2124:20;2115:29;;2153:33;2180:5;2153:33;:::i;:::-;2105:87;;;;:::o;2198:137::-;2243:5;2281:6;2268:20;2259:29;;2297:32;2323:5;2297:32;:::i;:::-;2249:86;;;;:::o;2355:273::-;2411:5;2460:3;2453:4;2445:6;2441:17;2437:27;2427:2;;2478:1;2475;2468:12;2427:2;2518:6;2505:20;2543:79;2618:3;2610:6;2603:4;2595:6;2591:17;2543:79;:::i;:::-;2534:88;;2417:211;;;;;:::o;2648:288::-;2715:5;2764:3;2757:4;2749:6;2745:17;2741:27;2731:2;;2782:1;2779;2772:12;2731:2;2815:6;2809:13;2840:90;2926:3;2918:6;2911:4;2903:6;2899:17;2840:90;:::i;:::-;2831:99;;2721:215;;;;;:::o;2973:3138::-;3045:5;3089:6;3077:9;3072:3;3068:19;3064:32;3061:2;;;3109:1;3106;3099:12;3061:2;3131:23;3147:6;3131:23;:::i;:::-;3122:32;;3246:1;3235:9;3231:17;3218:31;3276:18;3268:6;3265:30;3262:2;;;3308:1;3305;3298:12;3262:2;3351:59;3406:3;3397:6;3386:9;3382:22;3351:59;:::i;:::-;3344:4;3337:5;3333:16;3326:85;3164:258;3513:2;3502:9;3498:18;3485:32;3544:18;3536:6;3533:30;3530:2;;;3576:1;3573;3566:12;3530:2;3619:59;3674:3;3665:6;3654:9;3650:22;3619:59;:::i;:::-;3612:4;3605:5;3601:16;3594:85;3432:258;3754:2;3795:49;3840:3;3831:6;3820:9;3816:22;3795:49;:::i;:::-;3788:4;3781:5;3777:16;3770:75;3700:156;3945:2;3934:9;3930:18;3917:32;3976:18;3968:6;3965:30;3962:2;;;4008:1;4005;3998:12;3962:2;4051:59;4106:3;4097:6;4086:9;4082:22;4051:59;:::i;:::-;4044:4;4037:5;4033:16;4026:85;3866:256;4212:3;4201:9;4197:19;4184:33;4244:18;4236:6;4233:30;4230:2;;;4276:1;4273;4266:12;4230:2;4319:59;4374:3;4365:6;4354:9;4350:22;4319:59;:::i;:::-;4312:4;4305:5;4301:16;4294:85;4132:258;4477:3;4466:9;4462:19;4449:33;4509:18;4501:6;4498:30;4495:2;;;4541:1;4538;4531:12;4495:2;4584:59;4639:3;4630:6;4619:9;4615:22;4584:59;:::i;:::-;4577:4;4570:5;4566:16;4559:85;4400:255;4746:3;4735:9;4731:19;4718:33;4778:18;4770:6;4767:30;4764:2;;;4810:1;4807;4800:12;4764:2;4853:59;4908:3;4899:6;4888:9;4884:22;4853:59;:::i;:::-;4846:4;4839:5;4835:16;4828:85;4665:259;5021:3;5010:9;5006:19;4993:33;5053:18;5045:6;5042:30;5039:2;;;5085:1;5082;5075:12;5039:2;5128:59;5183:3;5174:6;5163:9;5159:22;5128:59;:::i;:::-;5121:4;5114:5;5110:16;5103:85;4934:265;5288:3;5277:9;5273:19;5260:33;5320:18;5312:6;5309:30;5306:2;;;5352:1;5349;5342:12;5306:2;5397:84;5477:3;5468:6;5457:9;5453:22;5397:84;:::i;:::-;5388:6;5381:5;5377:18;5370:112;5209:284;5561:3;5605:49;5650:3;5641:6;5630:9;5626:22;5605:49;:::i;:::-;5596:6;5589:5;5585:18;5578:77;5503:163;5724:3;5768:49;5813:3;5804:6;5793:9;5789:22;5768:49;:::i;:::-;5759:6;5752:5;5748:18;5741:77;5676:153;5924:3;5913:9;5909:19;5896:33;5956:18;5948:6;5945:30;5942:2;;;5988:1;5985;5978:12;5942:2;6033:59;6088:3;6079:6;6068:9;6064:22;6033:59;:::i;:::-;6024:6;6017:5;6013:18;6006:87;5839:265;3051:3060;;;;:::o;6117:139::-;6163:5;6201:6;6188:20;6179:29;;6217:33;6244:5;6217:33;:::i;:::-;6169:87;;;;:::o;6262:262::-;6321:6;6370:2;6358:9;6349:7;6345:23;6341:32;6338:2;;;6386:1;6383;6376:12;6338:2;6429:1;6454:53;6499:7;6490:6;6479:9;6475:22;6454:53;:::i;:::-;6444:63;;6400:117;6328:196;;;;:::o;6530:262::-;6589:6;6638:2;6626:9;6617:7;6613:23;6609:32;6606:2;;;6654:1;6651;6644:12;6606:2;6697:1;6722:53;6767:7;6758:6;6747:9;6743:22;6722:53;:::i;:::-;6712:63;;6668:117;6596:196;;;;:::o;6798:407::-;6866:6;6874;6923:2;6911:9;6902:7;6898:23;6894:32;6891:2;;;6939:1;6936;6929:12;6891:2;6982:1;7007:53;7052:7;7043:6;7032:9;7028:22;7007:53;:::i;:::-;6997:63;;6953:117;7109:2;7135:53;7180:7;7171:6;7160:9;7156:22;7135:53;:::i;:::-;7125:63;;7080:118;6881:324;;;;;:::o;7211:260::-;7269:6;7318:2;7306:9;7297:7;7293:23;7289:32;7286:2;;;7334:1;7331;7324:12;7286:2;7377:1;7402:52;7446:7;7437:6;7426:9;7422:22;7402:52;:::i;:::-;7392:62;;7348:116;7276:195;;;;:::o;7477:375::-;7546:6;7595:2;7583:9;7574:7;7570:23;7566:32;7563:2;;;7611:1;7608;7601:12;7563:2;7682:1;7671:9;7667:17;7654:31;7712:18;7704:6;7701:30;7698:2;;;7744:1;7741;7734:12;7698:2;7772:63;7827:7;7818:6;7807:9;7803:22;7772:63;:::i;:::-;7762:73;;7625:220;7553:299;;;;:::o;7858:390::-;7938:6;7987:2;7975:9;7966:7;7962:23;7958:32;7955:2;;;8003:1;8000;7993:12;7955:2;8067:1;8056:9;8052:17;8046:24;8097:18;8089:6;8086:30;8083:2;;;8129:1;8126;8119:12;8083:2;8157:74;8223:7;8214:6;8203:9;8199:22;8157:74;:::i;:::-;8147:84;;8017:224;7945:303;;;;:::o;8254:401::-;8336:6;8385:2;8373:9;8364:7;8360:23;8356:32;8353:2;;;8401:1;8398;8391:12;8353:2;8472:1;8461:9;8457:17;8444:31;8502:18;8494:6;8491:30;8488:2;;;8534:1;8531;8524:12;8488:2;8562:76;8630:7;8621:6;8610:9;8606:22;8562:76;:::i;:::-;8552:86;;8415:233;8343:312;;;;:::o;8661:262::-;8720:6;8769:2;8757:9;8748:7;8744:23;8740:32;8737:2;;;8785:1;8782;8775:12;8737:2;8828:1;8853:53;8898:7;8889:6;8878:9;8874:22;8853:53;:::i;:::-;8843:63;;8799:117;8727:196;;;;:::o;8929:179::-;8998:10;9019:46;9061:3;9053:6;9019:46;:::i;:::-;9097:4;9092:3;9088:14;9074:28;;9009:99;;;;:::o;9114:196::-;9203:10;9238:66;9300:3;9292:6;9238:66;:::i;:::-;9224:80;;9214:96;;;;:::o;9316:248::-;9431:10;9466:92;9554:3;9546:6;9466:92;:::i;:::-;9452:106;;9442:122;;;;:::o;9570:108::-;9647:24;9665:5;9647:24;:::i;:::-;9642:3;9635:37;9625:53;;:::o;9684:118::-;9771:24;9789:5;9771:24;:::i;:::-;9766:3;9759:37;9749:53;;:::o;9838:732::-;9957:3;9986:54;10034:5;9986:54;:::i;:::-;10056:86;10135:6;10130:3;10056:86;:::i;:::-;10049:93;;10166:56;10216:5;10166:56;:::i;:::-;10245:7;10276:1;10261:284;10286:6;10283:1;10280:13;10261:284;;;10362:6;10356:13;10389:63;10448:3;10433:13;10389:63;:::i;:::-;10382:70;;10475:60;10528:6;10475:60;:::i;:::-;10465:70;;10321:224;10308:1;10305;10301:9;10296:14;;10261:284;;;10265:14;10561:3;10554:10;;9962:608;;;;;;;:::o;10604:971::-;10733:3;10762:64;10820:5;10762:64;:::i;:::-;10842:86;10921:6;10916:3;10842:86;:::i;:::-;10835:93;;10954:3;10999:4;10991:6;10987:17;10982:3;10978:27;11029:66;11089:5;11029:66;:::i;:::-;11118:7;11149:1;11134:396;11159:6;11156:1;11153:13;11134:396;;;11230:9;11224:4;11220:20;11215:3;11208:33;11281:6;11275:13;11309:84;11388:4;11373:13;11309:84;:::i;:::-;11301:92;;11416:70;11479:6;11416:70;:::i;:::-;11406:80;;11515:4;11510:3;11506:14;11499:21;;11194:336;11181:1;11178;11174:9;11169:14;;11134:396;;;11138:14;11546:4;11539:11;;11566:3;11559:10;;10738:837;;;;;;;;;:::o;11609:991::-;11748:3;11777:64;11835:5;11777:64;:::i;:::-;11857:96;11946:6;11941:3;11857:96;:::i;:::-;11850:103;;11979:3;12024:4;12016:6;12012:17;12007:3;12003:27;12054:66;12114:5;12054:66;:::i;:::-;12143:7;12174:1;12159:396;12184:6;12181:1;12178:13;12159:396;;;12255:9;12249:4;12245:20;12240:3;12233:33;12306:6;12300:13;12334:84;12413:4;12398:13;12334:84;:::i;:::-;12326:92;;12441:70;12504:6;12441:70;:::i;:::-;12431:80;;12540:4;12535:3;12531:14;12524:21;;12219:336;12206:1;12203;12199:9;12194:14;;12159:396;;;12163:14;12571:4;12564:11;;12591:3;12584:10;;11753:847;;;;;;;;;:::o;12668:1095::-;12833:3;12862:77;12933:5;12862:77;:::i;:::-;12955:109;13057:6;13052:3;12955:109;:::i;:::-;12948:116;;13090:3;13135:4;13127:6;13123:17;13118:3;13114:27;13165:79;13238:5;13165:79;:::i;:::-;13267:7;13298:1;13283:435;13308:6;13305:1;13302:13;13283:435;;;13379:9;13373:4;13369:20;13364:3;13357:33;13430:6;13424:13;13458:110;13563:4;13548:13;13458:110;:::i;:::-;13450:118;;13591:83;13667:6;13591:83;:::i;:::-;13581:93;;13703:4;13698:3;13694:14;13687:21;;13343:375;13330:1;13327;13323:9;13318:14;;13283:435;;;13287:14;13734:4;13727:11;;13754:3;13747:10;;12838:925;;;;;;;;;:::o;13769:109::-;13850:21;13865:5;13850:21;:::i;:::-;13845:3;13838:34;13828:50;;:::o;13884:118::-;13971:24;13989:5;13971:24;:::i;:::-;13966:3;13959:37;13949:53;;:::o;14008:344::-;14086:3;14114:39;14147:5;14114:39;:::i;:::-;14169:61;14223:6;14218:3;14169:61;:::i;:::-;14162:68;;14239:52;14284:6;14279:3;14272:4;14265:5;14261:16;14239:52;:::i;:::-;14316:29;14338:6;14316:29;:::i;:::-;14311:3;14307:39;14300:46;;14090:262;;;;;:::o;14358:364::-;14446:3;14474:39;14507:5;14474:39;:::i;:::-;14529:71;14593:6;14588:3;14529:71;:::i;:::-;14522:78;;14609:52;14654:6;14649:3;14642:4;14635:5;14631:16;14609:52;:::i;:::-;14686:29;14708:6;14686:29;:::i;:::-;14681:3;14677:39;14670:46;;14450:272;;;;;:::o;14728:377::-;14834:3;14862:39;14895:5;14862:39;:::i;:::-;14917:89;14999:6;14994:3;14917:89;:::i;:::-;14910:96;;15015:52;15060:6;15055:3;15048:4;15041:5;15037:16;15015:52;:::i;:::-;15092:6;15087:3;15083:16;15076:23;;14838:267;;;;;:::o;15111:366::-;15253:3;15274:67;15338:2;15333:3;15274:67;:::i;:::-;15267:74;;15350:93;15439:3;15350:93;:::i;:::-;15468:2;15463:3;15459:12;15452:19;;15257:220;;;:::o;15483:366::-;15625:3;15646:67;15710:2;15705:3;15646:67;:::i;:::-;15639:74;;15722:93;15811:3;15722:93;:::i;:::-;15840:2;15835:3;15831:12;15824:19;;15629:220;;;:::o;15855:366::-;15997:3;16018:67;16082:2;16077:3;16018:67;:::i;:::-;16011:74;;16094:93;16183:3;16094:93;:::i;:::-;16212:2;16207:3;16203:12;16196:19;;16001:220;;;:::o;16227:400::-;16387:3;16408:84;16490:1;16485:3;16408:84;:::i;:::-;16401:91;;16501:93;16590:3;16501:93;:::i;:::-;16619:1;16614:3;16610:11;16603:18;;16391:236;;;:::o;16633:402::-;16793:3;16814:85;16896:2;16891:3;16814:85;:::i;:::-;16807:92;;16908:93;16997:3;16908:93;:::i;:::-;17026:2;17021:3;17017:12;17010:19;;16797:238;;;:::o;17041:400::-;17201:3;17222:84;17304:1;17299:3;17222:84;:::i;:::-;17215:91;;17315:93;17404:3;17315:93;:::i;:::-;17433:1;17428:3;17424:11;17417:18;;17205:236;;;:::o;17447:402::-;17607:3;17628:85;17710:2;17705:3;17628:85;:::i;:::-;17621:92;;17722:93;17811:3;17722:93;:::i;:::-;17840:2;17835:3;17831:12;17824:19;;17611:238;;;:::o;17855:366::-;17997:3;18018:67;18082:2;18077:3;18018:67;:::i;:::-;18011:74;;18094:93;18183:3;18094:93;:::i;:::-;18212:2;18207:3;18203:12;18196:19;;18001:220;;;:::o;18285:3019::-;18390:3;18426:6;18421:3;18417:16;18520:4;18513:5;18509:16;18503:23;18573:3;18567:4;18563:14;18556:4;18551:3;18547:14;18540:38;18599:73;18667:4;18653:12;18599:73;:::i;:::-;18591:81;;18443:240;18769:4;18762:5;18758:16;18752:23;18822:3;18816:4;18812:14;18805:4;18800:3;18796:14;18789:38;18848:73;18916:4;18902:12;18848:73;:::i;:::-;18840:81;;18693:239;19019:4;19012:5;19008:16;19002:23;19038:63;19095:4;19090:3;19086:14;19072:12;19038:63;:::i;:::-;18942:169;19195:4;19188:5;19184:16;19178:23;19248:3;19242:4;19238:14;19231:4;19226:3;19222:14;19215:38;19274:73;19342:4;19328:12;19274:73;:::i;:::-;19266:81;;19121:237;19443:4;19436:5;19432:16;19426:23;19496:3;19490:4;19486:14;19479:4;19474:3;19470:14;19463:38;19522:73;19590:4;19576:12;19522:73;:::i;:::-;19514:81;;19368:238;19688:4;19681:5;19677:16;19671:23;19741:3;19735:4;19731:14;19724:4;19719:3;19715:14;19708:38;19767:73;19835:4;19821:12;19767:73;:::i;:::-;19759:81;;19616:235;19937:4;19930:5;19926:16;19920:23;19990:3;19984:4;19980:14;19973:4;19968:3;19964:14;19957:38;20016:73;20084:4;20070:12;20016:73;:::i;:::-;20008:81;;19861:239;20192:4;20185:5;20181:16;20175:23;20245:3;20239:4;20235:14;20228:4;20223:3;20219:14;20212:38;20271:73;20339:4;20325:12;20271:73;:::i;:::-;20263:81;;20110:245;20439:6;20432:5;20428:18;20422:25;20496:3;20490:4;20486:14;20477:6;20472:3;20468:16;20461:40;20522:123;20640:4;20626:12;20522:123;:::i;:::-;20514:131;;20365:291;20747:6;20740:5;20736:18;20730:25;20768:65;20825:6;20820:3;20816:16;20802:12;20768:65;:::i;:::-;20666:177;20924:6;20917:5;20913:18;20907:25;20945:65;21002:6;20997:3;20993:16;20979:12;20945:65;:::i;:::-;20853:167;21110:6;21103:5;21099:18;21093:25;21167:3;21161:4;21157:14;21148:6;21143:3;21139:16;21132:40;21193:73;21261:4;21247:12;21193:73;:::i;:::-;21185:81;;21030:247;21294:4;21287:11;;18395:2909;;;;;:::o;21368:3029::-;21483:3;21519:6;21514:3;21510:16;21613:4;21606:5;21602:16;21596:23;21666:3;21660:4;21656:14;21649:4;21644:3;21640:14;21633:38;21692:73;21760:4;21746:12;21692:73;:::i;:::-;21684:81;;21536:240;21862:4;21855:5;21851:16;21845:23;21915:3;21909:4;21905:14;21898:4;21893:3;21889:14;21882:38;21941:73;22009:4;21995:12;21941:73;:::i;:::-;21933:81;;21786:239;22112:4;22105:5;22101:16;22095:23;22131:63;22188:4;22183:3;22179:14;22165:12;22131:63;:::i;:::-;22035:169;22288:4;22281:5;22277:16;22271:23;22341:3;22335:4;22331:14;22324:4;22319:3;22315:14;22308:38;22367:73;22435:4;22421:12;22367:73;:::i;:::-;22359:81;;22214:237;22536:4;22529:5;22525:16;22519:23;22589:3;22583:4;22579:14;22572:4;22567:3;22563:14;22556:38;22615:73;22683:4;22669:12;22615:73;:::i;:::-;22607:81;;22461:238;22781:4;22774:5;22770:16;22764:23;22834:3;22828:4;22824:14;22817:4;22812:3;22808:14;22801:38;22860:73;22928:4;22914:12;22860:73;:::i;:::-;22852:81;;22709:235;23030:4;23023:5;23019:16;23013:23;23083:3;23077:4;23073:14;23066:4;23061:3;23057:14;23050:38;23109:73;23177:4;23163:12;23109:73;:::i;:::-;23101:81;;22954:239;23285:4;23278:5;23274:16;23268:23;23338:3;23332:4;23328:14;23321:4;23316:3;23312:14;23305:38;23364:73;23432:4;23418:12;23364:73;:::i;:::-;23356:81;;23203:245;23532:6;23525:5;23521:18;23515:25;23589:3;23583:4;23579:14;23570:6;23565:3;23561:16;23554:40;23615:123;23733:4;23719:12;23615:123;:::i;:::-;23607:131;;23458:291;23840:6;23833:5;23829:18;23823:25;23861:65;23918:6;23913:3;23909:16;23895:12;23861:65;:::i;:::-;23759:177;24017:6;24010:5;24006:18;24000:25;24038:65;24095:6;24090:3;24086:16;24072:12;24038:65;:::i;:::-;23946:167;24203:6;24196:5;24192:18;24186:25;24260:3;24254:4;24250:14;24241:6;24236:3;24232:16;24225:40;24286:73;24354:4;24340:12;24286:73;:::i;:::-;24278:81;;24123:247;24387:4;24380:11;;21488:2909;;;;;:::o;24403:108::-;24480:24;24498:5;24480:24;:::i;:::-;24475:3;24468:37;24458:53;;:::o;24517:118::-;24604:24;24622:5;24604:24;:::i;:::-;24599:3;24592:37;24582:53;;:::o;24641:275::-;24773:3;24795:95;24886:3;24877:6;24795:95;:::i;:::-;24788:102;;24907:3;24900:10;;24777:139;;;;:::o;24922:381::-;25107:3;25129:148;25273:3;25129:148;:::i;:::-;25122:155;;25294:3;25287:10;;25111:192;;;:::o;25309:967::-;25691:3;25713:148;25857:3;25713:148;:::i;:::-;25706:155;;25878:95;25969:3;25960:6;25878:95;:::i;:::-;25871:102;;25990:148;26134:3;25990:148;:::i;:::-;25983:155;;26155:95;26246:3;26237:6;26155:95;:::i;:::-;26148:102;;26267:3;26260:10;;25695:581;;;;;:::o;26282:381::-;26467:3;26489:148;26633:3;26489:148;:::i;:::-;26482:155;;26654:3;26647:10;;26471:192;;;:::o;26669:222::-;26762:4;26800:2;26789:9;26785:18;26777:26;;26813:71;26881:1;26870:9;26866:17;26857:6;26813:71;:::i;:::-;26767:124;;;;:::o;26897:373::-;27040:4;27078:2;27067:9;27063:18;27055:26;;27127:9;27121:4;27117:20;27113:1;27102:9;27098:17;27091:47;27155:108;27258:4;27249:6;27155:108;:::i;:::-;27147:116;;27045:225;;;;:::o;27276:465::-;27465:4;27503:2;27492:9;27488:18;27480:26;;27552:9;27546:4;27542:20;27538:1;27527:9;27523:17;27516:47;27580:154;27729:4;27720:6;27580:154;:::i;:::-;27572:162;;27470:271;;;;:::o;27747:210::-;27834:4;27872:2;27861:9;27857:18;27849:26;;27885:65;27947:1;27936:9;27932:17;27923:6;27885:65;:::i;:::-;27839:118;;;;:::o;27963:222::-;28056:4;28094:2;28083:9;28079:18;28071:26;;28107:71;28175:1;28164:9;28160:17;28151:6;28107:71;:::i;:::-;28061:124;;;;:::o;28191:313::-;28304:4;28342:2;28331:9;28327:18;28319:26;;28391:9;28385:4;28381:20;28377:1;28366:9;28362:17;28355:47;28419:78;28492:4;28483:6;28419:78;:::i;:::-;28411:86;;28309:195;;;;:::o;28510:2364::-;29143:4;29181:3;29170:9;29166:19;29158:27;;29231:9;29225:4;29221:20;29217:1;29206:9;29202:17;29195:47;29259:78;29332:4;29323:6;29259:78;:::i;:::-;29251:86;;29384:9;29378:4;29374:20;29369:2;29358:9;29354:18;29347:48;29412:78;29485:4;29476:6;29412:78;:::i;:::-;29404:86;;29500:72;29568:2;29557:9;29553:18;29544:6;29500:72;:::i;:::-;29619:9;29613:4;29609:20;29604:2;29593:9;29589:18;29582:48;29647:78;29720:4;29711:6;29647:78;:::i;:::-;29639:86;;29773:9;29767:4;29763:20;29757:3;29746:9;29742:19;29735:49;29801:78;29874:4;29865:6;29801:78;:::i;:::-;29793:86;;29927:9;29921:4;29917:20;29911:3;29900:9;29896:19;29889:49;29955:78;30028:4;30019:6;29955:78;:::i;:::-;29947:86;;30081:9;30075:4;30071:20;30065:3;30054:9;30050:19;30043:49;30109:78;30182:4;30173:6;30109:78;:::i;:::-;30101:86;;30235:9;30229:4;30225:20;30219:3;30208:9;30204:19;30197:49;30263:78;30336:4;30327:6;30263:78;:::i;:::-;30255:86;;30389:9;30383:4;30379:20;30373:3;30362:9;30358:19;30351:49;30417:128;30540:4;30531:6;30417:128;:::i;:::-;30409:136;;30555:73;30623:3;30612:9;30608:19;30599:6;30555:73;:::i;:::-;30638:74;30707:3;30696:9;30692:19;30682:7;30638:74;:::i;:::-;30760:9;30754:4;30750:20;30744:3;30733:9;30729:19;30722:49;30788:79;30862:4;30852:7;30788:79;:::i;:::-;30780:87;;29148:1726;;;;;;;;;;;;;;;:::o;30880:419::-;31046:4;31084:2;31073:9;31069:18;31061:26;;31133:9;31127:4;31123:20;31119:1;31108:9;31104:17;31097:47;31161:131;31287:4;31161:131;:::i;:::-;31153:139;;31051:248;;;:::o;31305:419::-;31471:4;31509:2;31498:9;31494:18;31486:26;;31558:9;31552:4;31548:20;31544:1;31533:9;31529:17;31522:47;31586:131;31712:4;31586:131;:::i;:::-;31578:139;;31476:248;;;:::o;31730:419::-;31896:4;31934:2;31923:9;31919:18;31911:26;;31983:9;31977:4;31973:20;31969:1;31958:9;31954:17;31947:47;32011:131;32137:4;32011:131;:::i;:::-;32003:139;;31901:248;;;:::o;32155:419::-;32321:4;32359:2;32348:9;32344:18;32336:26;;32408:9;32402:4;32398:20;32394:1;32383:9;32379:17;32372:47;32436:131;32562:4;32436:131;:::i;:::-;32428:139;;32326:248;;;:::o;32580:365::-;32719:4;32757:2;32746:9;32742:18;32734:26;;32806:9;32800:4;32796:20;32792:1;32781:9;32777:17;32770:47;32834:104;32933:4;32924:6;32834:104;:::i;:::-;32826:112;;32724:221;;;;:::o;32951:129::-;32985:6;33012:20;;:::i;:::-;33002:30;;33041:33;33069:4;33061:6;33041:33;:::i;:::-;32992:88;;;:::o;33086:75::-;33119:6;33152:2;33146:9;33136:19;;33126:35;:::o;33167:321::-;33254:4;33344:18;33336:6;33333:30;33330:2;;;33366:18;;:::i;:::-;33330:2;33416:4;33408:6;33404:17;33396:25;;33476:4;33470;33466:15;33458:23;;33259:229;;;:::o;33494:308::-;33556:4;33646:18;33638:6;33635:30;33632:2;;;33668:18;;:::i;:::-;33632:2;33706:29;33728:6;33706:29;:::i;:::-;33698:37;;33790:4;33784;33780:15;33772:23;;33561:241;;;:::o;33808:132::-;33875:4;33898:3;33890:11;;33928:4;33923:3;33919:14;33911:22;;33880:60;;;:::o;33946:142::-;34023:4;34046:3;34038:11;;34076:4;34071:3;34067:14;34059:22;;34028:60;;;:::o;34094:155::-;34184:4;34207:3;34199:11;;34237:4;34232:3;34228:14;34220:22;;34189:60;;;:::o;34255:114::-;34322:6;34356:5;34350:12;34340:22;;34329:40;;;:::o;34375:124::-;34452:6;34486:5;34480:12;34470:22;;34459:40;;;:::o;34505:137::-;34595:6;34629:5;34623:12;34613:22;;34602:40;;;:::o;34648:99::-;34700:6;34734:5;34728:12;34718:22;;34707:40;;;:::o;34753:113::-;34823:4;34855;34850:3;34846:14;34838:22;;34828:38;;;:::o;34872:123::-;34952:4;34984;34979:3;34975:14;34967:22;;34957:38;;;:::o;35001:136::-;35094:4;35126;35121:3;35117:14;35109:22;;35099:38;;;:::o;35143:184::-;35242:11;35276:6;35271:3;35264:19;35316:4;35311:3;35307:14;35292:29;;35254:73;;;;:::o;35333:184::-;35432:11;35466:6;35461:3;35454:19;35506:4;35501:3;35497:14;35482:29;;35444:73;;;;:::o;35523:194::-;35632:11;35666:6;35661:3;35654:19;35706:4;35701:3;35697:14;35682:29;;35644:73;;;;:::o;35723:207::-;35845:11;35879:6;35874:3;35867:19;35919:4;35914:3;35910:14;35895:29;;35857:73;;;;:::o;35936:159::-;36010:11;36044:6;36039:3;36032:19;36084:4;36079:3;36075:14;36060:29;;36022:73;;;;:::o;36101:169::-;36185:11;36219:6;36214:3;36207:19;36259:4;36254:3;36250:14;36235:29;;36197:73;;;;:::o;36276:148::-;36378:11;36415:3;36400:18;;36390:34;;;;:::o;36430:305::-;36470:3;36489:20;36507:1;36489:20;:::i;:::-;36484:25;;36523:20;36541:1;36523:20;:::i;:::-;36518:25;;36677:1;36609:66;36605:74;36602:1;36599:81;36596:2;;;36683:18;;:::i;:::-;36596:2;36727:1;36724;36720:9;36713:16;;36474:261;;;;:::o;36741:348::-;36781:7;36804:20;36822:1;36804:20;:::i;:::-;36799:25;;36838:20;36856:1;36838:20;:::i;:::-;36833:25;;37026:1;36958:66;36954:74;36951:1;36948:81;36943:1;36936:9;36929:17;36925:105;36922:2;;;37033:18;;:::i;:::-;36922:2;37081:1;37078;37074:9;37063:20;;36789:300;;;;:::o;37095:96::-;37132:7;37161:24;37179:5;37161:24;:::i;:::-;37150:35;;37140:51;;;:::o;37197:90::-;37231:7;37274:5;37267:13;37260:21;37249:32;;37239:48;;;:::o;37293:77::-;37330:7;37359:5;37348:16;;37338:32;;;:::o;37376:149::-;37412:7;37452:66;37445:5;37441:78;37430:89;;37420:105;;;:::o;37531:126::-;37568:7;37608:42;37601:5;37597:54;37586:65;;37576:81;;;:::o;37663:77::-;37700:7;37729:5;37718:16;;37708:32;;;:::o;37746:154::-;37830:6;37825:3;37820;37807:30;37892:1;37883:6;37878:3;37874:16;37867:27;37797:103;;;:::o;37906:307::-;37974:1;37984:113;37998:6;37995:1;37992:13;37984:113;;;38083:1;38078:3;38074:11;38068:18;38064:1;38059:3;38055:11;38048:39;38020:2;38017:1;38013:10;38008:15;;37984:113;;;38115:6;38112:1;38109:13;38106:2;;;38195:1;38186:6;38181:3;38177:16;38170:27;38106:2;37955:258;;;;:::o;38219:171::-;38258:3;38281:24;38299:5;38281:24;:::i;:::-;38272:33;;38327:4;38320:5;38317:15;38314:2;;;38335:18;;:::i;:::-;38314:2;38382:1;38375:5;38371:13;38364:20;;38262:128;;;:::o;38396:320::-;38440:6;38477:1;38471:4;38467:12;38457:22;;38524:1;38518:4;38514:12;38545:18;38535:2;;38601:4;38593:6;38589:17;38579:27;;38535:2;38663;38655:6;38652:14;38632:18;38629:38;38626:2;;;38682:18;;:::i;:::-;38626:2;38447:269;;;;:::o;38722:281::-;38805:27;38827:4;38805:27;:::i;:::-;38797:6;38793:40;38935:6;38923:10;38920:22;38899:18;38887:10;38884:34;38881:62;38878:2;;;38946:18;;:::i;:::-;38878:2;38986:10;38982:2;38975:22;38765:238;;;:::o;39009:180::-;39057:77;39054:1;39047:88;39154:4;39151:1;39144:15;39178:4;39175:1;39168:15;39195:180;39243:77;39240:1;39233:88;39340:4;39337:1;39330:15;39364:4;39361:1;39354:15;39381:180;39429:77;39426:1;39419:88;39526:4;39523:1;39516:15;39550:4;39547:1;39540:15;39567:102;39608:6;39659:2;39655:7;39650:2;39643:5;39639:14;39635:28;39625:38;;39615:54;;;:::o;39675:182::-;39815:34;39811:1;39803:6;39799:14;39792:58;39781:76;:::o;39863:225::-;40003:34;39999:1;39991:6;39987:14;39980:58;40072:8;40067:2;40059:6;40055:15;40048:33;39969:119;:::o;40094:182::-;40234:34;40230:1;40222:6;40218:14;40211:58;40200:76;:::o;40282:156::-;40422:8;40418:1;40410:6;40406:14;40399:32;40388:50;:::o;40444:173::-;40584:25;40580:1;40572:6;40568:14;40561:49;40550:67;:::o;40623:155::-;40763:7;40759:1;40751:6;40747:14;40740:31;40729:49;:::o;40784:167::-;40924:19;40920:1;40912:6;40908:14;40901:43;40890:61;:::o;40957:234::-;41097:34;41093:1;41085:6;41081:14;41074:58;41166:17;41161:2;41153:6;41149:15;41142:42;41063:128;:::o;41197:122::-;41270:24;41288:5;41270:24;:::i;:::-;41263:5;41260:35;41250:2;;41309:1;41306;41299:12;41250:2;41240:79;:::o;41325:122::-;41398:24;41416:5;41398:24;:::i;:::-;41391:5;41388:35;41378:2;;41437:1;41434;41427:12;41378:2;41368:79;:::o;41453:120::-;41525:23;41542:5;41525:23;:::i;:::-;41518:5;41515:34;41505:2;;41563:1;41560;41553:12;41505:2;41495:78;:::o;41579:122::-;41652:24;41670:5;41652:24;:::i;:::-;41645:5;41642:35;41632:2;;41691:1;41688;41681:12;41632:2;41622:79;:::o",
  "source": "pragma solidity  0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"./Registration.sol\";\r\n\r\ncontract Hospitals is Ownable, AccessControl{\r\n\r\n    struct Doctor {\r\n        string firstName;\r\n        string lastName;\r\n        uint birthDate;\r\n        string gender;\r\n        string country;\r\n        string city;\r\n        string hospital;\r\n        string specialization;\r\n        string[] skills;\r\n        address walletAddress;\r\n        uint cnp;\r\n        string _profileHash;\r\n    }\r\n\r\n    event DoctorAdd(\r\n        string firstName,\r\n        string lastName,\r\n        uint birthDate,\r\n        string gender,\r\n        string country,\r\n        string city,\r\n        string hospital,\r\n        string specialization,\r\n        string[] skills,\r\n        address walletAddress,\r\n        uint cnp,\r\n        string _profileHash\r\n    );\r\n\r\n    Registration _registration;\r\n\r\n    mapping(string => Doctor[]) doctorsInHospital;\r\n    mapping(address => Doctor) doctors;\r\n    address[] public doctorsAccounts;\r\n    mapping(address => string) encryptionPublicKeys;\r\n\r\n    constructor(address registrationA) public {\r\n        _registration = Registration(registrationA);\r\n    }\r\n\r\n    modifier onlyAdmin {\r\n      require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"ADMIN\"))));\r\n      _;\r\n    }\r\n    modifier onlyDoctor {\r\n        require(keccak256(abi.encodePacked((_registration.getRole(tx.origin)))) == keccak256(abi.encodePacked((\"DOCTOR\"))));\r\n        _;\r\n    }\r\n\r\n    function addDoctorToSystem(Doctor memory doc) public onlyAdmin{\r\n        doctors[doc.walletAddress] = doc;\r\n        doctorsAccounts.push(doc.walletAddress);\r\n        _registration.addDoctor(doc.walletAddress);\r\n        doctorsInHospital[doc.hospital].push(doctors[doc.walletAddress]);\r\n\r\n        emit DoctorAdd(doc.firstName, doc.lastName, doc.birthDate, doc.gender, doc.country, doc.city, doc.hospital,\r\n        doc.specialization, doc.skills, doc.walletAddress, doc.cnp, doc._profileHash);\r\n    }\r\n\r\n    function getDoctors() view public returns(address[] memory){\r\n        return doctorsAccounts;\r\n    }\r\n\r\n    function getDoctorsInAHospital(string memory hospital) view public returns(Doctor[] memory){\r\n        return doctorsInHospital[hospital];\r\n    }\r\n\r\n    function getDoctor(address _address) view public returns (Doctor memory){\r\n        return doctors[_address];\r\n    }\r\n\r\n    function addEncryptionKey(string memory encryptionPublicKey) public onlyDoctor{\r\n        encryptionPublicKeys[msg.sender] = encryptionPublicKey;\r\n    }\r\n\r\n    function getEncryptionPublicKey(address _address) public returns(string memory){\r\n        return encryptionPublicKeys[_address];\r\n    }\r\n}",
  "sourcePath": "C:/Licenta/Licenta/src/contracts/Hospitals.sol",
  "ast": {
    "absolutePath": "/C/Licenta/Licenta/src/contracts/Hospitals.sol",
    "exportedSymbols": {
      "AccessControl": [
        1998
      ],
      "AccessControlEnumerable": [
        2123
      ],
      "Context": [
        2504
      ],
      "ERC165": [
        2731
      ],
      "EnumerableSet": [
        3342
      ],
      "Hospitals": [
        787
      ],
      "IAccessControl": [
        2196
      ],
      "IAccessControlEnumerable": [
        2221
      ],
      "IERC165": [
        2743
      ],
      "Ownable": [
        2326
      ],
      "Registration": [
        1678
      ],
      "Strings": [
        2707
      ]
    },
    "id": 788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 510,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 511,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 2327,
        "src": "27:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 512,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 1999,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Licenta/Licenta/src/contracts/Registration.sol",
        "file": "./Registration.sol",
        "id": 513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 1679,
        "src": "141:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 514,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2326,
              "src": "195:7:2"
            },
            "id": 515,
            "nodeType": "InheritanceSpecifier",
            "src": "195:7:2"
          },
          {
            "baseName": {
              "id": 516,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1998,
              "src": "204:13:2"
            },
            "id": 517,
            "nodeType": "InheritanceSpecifier",
            "src": "204:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 787,
        "linearizedBaseContracts": [
          787,
          1998,
          2731,
          2743,
          2196,
          2326,
          2504
        ],
        "name": "Hospitals",
        "nameLocation": "182:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Hospitals.Doctor",
            "id": 543,
            "members": [
              {
                "constant": false,
                "id": 519,
                "mutability": "mutable",
                "name": "firstName",
                "nameLocation": "258:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "251:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 518,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 521,
                "mutability": "mutable",
                "name": "lastName",
                "nameLocation": "285:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "278:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 520,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "278:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 523,
                "mutability": "mutable",
                "name": "birthDate",
                "nameLocation": "309:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "304:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 522,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 525,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "336:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "329:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 524,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 527,
                "mutability": "mutable",
                "name": "country",
                "nameLocation": "360:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "353:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 526,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 529,
                "mutability": "mutable",
                "name": "city",
                "nameLocation": "385:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "378:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 528,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 531,
                "mutability": "mutable",
                "name": "hospital",
                "nameLocation": "407:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "400:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 530,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "400:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 533,
                "mutability": "mutable",
                "name": "specialization",
                "nameLocation": "433:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "426:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 532,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 536,
                "mutability": "mutable",
                "name": "skills",
                "nameLocation": "467:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "458:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 535,
                  "nodeType": "ArrayTypeName",
                  "src": "458:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 538,
                "mutability": "mutable",
                "name": "walletAddress",
                "nameLocation": "492:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "484:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 537,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "484:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 540,
                "mutability": "mutable",
                "name": "cnp",
                "nameLocation": "521:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "516:8:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 539,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 542,
                "mutability": "mutable",
                "name": "_profileHash",
                "nameLocation": "542:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "535:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 541,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nameLocation": "233:6:2",
            "nodeType": "StructDefinition",
            "scope": 787,
            "src": "226:336:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 570,
            "name": "DoctorAdd",
            "nameLocation": "576:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstName",
                  "nameLocation": "603:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "596:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastName",
                  "nameLocation": "630:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "623:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "birthDate",
                  "nameLocation": "654:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "649:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gender",
                  "nameLocation": "681:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "674:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "705:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "698:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "city",
                  "nameLocation": "730:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "723:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hospital",
                  "nameLocation": "752:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "745:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "specialization",
                  "nameLocation": "778:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "771:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "skills",
                  "nameLocation": "812:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "803:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 560,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "803:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 561,
                    "nodeType": "ArrayTypeName",
                    "src": "803:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "walletAddress",
                  "nameLocation": "837:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "829:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cnp",
                  "nameLocation": "866:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "861:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_profileHash",
                  "nameLocation": "887:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "880:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:321:2"
            },
            "src": "570:337:2"
          },
          {
            "constant": false,
            "id": 573,
            "mutability": "mutable",
            "name": "_registration",
            "nameLocation": "928:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "915:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registration_$1678",
              "typeString": "contract Registration"
            },
            "typeName": {
              "id": 572,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 571,
                "name": "Registration",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1678,
                "src": "915:12:2"
              },
              "referencedDeclaration": 1678,
              "src": "915:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registration_$1678",
                "typeString": "contract Registration"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 579,
            "mutability": "mutable",
            "name": "doctorsInHospital",
            "nameLocation": "978:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "950:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
              "typeString": "mapping(string => struct Hospitals.Doctor[])"
            },
            "typeName": {
              "id": 578,
              "keyType": {
                "id": 574,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "958:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "950:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                "typeString": "mapping(string => struct Hospitals.Doctor[])"
              },
              "valueType": {
                "baseType": {
                  "id": 576,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 575,
                    "name": "Doctor",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 543,
                    "src": "968:6:2"
                  },
                  "referencedDeclaration": 543,
                  "src": "968:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  }
                },
                "id": 577,
                "nodeType": "ArrayTypeName",
                "src": "968:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr",
                  "typeString": "struct Hospitals.Doctor[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 584,
            "mutability": "mutable",
            "name": "doctors",
            "nameLocation": "1029:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1002:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
              "typeString": "mapping(address => struct Hospitals.Doctor)"
            },
            "typeName": {
              "id": 583,
              "keyType": {
                "id": 580,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1010:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1002:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                "typeString": "mapping(address => struct Hospitals.Doctor)"
              },
              "valueType": {
                "id": 582,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 581,
                  "name": "Doctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "1021:6:2"
                },
                "referencedDeclaration": 543,
                "src": "1021:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                  "typeString": "struct Hospitals.Doctor"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "33fff834",
            "id": 587,
            "mutability": "mutable",
            "name": "doctorsAccounts",
            "nameLocation": "1060:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1043:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 585,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1043:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 586,
              "nodeType": "ArrayTypeName",
              "src": "1043:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 591,
            "mutability": "mutable",
            "name": "encryptionPublicKeys",
            "nameLocation": "1109:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1082:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 590,
              "keyType": {
                "id": 588,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1090:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1082:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 589,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1101:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "1180:62:2",
              "statements": [
                {
                  "expression": {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "_registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "1191:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1678",
                        "typeString": "contract Registration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 598,
                          "name": "registrationA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 593,
                          "src": "1220:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 597,
                        "name": "Registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "1207:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registration_$1678_$",
                          "typeString": "type(contract Registration)"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1207:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1678",
                        "typeString": "contract Registration"
                      }
                    },
                    "src": "1191:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registration_$1678",
                      "typeString": "contract Registration"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:43:2"
                }
              ]
            },
            "id": 603,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "registrationA",
                  "nameLocation": "1158:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1150:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:23:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:2"
            },
            "scope": 787,
            "src": "1138:104:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1269:141:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 611,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1336:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 612,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1336:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 609,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 573,
                                          "src": "1314:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1678",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 610,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1677,
                                        "src": "1314:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1314:32:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 614,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1313:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 607,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1296:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1296:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:52:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 606,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1286:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1286:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "41444d494e",
                                      "id": 620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1381:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                        "typeString": "literal_string \"ADMIN\""
                                      },
                                      "value": "ADMIN"
                                    }
                                  ],
                                  "id": 621,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1380:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                ],
                                "expression": {
                                  "id": 618,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1363:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1363:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1363:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 617,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1353:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1353:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1286:105:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1278:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:114:2"
                },
                {
                  "id": 627,
                  "nodeType": "PlaceholderStatement",
                  "src": "1401:1:2"
                }
              ]
            },
            "id": 629,
            "name": "onlyAdmin",
            "nameLocation": "1259:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:2"
            },
            "src": "1250:160:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1436:146:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 637,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1505:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 638,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1505:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 635,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 573,
                                          "src": "1483:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1678",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 636,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1677,
                                        "src": "1483:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1483:32:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 640,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1482:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 633,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1465:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1465:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1465:52:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 632,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1455:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "444f43544f52",
                                      "id": 646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1550:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                        "typeString": "literal_string \"DOCTOR\""
                                      },
                                      "value": "DOCTOR"
                                    }
                                  ],
                                  "id": 647,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1549:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                ],
                                "expression": {
                                  "id": 644,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1532:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1532:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1532:28:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 643,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1522:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1522:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1455:106:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1447:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:115:2"
                },
                {
                  "id": 653,
                  "nodeType": "PlaceholderStatement",
                  "src": "1573:1:2"
                }
              ]
            },
            "id": 655,
            "name": "onlyDoctor",
            "nameLocation": "1425:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:2"
            },
            "src": "1416:166:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "1652:436:2",
              "statements": [
                {
                  "expression": {
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 663,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "1663:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                          "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                        }
                      },
                      "id": 666,
                      "indexExpression": {
                        "expression": {
                          "id": 664,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1671:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1671:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1663:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_storage",
                        "typeString": "struct Hospitals.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 667,
                      "name": "doc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "1692:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                        "typeString": "struct Hospitals.Doctor memory"
                      }
                    },
                    "src": "1663:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage",
                      "typeString": "struct Hospitals.Doctor storage ref"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 673,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1727:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1727:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 670,
                        "name": "doctorsAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "1706:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1706:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 680,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1780:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1780:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 677,
                        "name": "_registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1756:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registration_$1678",
                          "typeString": "contract Registration"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addDoctor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1607,
                      "src": "1756:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 689,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "1846:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                            "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                          }
                        },
                        "id": 692,
                        "indexExpression": {
                          "expression": {
                            "id": 690,
                            "name": "doc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "1854:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                              "typeString": "struct Hospitals.Doctor memory"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "walletAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 538,
                          "src": "1854:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1846:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$543_storage",
                          "typeString": "struct Hospitals.Doctor storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Doctor_$543_storage",
                          "typeString": "struct Hospitals.Doctor storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 684,
                          "name": "doctorsInHospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "1809:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                            "typeString": "mapping(string memory => struct Hospitals.Doctor storage ref[] storage ref)"
                          }
                        },
                        "id": 687,
                        "indexExpression": {
                          "expression": {
                            "id": 685,
                            "name": "doc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "1827:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                              "typeString": "struct Hospitals.Doctor memory"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hospital",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 531,
                          "src": "1827:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1809:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage",
                          "typeString": "struct Hospitals.Doctor storage ref[] storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1809:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr_$_t_struct$_Doctor_$543_storage_$returns$__$bound_to$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Hospitals.Doctor storage ref[] storage pointer,struct Hospitals.Doctor storage ref)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:64:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 696,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1901:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "firstName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "1901:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 698,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1916:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1916:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 700,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1930:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "birthDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 523,
                        "src": "1930:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 702,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1945:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 525,
                        "src": "1945:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 704,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1957:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "country",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 527,
                        "src": "1957:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 706,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1970:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "city",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 529,
                        "src": "1970:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 708,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1980:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hospital",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 531,
                        "src": "1980:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 710,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2003:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialization",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 533,
                        "src": "2003:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 712,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2023:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skills",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 536,
                        "src": "2023:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 714,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2035:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "2035:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 716,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2054:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cnp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 540,
                        "src": "2054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 718,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2063:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_profileHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 542,
                        "src": "2063:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 695,
                      "name": "DoctorAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1891:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,string memory,string memory,string memory,string memory,string memory,string memory[] memory,address,uint256,string memory)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:189:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "EmitStatement",
                  "src": "1886:194:2"
                }
              ]
            },
            "functionSelector": "4d69fd3b",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 629,
                  "src": "1643:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1643:9:2"
              }
            ],
            "name": "addDoctorToSystem",
            "nameLocation": "1599:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "doc",
                  "nameLocation": "1631:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "1617:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  },
                  "typeName": {
                    "id": 657,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 656,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 543,
                      "src": "1617:6:2"
                    },
                    "referencedDeclaration": 543,
                    "src": "1617:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                      "typeString": "struct Hospitals.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:19:2"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:2"
            },
            "scope": 787,
            "src": "1590:498:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "2155:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 729,
                    "name": "doctorsAccounts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "2173:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 728,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "2166:22:2"
                }
              ]
            },
            "functionSelector": "b13d5d94",
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctors",
            "nameLocation": "2105:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:2"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2138:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 725,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2138:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 726,
                    "nodeType": "ArrayTypeName",
                    "src": "2138:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:18:2"
            },
            "scope": 787,
            "src": "2096:100:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "2295:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 741,
                      "name": "doctorsInHospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "2313:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                        "typeString": "mapping(string memory => struct Hospitals.Doctor storage ref[] storage ref)"
                      }
                    },
                    "id": 743,
                    "indexExpression": {
                      "id": 742,
                      "name": "hospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "2331:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2313:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage",
                      "typeString": "struct Hospitals.Doctor storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 740,
                  "id": 744,
                  "nodeType": "Return",
                  "src": "2306:34:2"
                }
              ]
            },
            "functionSelector": "86ba5fcd",
            "id": 746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctorsInAHospital",
            "nameLocation": "2213:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "hospital",
                  "nameLocation": "2249:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "2235:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2234:24:2"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "2279:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Doctor_$543_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Hospitals.Doctor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 737,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 736,
                        "name": "Doctor",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 543,
                        "src": "2279:6:2"
                      },
                      "referencedDeclaration": 543,
                      "src": "2279:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                        "typeString": "struct Hospitals.Doctor"
                      }
                    },
                    "id": 738,
                    "nodeType": "ArrayTypeName",
                    "src": "2279:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr",
                      "typeString": "struct Hospitals.Doctor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:17:2"
            },
            "scope": 787,
            "src": "2204:144:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "2428:43:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 754,
                      "name": "doctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "2446:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                        "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "id": 755,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 748,
                      "src": "2454:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2446:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage",
                      "typeString": "struct Hospitals.Doctor storage ref"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 757,
                  "nodeType": "Return",
                  "src": "2439:24:2"
                }
              ]
            },
            "functionSelector": "2f04e064",
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctor",
            "nameLocation": "2365:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2383:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "2375:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2374:18:2"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "2414:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  },
                  "typeName": {
                    "id": 751,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 750,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 543,
                      "src": "2414:6:2"
                    },
                    "referencedDeclaration": 543,
                    "src": "2414:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                      "typeString": "struct Hospitals.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:15:2"
            },
            "scope": 787,
            "src": "2356:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "2557:73:2",
              "statements": [
                {
                  "expression": {
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 766,
                        "name": "encryptionPublicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2568:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 769,
                      "indexExpression": {
                        "expression": {
                          "id": 767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2589:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2589:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2568:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 770,
                      "name": "encryptionPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "2603:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2568:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:54:2"
                }
              ]
            },
            "functionSelector": "0f8d66c4",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 763,
                  "name": "onlyDoctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "2547:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2547:10:2"
              }
            ],
            "name": "addEncryptionKey",
            "nameLocation": "2488:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "encryptionPublicKey",
                  "nameLocation": "2519:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "2505:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:35:2"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:2"
            },
            "scope": 787,
            "src": "2479:151:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "2717:56:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 781,
                      "name": "encryptionPublicKeys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "2735:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                        "typeString": "mapping(address => string storage ref)"
                      }
                    },
                    "id": 783,
                    "indexExpression": {
                      "id": 782,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "2756:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2735:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 780,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "2728:37:2"
                }
              ]
            },
            "functionSelector": "7d9f7b19",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEncryptionPublicKey",
            "nameLocation": "2647:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2678:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "2670:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2669:18:2"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "2703:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2702:15:2"
            },
            "scope": 787,
            "src": "2638:135:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 788,
        "src": "173:2603:2",
        "usedErrors": []
      }
    ],
    "src": "0:2776:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Licenta/Licenta/src/contracts/Hospitals.sol",
    "exportedSymbols": {
      "AccessControl": [
        1998
      ],
      "AccessControlEnumerable": [
        2123
      ],
      "Context": [
        2504
      ],
      "ERC165": [
        2731
      ],
      "EnumerableSet": [
        3342
      ],
      "Hospitals": [
        787
      ],
      "IAccessControl": [
        2196
      ],
      "IAccessControlEnumerable": [
        2221
      ],
      "IERC165": [
        2743
      ],
      "Ownable": [
        2326
      ],
      "Registration": [
        1678
      ],
      "Strings": [
        2707
      ]
    },
    "id": 788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 510,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 511,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 2327,
        "src": "27:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 512,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 1999,
        "src": "81:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Licenta/Licenta/src/contracts/Registration.sol",
        "file": "./Registration.sol",
        "id": 513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 1679,
        "src": "141:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 514,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2326,
              "src": "195:7:2"
            },
            "id": 515,
            "nodeType": "InheritanceSpecifier",
            "src": "195:7:2"
          },
          {
            "baseName": {
              "id": 516,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1998,
              "src": "204:13:2"
            },
            "id": 517,
            "nodeType": "InheritanceSpecifier",
            "src": "204:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 787,
        "linearizedBaseContracts": [
          787,
          1998,
          2731,
          2743,
          2196,
          2326,
          2504
        ],
        "name": "Hospitals",
        "nameLocation": "182:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Hospitals.Doctor",
            "id": 543,
            "members": [
              {
                "constant": false,
                "id": 519,
                "mutability": "mutable",
                "name": "firstName",
                "nameLocation": "258:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "251:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 518,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 521,
                "mutability": "mutable",
                "name": "lastName",
                "nameLocation": "285:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "278:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 520,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "278:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 523,
                "mutability": "mutable",
                "name": "birthDate",
                "nameLocation": "309:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "304:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 522,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 525,
                "mutability": "mutable",
                "name": "gender",
                "nameLocation": "336:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "329:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 524,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 527,
                "mutability": "mutable",
                "name": "country",
                "nameLocation": "360:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "353:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 526,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 529,
                "mutability": "mutable",
                "name": "city",
                "nameLocation": "385:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "378:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 528,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 531,
                "mutability": "mutable",
                "name": "hospital",
                "nameLocation": "407:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "400:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 530,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "400:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 533,
                "mutability": "mutable",
                "name": "specialization",
                "nameLocation": "433:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "426:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 532,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 536,
                "mutability": "mutable",
                "name": "skills",
                "nameLocation": "467:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "458:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 535,
                  "nodeType": "ArrayTypeName",
                  "src": "458:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 538,
                "mutability": "mutable",
                "name": "walletAddress",
                "nameLocation": "492:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "484:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 537,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "484:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 540,
                "mutability": "mutable",
                "name": "cnp",
                "nameLocation": "521:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "516:8:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 539,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 542,
                "mutability": "mutable",
                "name": "_profileHash",
                "nameLocation": "542:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 543,
                "src": "535:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 541,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nameLocation": "233:6:2",
            "nodeType": "StructDefinition",
            "scope": 787,
            "src": "226:336:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 570,
            "name": "DoctorAdd",
            "nameLocation": "576:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstName",
                  "nameLocation": "603:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "596:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastName",
                  "nameLocation": "630:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "623:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "birthDate",
                  "nameLocation": "654:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "649:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gender",
                  "nameLocation": "681:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "674:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "705:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "698:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "city",
                  "nameLocation": "730:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "723:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hospital",
                  "nameLocation": "752:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "745:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "specialization",
                  "nameLocation": "778:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "771:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "skills",
                  "nameLocation": "812:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "803:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 560,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "803:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 561,
                    "nodeType": "ArrayTypeName",
                    "src": "803:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "walletAddress",
                  "nameLocation": "837:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "829:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cnp",
                  "nameLocation": "866:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "861:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_profileHash",
                  "nameLocation": "887:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "880:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:321:2"
            },
            "src": "570:337:2"
          },
          {
            "constant": false,
            "id": 573,
            "mutability": "mutable",
            "name": "_registration",
            "nameLocation": "928:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "915:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registration_$1678",
              "typeString": "contract Registration"
            },
            "typeName": {
              "id": 572,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 571,
                "name": "Registration",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1678,
                "src": "915:12:2"
              },
              "referencedDeclaration": 1678,
              "src": "915:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registration_$1678",
                "typeString": "contract Registration"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 579,
            "mutability": "mutable",
            "name": "doctorsInHospital",
            "nameLocation": "978:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "950:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
              "typeString": "mapping(string => struct Hospitals.Doctor[])"
            },
            "typeName": {
              "id": 578,
              "keyType": {
                "id": 574,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "958:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "950:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                "typeString": "mapping(string => struct Hospitals.Doctor[])"
              },
              "valueType": {
                "baseType": {
                  "id": 576,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 575,
                    "name": "Doctor",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 543,
                    "src": "968:6:2"
                  },
                  "referencedDeclaration": 543,
                  "src": "968:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  }
                },
                "id": 577,
                "nodeType": "ArrayTypeName",
                "src": "968:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr",
                  "typeString": "struct Hospitals.Doctor[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 584,
            "mutability": "mutable",
            "name": "doctors",
            "nameLocation": "1029:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1002:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
              "typeString": "mapping(address => struct Hospitals.Doctor)"
            },
            "typeName": {
              "id": 583,
              "keyType": {
                "id": 580,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1010:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1002:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                "typeString": "mapping(address => struct Hospitals.Doctor)"
              },
              "valueType": {
                "id": 582,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 581,
                  "name": "Doctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 543,
                  "src": "1021:6:2"
                },
                "referencedDeclaration": 543,
                "src": "1021:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                  "typeString": "struct Hospitals.Doctor"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "33fff834",
            "id": 587,
            "mutability": "mutable",
            "name": "doctorsAccounts",
            "nameLocation": "1060:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1043:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 585,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1043:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 586,
              "nodeType": "ArrayTypeName",
              "src": "1043:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 591,
            "mutability": "mutable",
            "name": "encryptionPublicKeys",
            "nameLocation": "1109:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "1082:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 590,
              "keyType": {
                "id": 588,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1090:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1082:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 589,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1101:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "1180:62:2",
              "statements": [
                {
                  "expression": {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "_registration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "1191:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1678",
                        "typeString": "contract Registration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 598,
                          "name": "registrationA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 593,
                          "src": "1220:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 597,
                        "name": "Registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "1207:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registration_$1678_$",
                          "typeString": "type(contract Registration)"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1207:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registration_$1678",
                        "typeString": "contract Registration"
                      }
                    },
                    "src": "1191:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registration_$1678",
                      "typeString": "contract Registration"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:43:2"
                }
              ]
            },
            "id": 603,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "registrationA",
                  "nameLocation": "1158:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "1150:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:23:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:2"
            },
            "scope": 787,
            "src": "1138:104:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1269:141:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 611,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1336:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 612,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1336:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 609,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 573,
                                          "src": "1314:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1678",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 610,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1677,
                                        "src": "1314:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1314:32:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 614,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1313:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 607,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1296:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1296:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:52:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 606,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1286:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1286:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "41444d494e",
                                      "id": 620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1381:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                        "typeString": "literal_string \"ADMIN\""
                                      },
                                      "value": "ADMIN"
                                    }
                                  ],
                                  "id": 621,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1380:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                                    "typeString": "literal_string \"ADMIN\""
                                  }
                                ],
                                "expression": {
                                  "id": 618,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1363:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1363:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1363:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 617,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1353:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1353:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1286:105:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1278:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:114:2"
                },
                {
                  "id": 627,
                  "nodeType": "PlaceholderStatement",
                  "src": "1401:1:2"
                }
              ]
            },
            "id": 629,
            "name": "onlyAdmin",
            "nameLocation": "1259:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:2"
            },
            "src": "1250:160:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1436:146:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 637,
                                            "name": "tx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967270,
                                            "src": "1505:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_transaction",
                                              "typeString": "tx"
                                            }
                                          },
                                          "id": 638,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "origin",
                                          "nodeType": "MemberAccess",
                                          "src": "1505:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 635,
                                          "name": "_registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 573,
                                          "src": "1483:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Registration_$1678",
                                            "typeString": "contract Registration"
                                          }
                                        },
                                        "id": 636,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getRole",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1677,
                                        "src": "1483:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (address) view external returns (string memory)"
                                        }
                                      },
                                      "id": 639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1483:32:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 640,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1482:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 633,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1465:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1465:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1465:52:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 632,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1455:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "hexValue": "444f43544f52",
                                      "id": 646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1550:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                        "typeString": "literal_string \"DOCTOR\""
                                      },
                                      "value": "DOCTOR"
                                    }
                                  ],
                                  "id": 647,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1549:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c9c8e67a61d2e7371df46522b44051b955c16bf4b713ef44e1373b25bfcd80b2",
                                    "typeString": "literal_string \"DOCTOR\""
                                  }
                                ],
                                "expression": {
                                  "id": 644,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1532:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1532:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1532:28:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 643,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1522:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1522:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1455:106:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1447:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:115:2"
                },
                {
                  "id": 653,
                  "nodeType": "PlaceholderStatement",
                  "src": "1573:1:2"
                }
              ]
            },
            "id": 655,
            "name": "onlyDoctor",
            "nameLocation": "1425:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:2"
            },
            "src": "1416:166:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "1652:436:2",
              "statements": [
                {
                  "expression": {
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 663,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "1663:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                          "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                        }
                      },
                      "id": 666,
                      "indexExpression": {
                        "expression": {
                          "id": 664,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1671:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1671:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1663:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_storage",
                        "typeString": "struct Hospitals.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 667,
                      "name": "doc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "1692:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                        "typeString": "struct Hospitals.Doctor memory"
                      }
                    },
                    "src": "1663:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage",
                      "typeString": "struct Hospitals.Doctor storage ref"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 673,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1727:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1727:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 670,
                        "name": "doctorsAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "1706:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1706:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 680,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1780:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "1780:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 677,
                        "name": "_registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1756:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registration_$1678",
                          "typeString": "contract Registration"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addDoctor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1607,
                      "src": "1756:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 689,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "1846:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                            "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                          }
                        },
                        "id": 692,
                        "indexExpression": {
                          "expression": {
                            "id": 690,
                            "name": "doc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "1854:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                              "typeString": "struct Hospitals.Doctor memory"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "walletAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 538,
                          "src": "1854:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1846:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$543_storage",
                          "typeString": "struct Hospitals.Doctor storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Doctor_$543_storage",
                          "typeString": "struct Hospitals.Doctor storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 684,
                          "name": "doctorsInHospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "1809:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                            "typeString": "mapping(string memory => struct Hospitals.Doctor storage ref[] storage ref)"
                          }
                        },
                        "id": 687,
                        "indexExpression": {
                          "expression": {
                            "id": 685,
                            "name": "doc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "1827:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                              "typeString": "struct Hospitals.Doctor memory"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hospital",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 531,
                          "src": "1827:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1809:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage",
                          "typeString": "struct Hospitals.Doctor storage ref[] storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1809:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr_$_t_struct$_Doctor_$543_storage_$returns$__$bound_to$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Hospitals.Doctor storage ref[] storage pointer,struct Hospitals.Doctor storage ref)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:64:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 696,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1901:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "firstName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "1901:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 698,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1916:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1916:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 700,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1930:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "birthDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 523,
                        "src": "1930:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 702,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1945:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 525,
                        "src": "1945:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 704,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1957:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "country",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 527,
                        "src": "1957:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 706,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1970:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "city",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 529,
                        "src": "1970:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 708,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "1980:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hospital",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 531,
                        "src": "1980:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 710,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2003:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialization",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 533,
                        "src": "2003:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 712,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2023:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skills",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 536,
                        "src": "2023:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 714,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2035:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "walletAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 538,
                        "src": "2035:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 716,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2054:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cnp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 540,
                        "src": "2054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 718,
                          "name": "doc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "2063:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                            "typeString": "struct Hospitals.Doctor memory"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_profileHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 542,
                        "src": "2063:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 695,
                      "name": "DoctorAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1891:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,string memory,string memory,string memory,string memory,string memory,string memory[] memory,address,uint256,string memory)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:189:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "EmitStatement",
                  "src": "1886:194:2"
                }
              ]
            },
            "functionSelector": "4d69fd3b",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 661,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 660,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 629,
                  "src": "1643:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1643:9:2"
              }
            ],
            "name": "addDoctorToSystem",
            "nameLocation": "1599:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "doc",
                  "nameLocation": "1631:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "1617:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  },
                  "typeName": {
                    "id": 657,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 656,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 543,
                      "src": "1617:6:2"
                    },
                    "referencedDeclaration": 543,
                    "src": "1617:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                      "typeString": "struct Hospitals.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:19:2"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:2"
            },
            "scope": 787,
            "src": "1590:498:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "2155:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 729,
                    "name": "doctorsAccounts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "2173:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 728,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "2166:22:2"
                }
              ]
            },
            "functionSelector": "b13d5d94",
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctors",
            "nameLocation": "2105:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:2"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2138:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 725,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2138:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 726,
                    "nodeType": "ArrayTypeName",
                    "src": "2138:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:18:2"
            },
            "scope": 787,
            "src": "2096:100:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "2295:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 741,
                      "name": "doctorsInHospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "2313:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_$",
                        "typeString": "mapping(string memory => struct Hospitals.Doctor storage ref[] storage ref)"
                      }
                    },
                    "id": 743,
                    "indexExpression": {
                      "id": 742,
                      "name": "hospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "2331:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2313:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage",
                      "typeString": "struct Hospitals.Doctor storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 740,
                  "id": 744,
                  "nodeType": "Return",
                  "src": "2306:34:2"
                }
              ]
            },
            "functionSelector": "86ba5fcd",
            "id": 746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctorsInAHospital",
            "nameLocation": "2213:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "hospital",
                  "nameLocation": "2249:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "2235:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2234:24:2"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "2279:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Doctor_$543_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Hospitals.Doctor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 737,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 736,
                        "name": "Doctor",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 543,
                        "src": "2279:6:2"
                      },
                      "referencedDeclaration": 543,
                      "src": "2279:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                        "typeString": "struct Hospitals.Doctor"
                      }
                    },
                    "id": 738,
                    "nodeType": "ArrayTypeName",
                    "src": "2279:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$543_storage_$dyn_storage_ptr",
                      "typeString": "struct Hospitals.Doctor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2278:17:2"
            },
            "scope": 787,
            "src": "2204:144:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "2428:43:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 754,
                      "name": "doctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "2446:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$543_storage_$",
                        "typeString": "mapping(address => struct Hospitals.Doctor storage ref)"
                      }
                    },
                    "id": 756,
                    "indexExpression": {
                      "id": 755,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 748,
                      "src": "2454:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2446:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage",
                      "typeString": "struct Hospitals.Doctor storage ref"
                    }
                  },
                  "functionReturnParameters": 753,
                  "id": 757,
                  "nodeType": "Return",
                  "src": "2439:24:2"
                }
              ]
            },
            "functionSelector": "2f04e064",
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctor",
            "nameLocation": "2365:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2383:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "2375:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2374:18:2"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "2414:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$543_memory_ptr",
                    "typeString": "struct Hospitals.Doctor"
                  },
                  "typeName": {
                    "id": 751,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 750,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 543,
                      "src": "2414:6:2"
                    },
                    "referencedDeclaration": 543,
                    "src": "2414:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$543_storage_ptr",
                      "typeString": "struct Hospitals.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:15:2"
            },
            "scope": 787,
            "src": "2356:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "2557:73:2",
              "statements": [
                {
                  "expression": {
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 766,
                        "name": "encryptionPublicKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2568:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 769,
                      "indexExpression": {
                        "expression": {
                          "id": 767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2589:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2589:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2568:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 770,
                      "name": "encryptionPublicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "2603:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2568:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:54:2"
                }
              ]
            },
            "functionSelector": "0f8d66c4",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 763,
                  "name": "onlyDoctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "2547:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2547:10:2"
              }
            ],
            "name": "addEncryptionKey",
            "nameLocation": "2488:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "encryptionPublicKey",
                  "nameLocation": "2519:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "2505:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2504:35:2"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:2"
            },
            "scope": 787,
            "src": "2479:151:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "2717:56:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 781,
                      "name": "encryptionPublicKeys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "2735:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                        "typeString": "mapping(address => string storage ref)"
                      }
                    },
                    "id": 783,
                    "indexExpression": {
                      "id": 782,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "2756:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2735:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 780,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "2728:37:2"
                }
              ]
            },
            "functionSelector": "7d9f7b19",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEncryptionPublicKey",
            "nameLocation": "2647:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2678:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "2670:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2669:18:2"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "2703:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2702:15:2"
            },
            "scope": 787,
            "src": "2638:135:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 788,
        "src": "173:2603:2",
        "usedErrors": []
      }
    ],
    "src": "0:2776:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x6de443a130019ea936f85998b3cd988234c2406f4615105f328e80fab539f206": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_profileHash",
              "type": "string"
            }
          ],
          "name": "DoctorAdd",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf64945b4aA11CCf236B984B2085C41fea1B54ef0",
      "transactionHash": "0xd3eed36f92bc9cba68b87604d8ec1b359da58f9fd25d3c84a1a97797569b8d03"
    },
    "5777": {
      "events": {
        "0x68f5b9eb3fdb8f3c0d5a70471d243550afc70a98f77c2242a30d17b063f0d15e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            }
          ],
          "name": "DoctorSet",
          "type": "event"
        },
        "0x07a31f6541cbb794e863d21134c8b8e1f7de0e2ff50a2eb9ca437768845e17ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "hostpitalId",
              "type": "uint256"
            }
          ],
          "name": "DoctorAdd",
          "type": "event"
        },
        "0xa71e76d3ef3a17c80008993b11701fd4fbc9e5433db74c4fea884ba64d5e3caa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "HospitalAdd",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x6940c8326ab77590bca446cd4868778ecce2ffb9b0497f58ada48765cbeb8a41": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_address",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            }
          ],
          "name": "DoctorAdd",
          "type": "event"
        },
        "0x6de443a130019ea936f85998b3cd988234c2406f4615105f328e80fab539f206": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "firstName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "lastName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "birthDate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gender",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string[]",
              "name": "skills",
              "type": "string[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "cnp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_profileHash",
              "type": "string"
            }
          ],
          "name": "DoctorAdd",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5e485BeA19132585EA6399B60A68bd85162C976B",
      "transactionHash": "0xee3da2187813e3e0343d167693b59c5f4d76a97cec9187e3d955f78963260a48"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-07-06T20:00:40.692Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}